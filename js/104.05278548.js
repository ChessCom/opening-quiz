"use strict";(self["webpackChunkopening_quiz"]=self["webpackChunkopening_quiz"]||[]).push([[104],{6104:function(n,e,t){t.r(e),t.d(e,{create:function(){return p}});var i=t(2198),o=t(8493);function a(n){const{api:e}=n;return function(){if(!e.isAtEndOfLine())if(e.getMode().getOptions().canModifyExistingMovesOnMainLine){const{line:n,move:t}=(0,o.t)(e.getRelativeNode());e.deletePosition(t,n)}else e.selectLineEnd()}}var r,u=t(2071);function s(n){const{api:e}=n,t=a(n);return function(){e.isGameOver()&&e.getMode().getOptions().canMoveWhenGameIsOver&&e.setResult(u.Z.Results.None),t()}}function c(){return{apiOverrides:{move:{handler:s,run:"before",order:9}},name:r.Plugin.Name}}(n=>{(n=>{n.Name="playing"})(n.Plugin||(n.Plugin={}))})(r||(r={}));var d=t(1495);function l({api:n,canMoveWhenNotPlayerTurn:e,modeOptions:t}){const{canAddMovesToMainLine:i,canMoveWhenGameIsOver:o,canModifyExistingMovesOnMainLine:a}=t;return Boolean((o||!n.isGameOver())&&(i&&n.isAtEndOfLine()||a)&&(e||n.getPlayingAs()===n.getTurn()))}var f=t(805);function v({api:n}){return{handleIllegalMove:(0,f.I)(n),isAllowedToMove:e,name:d.d.Types.Playing,plugins:[c()],overridableMethods:["isAllowedToMove"],usePlayingAs:!0};function e(){return l({api:n,canMoveWhenNotPlayerTurn:!1,modeOptions:n.getMode().getOptions()})}}const p=(0,i.k)(v,{canAddMovesToMainLine:{default:!0,editable:!0},canMoveWhenGameIsOver:{default:!1,editable:!0},canInteractWithPieces:{default:!0,editable:!0},canModifyExistingMovesOnMainLine:{default:!1,editable:!0}})},2198:function(n,e,t){t.d(e,{k:function(){return u}});var i=t(6352),o=t(813);function a(n,e){return function(t){const i=Object.entries(t).map((([t,i])=>{var o;if(!i||!(null==(o=n.overridableMethods)?void 0:o.includes(t)))return;const a=n[t];return n[t]=i(n,e),function(){n[t]=a}}));return function(){i.map((n=>null==n?void 0:n()))}}}function r({base:n,initialOptions:e}){return function(t){const r=Object.keys(e).reduce(((n,t)=>(n[t]=e[t].default,n)),{}),u=n({api:t,options:r}),c=a(u,t);return Object.assign(u,{extendMode:c,getOptions:d,setOption:l});function d(){return r}function l(n,a){var u;(null==(u=e[n])?void 0:u.editable)?(r[n]=a,t.emit(i.i.OptionsEvents.UpdateMode,(0,o.e)(i.i.OptionsEvents.UpdateMode,{[n]:a}))):s(n)}}}function u(n,e){return function(t={}){const i=Object.keys(t).reduce(((n,i)=>{var o;return(null==(o=e[i])?void 0:o.editable)?Object.assign(n,{[i]:{default:t[i],editable:!0}}):s(i),n}),e);return r({base:n,initialOptions:i})}}function s(n){console.warn(`${n} is not an editable option in this mode.`)}},8493:function(n,e,t){t.d(e,{t:function(){return o}});var i=t(7593);function o(n){return(0,i.L)(n)?{line:n.ids.line,move:n.ids.move+1}:{line:0,move:0}}},805:function(n,e,t){function i(n){return function(){n.isAtEndOfLine()||n.selectLineEnd()}}t.d(e,{I:function(){return i}})}}]);
//# sourceMappingURL=104.05278548.js.map