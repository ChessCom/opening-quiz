{"version":3,"file":"js/940.4a3589ed.js","mappings":"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","sources":["webpack://opening-quiz/../../src/chessboard/plugins/custom-items/config/types.ts","webpack://opening-quiz/../../src/chessboard/renderers/webgl/base/pieces/find-piece-from-file-rank.ts","webpack://opening-quiz/../../src/chessboard/renderers/model/animator/easing/ease-quartic.ts","webpack://opening-quiz/../../src/chessboard/plugins/effects/renderer/types.ts","webpack://opening-quiz/../../src/chessboard/model/arrows/calculate-arrow-slope.ts","webpack://opening-quiz/../../src/utils/get-webgl-asset-url.ts","webpack://opening-quiz/../../src/chessboard/model/board/get-file-rank-from-san.ts","webpack://opening-quiz/../../src/chessboard/renderers/model/animator/easing/ease-quadratic.ts","webpack://opening-quiz/../../src/chessboard/renderers/webgl/base/utils/set-svg-attributes.ts","webpack://opening-quiz/../../src/chessboard/model/arrows/get-knight-arrow-rotation.ts","webpack://opening-quiz/../../src/chessboard/plugins/theme-takeover/config/types.ts","webpack://opening-quiz/../../src/chessboard/renderers/model/animator/easing/ease-linear.ts","webpack://opening-quiz/../../src/chessboard/plugins/effects/renderer/icons/alternative.ts","webpack://opening-quiz/../../src/chessboard/plugins/effects/renderer/icons/best-move.ts","webpack://opening-quiz/../../src/chessboard/plugins/effects/renderer/icons/blunder.ts","webpack://opening-quiz/../../src/chessboard/plugins/effects/renderer/icons/book.ts","webpack://opening-quiz/../../src/chessboard/plugins/effects/renderer/icons/brilliant.ts","webpack://opening-quiz/../../src/chessboard/plugins/effects/renderer/icons/checkmate-black.ts","webpack://opening-quiz/../../src/chessboard/plugins/effects/renderer/icons/checkmate-white.ts","webpack://opening-quiz/../../src/chessboard/plugins/effects/renderer/icons/correct.ts","webpack://opening-quiz/../../src/chessboard/plugins/effects/renderer/icons/critical.ts","webpack://opening-quiz/../../src/chessboard/plugins/effects/renderer/icons/defeat-black.ts","webpack://opening-quiz/../../src/chessboard/plugins/effects/renderer/icons/defeat-white.ts","webpack://opening-quiz/../../src/chessboard/plugins/effects/renderer/icons/draw-black.ts","webpack://opening-quiz/../../src/chessboard/plugins/effects/renderer/icons/draw-white.ts","webpack://opening-quiz/../../src/chessboard/plugins/effects/renderer/icons/excellent.ts","webpack://opening-quiz/../../src/chessboard/plugins/effects/renderer/icons/fast-win.ts","webpack://opening-quiz/../../src/chessboard/plugins/effects/renderer/icons/free-piece.ts","webpack://opening-quiz/../../src/chessboard/plugins/effects/renderer/icons/gamechanger.ts","webpack://opening-quiz/../../src/chessboard/plugins/effects/renderer/icons/great-find.ts","webpack://opening-quiz/../../src/chessboard/plugins/effects/renderer/icons/forced.ts","webpack://opening-quiz/../../src/chessboard/plugins/effects/renderer/icons/good.ts","webpack://opening-quiz/../../src/chessboard/plugins/effects/renderer/icons/inaccuracy.ts","webpack://opening-quiz/../../src/chessboard/plugins/effects/renderer/icons/incorrect.ts","webpack://opening-quiz/../../src/chessboard/plugins/effects/renderer/icons/mate.ts","webpack://opening-quiz/../../src/chessboard/plugins/effects/renderer/icons/miss.ts","webpack://opening-quiz/../../src/chessboard/plugins/effects/renderer/icons/missed-win.ts","webpack://opening-quiz/../../src/chessboard/plugins/effects/renderer/icons/mistake.ts","webpack://opening-quiz/../../src/chessboard/plugins/effects/renderer/icons/resign-black.ts","webpack://opening-quiz/../../src/chessboard/plugins/effects/renderer/icons/resign-white.ts","webpack://opening-quiz/../../src/chessboard/plugins/effects/renderer/icons/sharp.ts","webpack://opening-quiz/../../src/chessboard/plugins/effects/renderer/icons/takeback.ts","webpack://opening-quiz/../../src/chessboard/plugins/effects/renderer/icons/threat.ts","webpack://opening-quiz/../../src/chessboard/plugins/effects/renderer/icons/timeout-black.ts","webpack://opening-quiz/../../src/chessboard/plugins/effects/renderer/icons/timeout-white.ts","webpack://opening-quiz/../../src/chessboard/plugins/effects/renderer/icons/undo.ts","webpack://opening-quiz/../../src/chessboard/plugins/effects/renderer/icons/winner.ts","webpack://opening-quiz/../../src/chessboard/plugins/effects/renderer/icons/winner-white.ts","webpack://opening-quiz/../../src/chessboard/plugins/effects/renderer/icons/interesting.ts","webpack://opening-quiz/../../src/chessboard/plugins/effects/renderer/icons/warning.ts","webpack://opening-quiz/../../src/chessboard/plugins/effects/renderer/icons/equal.ts","webpack://opening-quiz/../../src/chessboard/plugins/effects/renderer/icons/index.ts","webpack://opening-quiz/../../src/chessboard/plugins/custom-items/renderer/icons/image.ts","webpack://opening-quiz/../../src/chessboard/plugins/custom-items/renderer/icons/star.ts","webpack://opening-quiz/../../src/chessboard/plugins/custom-items/renderer/icons/text-box.ts","webpack://opening-quiz/../../src/chessboard/model/board/get-san-from-file-rank.ts","webpack://opening-quiz/../../src/utils/set-test-data.ts","webpack://opening-quiz/../../src/chessboard/renderers/model/animator/easing/ease-cubic.ts","webpack://opening-quiz/../../src/utils/get-board-xy-from-event.ts","webpack://opening-quiz/../../src/chessboard/renderers/webgl/base/types.ts","webpack://opening-quiz/../../src/chessboard/model/arrows/calculate-arrow-rotation.ts","webpack://opening-quiz/../../src/chessboard/model/arrows/get-arrow-color.ts","webpack://opening-quiz/../../src/chessboard/renderers/model/get-undo-move-details.ts","webpack://opening-quiz/../../src/chessboard/renderers/webgl/base/main/get-coords-from-square.ts","webpack://opening-quiz/../../src/chessboard/renderers/webgl/base/utils/position-to-square.ts","webpack://opening-quiz/../../src/chessboard/renderers/webgl/base/utils/position-to-square-percentage.ts","webpack://opening-quiz/../../src/chessboard/renderers/webgl/base/main/get-pointer-position.ts","webpack://opening-quiz/../../src/chessboard/renderers/webgl/base/main/get-view-aspect-ratio.ts","webpack://opening-quiz/../../src/chessboard/renderers/webgl/base/main/get-webgl-canvas.ts","webpack://opening-quiz/../../src/chessboard/renderers/webgl/base/main/handle-webgl-context-lost.ts","webpack://opening-quiz/../../src/chessboard/renderers/webgl/base/pieces/get-pieces.ts","webpack://opening-quiz/../../src/chessboard/renderers/webgl/base/utils/is-position-inside-board.ts","webpack://opening-quiz/../../src/chessboard/renderers/webgl/base/listeners/on-mouse-double-click.ts","webpack://opening-quiz/../../src/chessboard/renderers/webgl/base/listeners/on-mouse-wheel.ts","webpack://opening-quiz/../../src/chessboard/renderers/webgl/base/animation/end-piece-animation.ts","webpack://opening-quiz/../../src/chessboard/model/dom/is-secondary-button.ts","webpack://opening-quiz/../../src/chessboard/renderers/webgl/base/listeners/on-pointer-down.ts","webpack://opening-quiz/../../src/chessboard/renderers/webgl/base/animation/animate-item.ts","webpack://opening-quiz/../../src/chessboard/renderers/webgl/base/animation/animate-piece.ts","webpack://opening-quiz/../../src/chessboard/renderers/webgl/base/animation/end-item-animation.ts","webpack://opening-quiz/../../src/chessboard/renderers/webgl/base/animation/is-piece-animating.ts","webpack://opening-quiz/../../src/chessboard/renderers/webgl/base/pieces/find-piece-from-position.ts","webpack://opening-quiz/../../src/chessboard/renderers/webgl/base/hints/find-hint-from-square.ts","webpack://opening-quiz/../../src/chessboard/renderers/webgl/base/hints/find-hint-from-file-rank.ts","webpack://opening-quiz/../../src/chessboard/renderers/webgl/base/hints/find-hint-from-position.ts","webpack://opening-quiz/../../src/chessboard/renderers/webgl/base/listeners/on-pointer-move.ts","webpack://opening-quiz/../../src/chessboard/renderers/webgl/base/listeners/on-pointer-up.ts","webpack://opening-quiz/../../src/chessboard/renderers/webgl/base/listeners/add-event-listeners.ts","webpack://opening-quiz/../../src/utils/add-to-window.ts","webpack://opening-quiz/../../src/chessboard/renderers/model/animator/update-animated-properties.ts","webpack://opening-quiz/../../src/chessboard/renderers/model/animator/create-animation.ts","webpack://opening-quiz/../../src/chessboard/renderers/model/animator/index.ts","webpack://opening-quiz/../../src/chessboard/renderers/webgl/base/main/create-base-state.ts","webpack://opening-quiz/../../src/chessboard/renderers/webgl/base/pieces/update-pieces-visuals.ts","webpack://opening-quiz/../../src/chessboard/renderers/webgl/base/main/load-assets.ts","webpack://opening-quiz/../../src/chessboard/renderers/webgl/base/main/update-loop.ts","webpack://opening-quiz/../../src/chessboard/renderers/webgl/base/main/init.ts","webpack://opening-quiz/../../src/chessboard/renderers/webgl/base/listeners/remove-event-listeners.ts","webpack://opening-quiz/../../src/chessboard/renderers/webgl/base/main/destroy.ts","webpack://opening-quiz/../../src/chessboard/renderers/webgl/base/animation/is-animating.ts","webpack://opening-quiz/../../src/chessboard/renderers/webgl/base/utils/square-to-piece-position.ts","webpack://opening-quiz/../../src/chessboard/renderers/webgl/base/pieces/drag-piece.ts","webpack://opening-quiz/../../src/chessboard/renderers/webgl/base/pieces/change-pieces-style.ts","webpack://opening-quiz/../../src/chessboard/renderers/webgl/base/pieces/swap-piece.ts","webpack://opening-quiz/../../src/chessboard/renderers/webgl/base/animation/end-all-pieces-animation.ts","webpack://opening-quiz/../../src/chessboard/renderers/webgl/base/pieces/move-pieces.ts","webpack://opening-quiz/../../src/chessboard/renderers/webgl/base/pieces/remove-piece.ts","webpack://opening-quiz/../../src/chessboard/renderers/webgl/base/pieces/generate-piece-id.ts","webpack://opening-quiz/../../src/chessboard/renderers/webgl/base/pieces/add-piece.ts","webpack://opening-quiz/../../src/chessboard/model/move/is-checkmate.ts","webpack://opening-quiz/../../src/chessboard/renderers/webgl/base/pieces/undo-move.ts","webpack://opening-quiz/../../src/chessboard/renderers/webgl/base/pieces/drop-piece.ts","webpack://opening-quiz/../../src/chessboard/renderers/webgl/base/pieces/illegal-move.ts","webpack://opening-quiz/../../src/chessboard/renderers/webgl/base/pieces/load-pieces.ts","webpack://opening-quiz/../../src/chessboard/renderers/webgl/base/pieces/make-move.ts","webpack://opening-quiz/../../src/chessboard/renderers/webgl/base/board/add-analysis-overlay.ts","webpack://opening-quiz/../../src/chessboard/renderers/webgl/base/board/change-board-style.ts","webpack://opening-quiz/../../src/chessboard/renderers/webgl/base/board/fade-setup.ts","webpack://opening-quiz/../../src/chessboard/renderers/webgl/base/board/flip-board.ts","webpack://opening-quiz/../../src/chessboard/renderers/webgl/base/board/set-board-enabled.ts","webpack://opening-quiz/../../src/chessboard/renderers/webgl/base/board/remove-analysis-overlay.ts","webpack://opening-quiz/../../src/chessboard/renderers/webgl/base/board/resize.ts","webpack://opening-quiz/../../src/chessboard/renderers/webgl/base/board/set-board-coordinates.ts","webpack://opening-quiz/../../src/utils/colors/convert-color.ts","webpack://opening-quiz/../../src/chessboard/renderers/webgl/base/arrows/add-arrows.ts","webpack://opening-quiz/../../src/chessboard/renderers/webgl/base/arrows/remove-arrows.ts","webpack://opening-quiz/../../src/chessboard/renderers/webgl/base/highlights/add-highlights.ts","webpack://opening-quiz/../../src/chessboard/renderers/webgl/base/highlights/blink-highlights.ts","webpack://opening-quiz/../../src/chessboard/renderers/webgl/base/highlights/hide-hover-square.ts","webpack://opening-quiz/../../src/chessboard/renderers/webgl/base/highlights/remove-highlights.ts","webpack://opening-quiz/../../src/chessboard/renderers/webgl/base/highlights/show-hover-square.ts","webpack://opening-quiz/../../src/chessboard/renderers/webgl/base/hints/remove-hints.ts","webpack://opening-quiz/../../src/chessboard/renderers/webgl/base/hints/add-hints.ts","webpack://opening-quiz/../../src/chessboard/renderers/webgl/base/promotion-window/close-promotion-window.ts","webpack://opening-quiz/../../src/chessboard/renderers/webgl/base/promotion-window/open-promotion-window.ts","webpack://opening-quiz/../../src/chessboard/renderers/webgl/base/custom-items/add-custom-items.ts","webpack://opening-quiz/../../src/chessboard/renderers/webgl/base/custom-items/remove-custom-items.ts","webpack://opening-quiz/../../src/chessboard/renderers/webgl/base/effects/add-effects.ts","webpack://opening-quiz/../../src/chessboard/renderers/webgl/base/effects/remove-effects.ts","webpack://opening-quiz/../../src/chessboard/renderers/webgl/base/effects/fade-out-effect.ts","webpack://opening-quiz/../../src/chessboard/renderers/webgl/base/theme-takeover/start-takeover.ts","webpack://opening-quiz/../../src/chessboard/renderers/webgl/base/theme-takeover/end-takeover.ts","webpack://opening-quiz/../../src/chessboard/renderers/webgl/base/theme-takeover/clear-takeover.ts","webpack://opening-quiz/../../src/chessboard/renderers/webgl/base/main/create-instance.ts","webpack://opening-quiz/../../src/chessboard/renderers/webgl/base/pieces/find-piece-from-square.ts","webpack://opening-quiz/../../src/utils/limit-number-within-range.ts","webpack://opening-quiz/../../src/chessboard/model/arrows/calculate-arrow-length.ts","webpack://opening-quiz/../../src/chessboard/plugins/effects/helpers/make-svg-icon.ts","webpack://opening-quiz/../../src/chessboard/renderers/webgl/base/constants.ts","webpack://opening-quiz/../../src/chessboard/config/arrows.ts","webpack://opening-quiz/../../src/utils/get-xy-from-event.ts"],"sourcesContent":["import type { Markings } from 'chessboard/plugins/markings/config/types';\n\nexport namespace CustomItems {\n  export interface API {\n    getDefaultStarColor(): string;\n  }\n\n  export namespace Plugin {\n    export const Name = 'custom-items';\n  }\n\n  export enum Classes {\n    Root = 'custom-item',\n  }\n}\n\nexport const CustomItemType = 'customItem';\n\nexport type CustomItemParams = {\n  data: CustomItemData;\n  type: typeof CustomItemType;\n};\n\nexport type CustomItem = Markings.Model & CustomItemParams;\n\nexport type KeyedCustomItem = Markings.KeyedModel & CustomItemParams;\n\nexport type CustomItemData = Markings.WithSquare &\n  Partial<Markings.WithOpacity> &\n  Partial<Markings.WithColor> & {\n    image?: ImageOptions;\n    text?: TextOptions;\n    type: Types;\n    visualOrder?: VisualOrder.Model;\n    frame?: Frame;\n    removalClass?: string;\n    removalSound?: string;\n    removalTimeout?: number;\n  };\n\nexport interface ImageOptions {\n  percentOfSquare?: number;\n  url: string;\n}\n\nexport interface TextOptions {\n  color?: string;\n  value: string;\n}\n\nexport interface Frame {\n  imageURL: string;\n  imageAnimated?: boolean;\n  positionRatioX: number;\n  positionRatioY: number;\n  widthRatio: number;\n  heightRatio: number;\n}\n\nexport namespace VisualOrder {\n  export interface Model {\n    position?: Positions;\n    target: Targets;\n  }\n\n  export const enum Targets {\n    Arrows = 'arrows',\n    Effects = 'effects',\n    Pieces = 'pieces',\n  }\n\n  export const enum Positions {\n    Above = 'above',\n    Below = 'below',\n  }\n}\n\nexport enum Types {\n  Image = 'Image',\n  Star = 'Star',\n  TextBox = 'TextBox',\n}\n","import type { Board } from 'chessboard/model/board/types';\nimport type { WebGLRenderer } from 'chessboard/renderers/webgl/base';\nimport { findPieceFromSquare } from 'chessboard/renderers/webgl/base/pieces';\nimport { getSanFromFileRank } from 'chessboard/model/board/get-san-from-file-rank';\n\n/**\n * Find a piece based on file/rank coordinates.\n */\nexport function findPieceFromFileRank<T extends WebGLRenderer.State>(\n  state: T,\n  fileRank: Board.FileRank,\n): WebGLRenderer.Piece.Model<any> | null {\n  const square = getSanFromFileRank(fileRank);\n\n  if (square) {\n    return findPieceFromSquare(state, square);\n  }\n\n  return null;\n}\n","/* eslint no-cond-assign: off */\n/* eslint no-param-reassign: off */\n\n/**\n * Easing functions based on Robert Penner's equations.\n * (copied from tween.js: https://github.com/tweenjs/tween.js)\n *\n * http://robertpenner.com/easing\n *\n * t: normalized time\n */\n\n/**\n * Quartic easing in.\n */\nexport function easeInQuartic(t: number): number {\n  return t * t * t * t;\n}\n\n/**\n * Quartic easing out.\n */\nexport function easeOutQuartic(t: number): number {\n  return 1 - --t * t * t * t;\n}\n\n/**\n * Quartic easing in/out.\n */\nexport function easeInOutQuartic(t: number): number {\n  if ((t *= 2) < 1) {\n    return 0.5 * t * t * t * t;\n  }\n\n  return -0.5 * ((t -= 2) * t * t * t - 2);\n}\n","export namespace Effects {\n  /**\n   * Class names to use for the different parts of the annotation\n   * icons. This gives us the ability to display only the icon's text\n   * component itself (i.e. ?? ) rather than the colored background\n   * circle and shadows (so you can hide those paths based on class).\n   */\n  export enum ClassNames {\n    Background = 'icon-background',\n    Component = 'icon-component',\n    ComponentShadow = 'icon-component-shadow',\n    Shadow = 'icon-shadow',\n  }\n}\n","import type { Board } from 'chessboard/model/board/types';\n\n/**\n * Calculate the slope between two points\n */\nexport function calculateArrowSlope({\n  from,\n  to,\n}: {\n  from: Board.Coords;\n  to: Board.Coords;\n}): number {\n  const slope = (from.y - to.y) / (from.x - to.x);\n  const roundedSlope = Number(slope.toFixed(1));\n\n  return roundedSlope;\n}\n","import { paths } from 'chessboard/config/paths';\nimport { getImportMetaEnvDev } from './import-meta-wrappers';\n\n/**\n * Get the full URL for a WebGL asset. Used by the 2D & 3D boards.\n */\nexport function getWebglAssetUrl(assetPath: string): string {\n  const urlParams = new URLSearchParams(window.location.search);\n\n  if (getImportMetaEnvDev()) {\n    return `${paths.webglDataUrlDev}/${assetPath}`;\n  } else if (urlParams.get('useLocalAssets')) {\n    const baseUrl = window.location.href.replace(window.location.search, '');\n\n    return `${baseUrl}/${paths.webglDataUrlDev}/${assetPath}`;\n  }\n\n  if (window[paths.webglAssetPaths] && window[paths.webglAssetPaths][assetPath]) {\n    return window[paths.webglAssetPaths][assetPath];\n  }\n\n  return `${paths.webglDataUrl}/${assetPath}`;\n}\n","import type { Board } from 'chessboard/model/board/types';\n\n/**\n * Get a fileRank from a SanSquare.\n */\nexport function getFileRankFromSan(san: Board.SanSquare): Board.FileRank {\n  return {\n    file: san.toLowerCase().charCodeAt(0) - 96,\n    rank: Number(san.charAt(1)),\n  };\n}\n","/* eslint no-cond-assign: off */\n/* eslint no-param-reassign: off */\n\n/**\n * Easing functions based on Robert Penner's equations.\n * (copied from tween.js: https://github.com/tweenjs/tween.js)\n *\n * http://robertpenner.com/easing\n *\n * t: normalized time\n */\n\n/**\n * Quadratic easing in.\n */\nexport function easeInQuadratic(t: number): number {\n  return t * t;\n}\n\n/**\n * Quadratic easing out.\n */\nexport function easeOutQuadratic(t: number): number {\n  return t * (2 - t);\n}\n\n/**\n * Quadratic easing in/out.\n */\nexport function easeInOutQuadratic(t: number): number {\n  if ((t *= 2) < 1) {\n    return 0.5 * t * t;\n  }\n\n  return -0.5 * (--t * (t - 2) - 1);\n}\n","import type { Game } from 'chessboard/model/game/types';\n\n/**\n * Set attributes for the SVG markup.\n */\nexport function setSVGAttributes(\n  svgMarkup: string,\n  attrs: { color?: string; opacity?: number; text?: Game.Node.Marking.TextOptions },\n): string {\n  const itemEl = document.createElement('div');\n\n  itemEl.innerHTML = svgMarkup;\n\n  const svgEl = itemEl.querySelector('svg');\n\n  if (!svgEl) {\n    return svgMarkup;\n  }\n\n  if (attrs.color) {\n    svgEl.style.fill = attrs.color;\n  }\n\n  if (attrs.opacity) {\n    svgEl.style.opacity = String(attrs.opacity);\n  }\n\n  if (attrs.text) {\n    const textEl = svgEl.querySelector('text');\n\n    if (textEl) {\n      textEl.innerHTML = attrs.text.value;\n\n      textEl.style.fontSize = '0.5rem';\n      textEl.style.fontFamily =\n        '-apple-system, BlinkMacSystemFont, \"Segoe UI\", Helvetica, Arial, sans-serif';\n\n      if (attrs.text.color) {\n        textEl.style.fill = attrs.text.color;\n      }\n    }\n  }\n\n  return svgEl.outerHTML;\n}\n","import type { Board } from 'chessboard/model/board/types';\n\n/**\n * Get degrees to rotate knight arrow\n */\nexport function getKnightArrowRotation({\n  from,\n  slope,\n  to,\n}: {\n  from: Board.Coords;\n  slope: number;\n  to: Board.Coords;\n}): number {\n  switch (slope) {\n    case 2:\n      return from.x > to.x ? 180 : 0;\n    case -2:\n      return from.x > to.x ? 0 : 180;\n    case 0.5:\n      return from.x > to.x ? 90 : 270;\n    case -0.5:\n      return from.x > to.x ? 90 : 270;\n    default:\n      return 0;\n  }\n}\n","import type { ThemeAssets } from 'chessboard/config/theme-assets';\nimport type { Game } from 'chessboard/model/game/types';\nimport {\n  easeInQuadratic,\n  easeOutCubic,\n  easeOutQuadratic,\n} from 'chessboard/renderers/model/animator/easing';\n\nexport namespace ThemeTakeover {\n  export namespace Plugin {\n    export const Name = 'themeTakeover';\n  }\n\n  export enum SwipeDirection {\n    Up = 'up',\n    Down = 'down',\n  }\n\n  export enum SwipePercent {\n    Half = 'half',\n    Full = 'full',\n  }\n\n  export type DirectionOrPercent = SwipeDirection | SwipePercent;\n\n  export type ThemeUrls = {\n    board: string;\n    pieces: ThemeAssets.PieceAssets2D;\n  };\n\n  export type StartParams = {\n    themeUrls: ThemeUrls;\n    swipeDirection: SwipeDirection;\n    swipePercent: SwipePercent;\n    automaticSwipeOut: boolean;\n    showOverlay: boolean;\n\n    coordinateColors?: ThemeAssets.CoordinateColors;\n    swipeDuration?: number;\n  };\n\n  export interface API {\n    start(startParams: StartParams): void;\n    end(): void;\n    clear(): void;\n  }\n\n  export enum Events {\n    StartTakeover = 'StartTakeover',\n    EndTakeover = 'EndTakeover',\n    ClearTakeover = 'ClearTakeover',\n  }\n}\n\nexport type PiecesCollection = ReturnType<Game.Piece.Collection['getCollection']>;\n\nexport const takeoverCssClass = 'takeover';\nexport const boardPiecesWrapperClass = 'board-pieces-wrapper';\nexport const swipeInAnimationName = 'takeoverSwipeIn';\nexport const swipeOutAnimationName = 'takeoverSwipeOut';\n\nexport const SwipeMap = {\n  [ThemeTakeover.SwipePercent.Full]: {\n    percent: 1,\n    duration: 800,\n    easing: {\n      in: easeInQuadratic,\n      out: easeOutQuadratic,\n    },\n  },\n  [ThemeTakeover.SwipePercent.Half]: {\n    percent: 0.5,\n    duration: 400,\n    easing: {\n      in: easeOutCubic,\n      out: easeInQuadratic,\n    },\n  },\n};\n\nexport type StartParams = ThemeTakeover.StartParams;\n","/**\n * Easing functions based on Robert Penner's equations.\n * (copied from tween.js: https://github.com/tweenjs/tween.js)\n *\n * http://robertpenner.com/easing\n *\n * t: normalized time\n */\n\n/**\n * Linear easing.\n */\nexport function easeLinear(t: number): number {\n  return t;\n}\n","import { Effects } from 'chessboard/plugins/effects/renderer/types';\n\nexport const alternative = `<g id=\"alternative\">\n    <g>\n      <path class=\"${Effects.ClassNames.Shadow}\" opacity=\"0.3\" d=\"M9,.5a9,9,0,1,0,9,9A9,9,0,0,0,9,.5Z\"></path>\n      <path class=\"${Effects.ClassNames.Background}\" fill=\"#96af8b\" d=\"M9,0a9,9,0,1,0,9,9A9,9,0,0,0,9,0Z\"></path>\n    </g>\n    <g>\n      <g class=\"${Effects.ClassNames.ComponentShadow}\" opacity=\"0.2\">\n        <path d=\"M14.57,4.71l-4.42.2a.2.2,0,0,0-.11,0A.16.16,0,0,0,10,5a.21.21,0,0,0,0,.11.31.31,0,0,0,0,.1l1.4,1.4L8.92,9.13,6.5,6.71,8,5.24a.19.19,0,0,0,0-.1A.14.14,0,0,0,8,5,.15.15,0,0,0,8,4.94a.21.21,0,0,0-.11,0L3.42,4.71l-.08,0-.06,0a.18.18,0,0,0,0,.07.19.19,0,0,0,0,.08l.19,4.42a.15.15,0,0,0,0,.11.18.18,0,0,0,.08.07.25.25,0,0,0,.12,0,.18.18,0,0,0,.09-.06L5.21,8l2.55,2.56v4.49a.29.29,0,0,0,0,.09l0,.07.08,0,.09,0H9.85l.09,0a.18.18,0,0,0,.07,0l.05-.07a.29.29,0,0,0,0-.09V10.57l2.63-2.63,1.55,1.54a.16.16,0,0,0,.09,0,.17.17,0,0,0,.12,0,.18.18,0,0,0,.08-.07.13.13,0,0,0,0-.1l.19-4.43a.19.19,0,0,0,0-.08.18.18,0,0,0,0-.07l-.07,0Z\"></path>\n      </g>\n      <path class=\"${Effects.ClassNames.Component}\" fill=\"#fff\" d=\"M14.57,4.21l-4.42.2a.2.2,0,0,0-.11,0,.16.16,0,0,0-.07.09.21.21,0,0,0,0,.11.31.31,0,0,0,0,.1l1.4,1.4L8.92,8.63,6.5,6.21,8,4.74a.19.19,0,0,0,0-.1.14.14,0,0,0,0-.11A.15.15,0,0,0,8,4.44a.21.21,0,0,0-.11,0L3.42,4.21l-.08,0-.06,0a.18.18,0,0,0,0,.07.19.19,0,0,0,0,.08l.19,4.42a.15.15,0,0,0,0,.11A.18.18,0,0,0,3.53,9a.25.25,0,0,0,.12,0A.18.18,0,0,0,3.74,9L5.21,7.51l2.55,2.56v4.49a.29.29,0,0,0,0,.09l0,.07.08,0,.09,0H9.85l.09,0a.18.18,0,0,0,.07,0l.05-.07a.29.29,0,0,0,0-.09V10.07l2.63-2.63L14.26,9a.16.16,0,0,0,.09,0,.17.17,0,0,0,.12,0A.18.18,0,0,0,14.55,9a.13.13,0,0,0,0-.1l.19-4.43a.19.19,0,0,0,0-.08.18.18,0,0,0,0-.07l-.07,0Z\"></path>\n    </g>\n  </g>`;\n","import { Effects } from 'chessboard/plugins/effects/renderer/types';\n\nexport const bestMove = `<g id=\"best\">\n    <path class=\"${Effects.ClassNames.Shadow}\" opacity=\"0.3\" d=\"M9,.5a9,9,0,1,0,9,9A9,9,0,0,0,9,.5Z\"></path>\n    <path class=\"${Effects.ClassNames.Background}\" fill=\"#81B64C\" d=\"M9,0a9,9,0,1,0,9,9A9,9,0,0,0,9,0Z\"></path>\n    <path class=\"${Effects.ClassNames.ComponentShadow}\" opacity=\"0.2\" d=\"M9,3.43a.5.5,0,0,0-.27.08.46.46,0,0,0-.17.22L7.24,7.17l-3.68.19a.52.52,0,0,0-.26.1.53.53,0,0,0-.16.23.45.45,0,0,0,0,.28.44.44,0,0,0,.15.23l2.86,2.32-1,3.56a.45.45,0,0,0,0,.28.46.46,0,0,0,.17.22.41.41,0,0,0,.26.09.43.43,0,0,0,.27-.08l3.09-2,3.09,2a.46.46,0,0,0,.53,0,.46.46,0,0,0,.17-.22.53.53,0,0,0,0-.28l-1-3.56L14.71,8.2A.44.44,0,0,0,14.86,8a.45.45,0,0,0,0-.28.53.53,0,0,0-.16-.23.52.52,0,0,0-.26-.1l-3.68-.2L9.44,3.73a.46.46,0,0,0-.17-.22A.5.5,0,0,0,9,3.43Z\"></path>\n    <path class=\"${Effects.ClassNames.Component}\" fill=\"#fff\" d=\"M9,2.93A.5.5,0,0,0,8.73,3a.46.46,0,0,0-.17.22L7.24,6.67l-3.68.19A.52.52,0,0,0,3.3,7a.53.53,0,0,0-.16.23.45.45,0,0,0,0,.28.44.44,0,0,0,.15.23L6.15,10l-1,3.56a.45.45,0,0,0,0,.28.46.46,0,0,0,.17.22.41.41,0,0,0,.26.09.43.43,0,0,0,.27-.08l3.09-2,3.09,2a.46.46,0,0,0,.53,0,.46.46,0,0,0,.17-.22.53.53,0,0,0,0-.28l-1-3.56L14.71,7.7a.44.44,0,0,0,.15-.23.45.45,0,0,0,0-.28A.53.53,0,0,0,14.7,7a.52.52,0,0,0-.26-.1l-3.68-.2L9.44,3.23A.46.46,0,0,0,9.27,3,.5.5,0,0,0,9,2.93Z\"></path>\n  </g>`;\n","import { Effects } from 'chessboard/plugins/effects/renderer/types';\n\nexport const blunder = `<g id=\"blunder\">\n    <path class=\"${Effects.ClassNames.Shadow}\" opacity=\"0.3\" d=\"M9,.5a9,9,0,1,0,9,9A9,9,0,0,0,9,.5Z\"></path>\n    <path class=\"${Effects.ClassNames.Background}\" fill=\"#FA412D\" d=\"M9,0a9,9,0,1,0,9,9A9,9,0,0,0,9,0Z\"></path>\n    <g class=\"${Effects.ClassNames.ComponentShadow}\" opacity=\"0.2\">\n      <path d=\"M14.74,5.45A2.58,2.58,0,0,0,14,4.54,3.76,3.76,0,0,0,12.89,4a4.07,4.07,0,0,0-1.2-.19A3.92,3.92,0,0,0,10.51,4a5.87,5.87,0,0,0-.9.37,3,3,0,0,0-.32.2,3.46,3.46,0,0,1,.42.63,3.29,3.29,0,0,1,.36,1.47.31.31,0,0,0,.19-.06l.11-.08a2.9,2.9,0,0,1,.29-.19,3.89,3.89,0,0,1,.41-.17,1.55,1.55,0,0,1,.48-.07,1.1,1.1,0,0,1,.72.24.72.72,0,0,1,.23.26.8.8,0,0,1,.07.34,1,1,0,0,1-.25.67,7.71,7.71,0,0,1-.65.63,6.2,6.2,0,0,0-.48.43,2.93,2.93,0,0,0-.45.54,2.55,2.55,0,0,0-.33.66,2.62,2.62,0,0,0-.13.83V11a.24.24,0,0,0,0,.12.35.35,0,0,0,.17.17l.12,0h1.71l.12,0a.23.23,0,0,0,.1-.07.21.21,0,0,0,.06-.1.27.27,0,0,0,0-.12V10.8a1,1,0,0,1,.26-.7q.27-.28.66-.63A5.79,5.79,0,0,0,14.05,9a4.51,4.51,0,0,0,.48-.6,2.56,2.56,0,0,0,.36-.72,2.81,2.81,0,0,0,.14-1A2.66,2.66,0,0,0,14.74,5.45Z\"></path>\n      <path d=\"M12.38,12.65H10.5l-.12,0a.34.34,0,0,0-.18.29v1.82a.36.36,0,0,0,.08.23.23.23,0,0,0,.1.07l.12,0h1.88a.24.24,0,0,0,.12,0,.26.26,0,0,0,.11-.07.36.36,0,0,0,.07-.1.28.28,0,0,0,0-.13V13a.27.27,0,0,0,0-.12.61.61,0,0,0-.07-.1A.32.32,0,0,0,12.38,12.65Z\"></path>\n      <path d=\"M6.79,12.65H4.91l-.12,0a.34.34,0,0,0-.18.29v1.82a.36.36,0,0,0,.08.23.23.23,0,0,0,.1.07l.12,0H6.79a.24.24,0,0,0,.12,0A.26.26,0,0,0,7,15a.36.36,0,0,0,.07-.1.28.28,0,0,0,0-.13V13a.27.27,0,0,0,0-.12.61.61,0,0,0-.07-.1A.32.32,0,0,0,6.79,12.65Z\"></path>\n      <path d=\"M8.39,4.54A3.76,3.76,0,0,0,7.3,4a4.07,4.07,0,0,0-1.2-.19A3.92,3.92,0,0,0,4.92,4a5.87,5.87,0,0,0-.9.37,3.37,3.37,0,0,0-.55.38l-.21.19a.32.32,0,0,0,0,.41l1,1.2a.26.26,0,0,0,.2.12.48.48,0,0,0,.24-.06l.11-.08a2.9,2.9,0,0,1,.29-.19l.4-.17A1.66,1.66,0,0,1,6,6.06a1.1,1.1,0,0,1,.72.24.72.72,0,0,1,.23.26A.77.77,0,0,1,7,6.9a1,1,0,0,1-.26.67,7.6,7.6,0,0,1-.64.63,6.28,6.28,0,0,0-.49.43,2.93,2.93,0,0,0-.45.54,2.72,2.72,0,0,0-.33.66,2.62,2.62,0,0,0-.13.83V11a.43.43,0,0,0,0,.12.39.39,0,0,0,.08.1.18.18,0,0,0,.1.07.21.21,0,0,0,.12,0H6.72l.12,0a.23.23,0,0,0,.1-.07.36.36,0,0,0,.07-.1A.5.5,0,0,0,7,11V10.8a1,1,0,0,1,.27-.7A8,8,0,0,1,8,9.47c.18-.15.35-.31.52-.48A7,7,0,0,0,9,8.39a3.23,3.23,0,0,0,.36-.72,3.07,3.07,0,0,0,.13-1,2.66,2.66,0,0,0-.29-1.27A2.58,2.58,0,0,0,8.39,4.54Z\"></path>\n    </g>\n    <g>\n      <path class=\"${Effects.ClassNames.Component}\" fill=\"#fff\" d=\"M14.74,5A2.58,2.58,0,0,0,14,4a3.76,3.76,0,0,0-1.09-.56,4.07,4.07,0,0,0-1.2-.19,3.92,3.92,0,0,0-1.18.17,5.87,5.87,0,0,0-.9.37,3,3,0,0,0-.32.2,3.46,3.46,0,0,1,.42.63,3.29,3.29,0,0,1,.36,1.47.31.31,0,0,0,.19-.06L10.37,6a2.9,2.9,0,0,1,.29-.19,3.89,3.89,0,0,1,.41-.17,1.55,1.55,0,0,1,.48-.07,1.1,1.1,0,0,1,.72.24.72.72,0,0,1,.23.26.8.8,0,0,1,.07.34,1,1,0,0,1-.25.67,7.71,7.71,0,0,1-.65.63,6.2,6.2,0,0,0-.48.43,2.93,2.93,0,0,0-.45.54,2.55,2.55,0,0,0-.33.66,2.62,2.62,0,0,0-.13.83v.35a.24.24,0,0,0,0,.12.35.35,0,0,0,.17.17l.12,0h1.71l.12,0a.23.23,0,0,0,.1-.07.21.21,0,0,0,.06-.1.27.27,0,0,0,0-.12V10.3a1,1,0,0,1,.26-.7q.27-.28.66-.63a5.79,5.79,0,0,0,.51-.48,4.51,4.51,0,0,0,.48-.6,2.56,2.56,0,0,0,.36-.72,2.81,2.81,0,0,0,.14-1A2.66,2.66,0,0,0,14.74,5Z\"></path>\n      <path class=\"${Effects.ClassNames.Component}\" fill=\"#fff\" d=\"M12.38,12.15H10.5l-.12,0a.34.34,0,0,0-.18.29v1.82a.36.36,0,0,0,.08.23.23.23,0,0,0,.1.07l.12,0h1.88a.24.24,0,0,0,.12,0,.26.26,0,0,0,.11-.07.36.36,0,0,0,.07-.1.28.28,0,0,0,0-.13V12.46a.27.27,0,0,0,0-.12.61.61,0,0,0-.07-.1A.32.32,0,0,0,12.38,12.15Z\"></path>\n      <path class=\"${Effects.ClassNames.Component}\" fill=\"#fff\" d=\"M6.79,12.15H4.91l-.12,0a.34.34,0,0,0-.18.29v1.82a.36.36,0,0,0,.08.23.23.23,0,0,0,.1.07l.12,0H6.79a.24.24,0,0,0,.12,0A.26.26,0,0,0,7,14.51a.36.36,0,0,0,.07-.1.28.28,0,0,0,0-.13V12.46a.27.27,0,0,0,0-.12.61.61,0,0,0-.07-.1A.32.32,0,0,0,6.79,12.15Z\"></path>\n      <path class=\"${Effects.ClassNames.Component}\" fill=\"#fff\" d=\"M8.39,4A3.76,3.76,0,0,0,7.3,3.48a4.07,4.07,0,0,0-1.2-.19,3.92,3.92,0,0,0-1.18.17,5.87,5.87,0,0,0-.9.37,3.37,3.37,0,0,0-.55.38l-.21.19a.32.32,0,0,0,0,.41l1,1.2a.26.26,0,0,0,.2.12.48.48,0,0,0,.24-.06L4.78,6a2.9,2.9,0,0,1,.29-.19l.4-.17A1.66,1.66,0,0,1,6,5.56a1.1,1.1,0,0,1,.72.24.72.72,0,0,1,.23.26A.77.77,0,0,1,7,6.4a1,1,0,0,1-.26.67,7.6,7.6,0,0,1-.64.63,6.28,6.28,0,0,0-.49.43,2.93,2.93,0,0,0-.45.54,2.72,2.72,0,0,0-.33.66,2.62,2.62,0,0,0-.13.83v.35a.43.43,0,0,0,0,.12.39.39,0,0,0,.08.1.18.18,0,0,0,.1.07.21.21,0,0,0,.12,0H6.72l.12,0a.23.23,0,0,0,.1-.07.36.36,0,0,0,.07-.1.5.5,0,0,0,0-.12V10.3a1,1,0,0,1,.27-.7A8,8,0,0,1,8,9c.18-.15.35-.31.52-.48A7,7,0,0,0,9,7.89a3.23,3.23,0,0,0,.36-.72,3.07,3.07,0,0,0,.13-1A2.66,2.66,0,0,0,9.15,5,2.58,2.58,0,0,0,8.39,4Z\"></path>\n    </g>\n  </g>`;\n","import { Effects } from 'chessboard/plugins/effects/renderer/types';\n\nexport const book = `<g id=\"book\">\n    <path class=\"${Effects.ClassNames.Shadow}\" opacity=\"0.3\" d=\"M9,.5a9,9,0,1,0,9,9A9,9,0,0,0,9,.5Z\"></path>\n    <path class=\"${Effects.ClassNames.Background}\" fill=\"#D5A47D\" d=\"M9,0a9,9,0,1,0,9,9A9,9,0,0,0,9,0Z\"></path>\n    <g>\n      <path class=\"${Effects.ClassNames.ComponentShadow}\" opacity=\"0.3\" isolation=\"isolate\" d=\"M8.45,5.9c-1-.75-2.51-1.09-4.83-1.09H2.54v8.71H3.62a8.16,8.16,0,0,1,4.83,1.17Z\"></path>\n      <path class=\"${Effects.ClassNames.ComponentShadow}\" opacity=\"0.3\" isolation=\"isolate\" d=\"M9.54,14.69a8.14,8.14,0,0,1,4.84-1.17h1.08V4.81H14.38c-2.31,0-3.81.34-4.84,1.09Z\"></path>\n      <path class=\"${Effects.ClassNames.Component}\" fill=\"#fff\" d=\"M8.45,5.4c-1-.75-2.51-1.09-4.83-1.09H3V13h.58a8.09,8.09,0,0,1,4.83,1.17Z\"></path>\n      <path class=\"${Effects.ClassNames.Component}\" fill=\"#fff\" d=\"M9.54,14.19A8.14,8.14,0,0,1,14.38,13H15V4.31h-.58c-2.31,0-3.81.34-4.84,1.09Z\"></path>\n    </g>\n  </g>`;\n","import { Effects } from 'chessboard/plugins/effects/renderer/types';\n\nexport const brilliant = `<g id=\"Brilliant\">\n    <path class=\"${Effects.ClassNames.Shadow}\" opacity=\"0.3\" d=\"M9,.5a9,9,0,1,0,9,9A9,9,0,0,0,9,.5Z\"></path>\n    <path class=\"${Effects.ClassNames.Background}\" fill=\"#26c2a3\" d=\"M9,0a9,9,0,1,0,9,9A9,9,0,0,0,9,0Z\"></path>\n    <g class=\"${Effects.ClassNames.ComponentShadow}\" opacity=\"0.2\">\n      <path d=\"M12.57,14.6a.51.51,0,0,1,0,.13.44.44,0,0,1-.08.11l-.11.08-.13,0h-2l-.13,0L10,14.84A.41.41,0,0,1,10,14.6V12.7a.32.32,0,0,1,.09-.23.39.39,0,0,1,.1-.08l.13,0h2a.31.31,0,0,1,.24.1.39.39,0,0,1,.08.1.51.51,0,0,1,0,.13Zm-.12-3.93a.17.17,0,0,1,0,.12.41.41,0,0,1-.07.11.4.4,0,0,1-.23.08H10.35a.31.31,0,0,1-.34-.31L9.86,3.9A.36.36,0,0,1,10,3.66a.23.23,0,0,1,.11-.08.27.27,0,0,1,.13,0H12.3a.32.32,0,0,1,.25.1.36.36,0,0,1,.09.24Z\"></path>\n      <path d=\"M8.07,14.6a.51.51,0,0,1,0,.13.44.44,0,0,1-.08.11l-.11.08-.13,0h-2l-.13,0-.11-.08a.41.41,0,0,1-.08-.24V12.7a.27.27,0,0,1,0-.13.36.36,0,0,1,.07-.1.39.39,0,0,1,.1-.08l.13,0h2a.31.31,0,0,1,.24.1.39.39,0,0,1,.08.1.51.51,0,0,1,0,.13ZM8,10.67a.17.17,0,0,1,0,.12.41.41,0,0,1-.07.11.4.4,0,0,1-.23.08H5.85a.31.31,0,0,1-.34-.31L5.36,3.9a.36.36,0,0,1,.09-.24.23.23,0,0,1,.11-.08.27.27,0,0,1,.13,0H7.8a.35.35,0,0,1,.25.1.36.36,0,0,1,.09.24Z\"></path>\n    </g>\n    <g>\n      <path class=\"${Effects.ClassNames.Component}\" fill=\"#fff\" d=\"M12.57,14.1a.51.51,0,0,1,0,.13.44.44,0,0,1-.08.11l-.11.08-.13,0h-2l-.13,0L10,14.34A.41.41,0,0,1,10,14.1V12.2A.32.32,0,0,1,10,12a.39.39,0,0,1,.1-.08l.13,0h2a.31.31,0,0,1,.24.1.39.39,0,0,1,.08.1.51.51,0,0,1,0,.13Zm-.12-3.93a.17.17,0,0,1,0,.12.41.41,0,0,1-.07.11.4.4,0,0,1-.23.08H10.35a.31.31,0,0,1-.34-.31L9.86,3.4A.36.36,0,0,1,10,3.16a.23.23,0,0,1,.11-.08.27.27,0,0,1,.13,0H12.3a.32.32,0,0,1,.25.1.36.36,0,0,1,.09.24Z\"></path>\n      <path class=\"${Effects.ClassNames.Component}\" fill=\"#fff\" d=\"M8.07,14.1a.51.51,0,0,1,0,.13.44.44,0,0,1-.08.11l-.11.08-.13,0h-2l-.13,0-.11-.08a.41.41,0,0,1-.08-.24V12.2a.27.27,0,0,1,0-.13.36.36,0,0,1,.07-.1.39.39,0,0,1,.1-.08l.13,0h2A.31.31,0,0,1,8,12a.39.39,0,0,1,.08.1.51.51,0,0,1,0,.13ZM8,10.17a.17.17,0,0,1,0,.12.41.41,0,0,1-.07.11.4.4,0,0,1-.23.08H5.85a.31.31,0,0,1-.34-.31L5.36,3.4a.36.36,0,0,1,.09-.24.23.23,0,0,1,.11-.08.27.27,0,0,1,.13,0H7.8a.35.35,0,0,1,.25.1.36.36,0,0,1,.09.24Z\"></path>\n    </g>\n  </g>`;\n","import { Effects } from 'chessboard/plugins/effects/renderer/types';\n\nexport const checkmateBlack = `<g id=\"checkmate_black\">\n    <path class=\"${Effects.ClassNames.Shadow}\" opacity=\"0.3\" d=\"M9,.5a9,9,0,1,0,9,9A9,9,0,0,0,9,.5Z\"></path>\n    <path class=\"${Effects.ClassNames.Background}\" fill=\"#312e2b\" d=\"M9,0a9,9,0,1,0,9,9A9,9,0,0,0,9,0Z\"></path>\n    <path d=\"M11.44,8.41h1.74l.1-1.55H11.54l.18-2.78H10.17L10,6.86H8.31l.18-2.78H6.94L6.76,6.86H5l-.1,1.55H6.66l-.11,1.68H4.82l-.1,1.55H6.46l-.18,2.78H7.83L8,11.64H9.69l-.18,2.78h1.55l.18-2.78H13l.1-1.55H11.34ZM8.11,10.09l.1-1.68H9.89l-.1,1.68Z\"></path>\n    <path class=\"${Effects.ClassNames.ComponentShadow}\" fill=\"#fff\" d=\"M11.44,7.91h1.74l.1-1.55H11.54l.18-2.78H10.17L10,6.36H8.31l.18-2.78H6.94L6.76,6.36H5l-.1,1.55H6.66L6.55,9.59H4.82l-.1,1.55H6.46l-.18,2.78H7.83L8,11.14H9.69l-.18,2.78h1.55l.18-2.78H13l.1-1.55H11.34ZM8.11,9.59l.1-1.68H9.89l-.1,1.68Z\"></path>\n  </g>`;\n","import { Effects } from 'chessboard/plugins/effects/renderer/types';\n\nexport const checkmateWhite = `<g id=\"checkmate_white\">\n    <path class=\"${Effects.ClassNames.Shadow}\" opacity=\"0.3\" d=\"M9,.5a9,9,0,1,0,9,9A9,9,0,0,0,9,.5Z\"></path>\n    <circle class=\"${Effects.ClassNames.Background}\" fill=\"#f8f8f8\" cx=\"9\" cy=\"9\" r=\"8.5\"></circle>\n    <path class=\"${Effects.ClassNames.ComponentShadow}\" fill=\"#e8e8e8\" d=\"M9,1A8,8,0,1,1,1,9,8,8,0,0,1,9,1M9,0a9,9,0,1,0,9,9A9,9,0,0,0,9,0Z\"></path>\n    <path d=\"M11.44,8.11h1.74l.1-1.55H11.54l.18-2.78H10.17L10,6.56H8.31l.18-2.78H6.94L6.76,6.56H5l-.1,1.55H6.66L6.55,9.79H4.82l-.1,1.55H6.46l-.18,2.78H7.83L8,11.34H9.69l-.18,2.78h1.55l.18-2.78H13l.1-1.55H11.34ZM8.11,9.79l.1-1.68H9.89l-.1,1.68Z\"></path>\n  </g>`;\n","import { Effects } from 'chessboard/plugins/effects/renderer/types';\n\nexport const correct = `<g id=\"correct\">\n    <g>\n      <path class=\"${Effects.ClassNames.Shadow}\" opacity=\"0.3\" d=\"M9,.5a9,9,0,1,0,9,9A9,9,0,0,0,9,.5Z\"></path>\n      <path class=\"${Effects.ClassNames.Background}\" fill=\"#81b64c\" d=\"M9,0a9,9,0,1,0,9,9A9,9,0,0,0,9,0Z\"></path>\n    </g>\n    <g>\n      <path class=\"${Effects.ClassNames.ComponentShadow}\" opacity=\"0.2\" d=\"M15.11,6.81,9.45,12.47,7.79,14.13a.39.39,0,0,1-.28.11.39.39,0,0,1-.27-.11L2.89,9.78a.39.39,0,0,1-.11-.28.39.39,0,0,1,.11-.27L4.28,7.85a.34.34,0,0,1,.12-.09l.15,0a.37.37,0,0,1,.15,0,.38.38,0,0,1,.13.09l2.69,2.68,5.65-5.65a.38.38,0,0,1,.13-.09.37.37,0,0,1,.15,0,.4.4,0,0,1,.15,0,.34.34,0,0,1,.12.09l1.39,1.38a.41.41,0,0,1,.08.13.33.33,0,0,1,0,.15.4.4,0,0,1,0,.15A.5.5,0,0,1,15.11,6.81Z\"></path>\n      <path class=\"${Effects.ClassNames.Component}\" fill=\"#fff\" d=\"M15.11,6.31,9.45,12,7.79,13.63a.39.39,0,0,1-.28.11.39.39,0,0,1-.27-.11L2.89,9.28A.39.39,0,0,1,2.78,9a.39.39,0,0,1,.11-.27L4.28,7.35a.34.34,0,0,1,.12-.09l.15,0a.37.37,0,0,1,.15,0,.38.38,0,0,1,.13.09L7.52,10l5.65-5.65a.38.38,0,0,1,.13-.09.37.37,0,0,1,.15,0,.4.4,0,0,1,.15,0,.34.34,0,0,1,.12.09l1.39,1.38a.41.41,0,0,1,.08.13.33.33,0,0,1,0,.15.4.4,0,0,1,0,.15A.5.5,0,0,1,15.11,6.31Z\"></path>\n    </g>\n  </g>`;\n","import { Effects } from 'chessboard/plugins/effects/renderer/types';\n\nexport const critical = `<g id=\"critical\">\n    <g class=\"${Effects.ClassNames.Shadow}\" opacity=\"0.3\">\n      <path d=\"M17.68,5.2,11.06,16.67a2.37,2.37,0,0,1-4.11,0L.32,5.2A2.38,2.38,0,0,1,2.38,1.64H15.62A2.38,2.38,0,0,1,17.68,5.2Z\"></path>\n    </g>\n    <path class=\"${Effects.ClassNames.Background}\" fill=\"#ad5b8c\" d=\"M17.68,4.7,11.06,16.17a2.37,2.37,0,0,1-4.11,0L.32,4.7A2.38,2.38,0,0,1,2.38,1.14H15.62A2.38,2.38,0,0,1,17.68,4.7Z\"></path>\n    <g class=\"${Effects.ClassNames.ComponentShadow}\" opacity=\"0.2\">\n      <path d=\"M8.67,3.22,5.9,9.92V10a.14.14,0,0,0,0,.06l0,0,0,0H8.4a.1.1,0,0,1,.09,0,.09.09,0,0,1,0,.08l0,5c0,.11.17.17.21.07L12.1,8V7.92a.14.14,0,0,0,0-.06.09.09,0,0,0-.05,0l-.06,0H9.32a.11.11,0,0,1-.08,0,.12.12,0,0,1,0-.09l-.32-4.4C8.87,3.18,8.71,3.12,8.67,3.22Z\"></path>\n    </g>\n    <path class=\"${Effects.ClassNames.Component}\" fill=\"#fff\" d=\"M8.67,2.72,5.9,9.42v.05a.14.14,0,0,0,0,.06l0,0,0,0H8.4a.1.1,0,0,1,.09,0,.09.09,0,0,1,0,.08l0,5c0,.11.17.17.21.07l3.4-7.24V7.42a.14.14,0,0,0,0-.06.09.09,0,0,0-.05,0l-.06,0H9.32a.11.11,0,0,1-.08,0,.12.12,0,0,1,0-.09l-.32-4.4C8.87,2.68,8.71,2.62,8.67,2.72Z\"></path>\n  </g>`;\n","import { Effects } from 'chessboard/plugins/effects/renderer/types';\n\nexport const defeatBlack = `<g id=\"defeat_black\">\n<path class=\"${Effects.ClassNames.Shadow}\" opacity=\"0.3\" d=\"M9,.5a9,9,0,1,0,9,9A9,9,0,0,0,9,.5Z\"></path>\n<path class=\"${Effects.ClassNames.Background}\" fill=\"#E02828\" d=\"M9,0a9,9,0,1,0,9,9A9,9,0,0,0,9,0Z\"></path>\n\n<filter id=\"shadow\">\n  <feDropShadow dx=\"0\" dy=\"0.3\" stdDeviation=\"0\" flood-opacity=\"0.5\"/>\n</filter>\n\n<path\n d=\"m 8.91922,5.86598 c 0.27141,0 0.5622,0.28866 0.96931,0.70103 0.19387,0.20619 0.40707,0.41237 0.65917,0.63918 0,0.12371 -0.0194,0.26804 -0.0194,0.41237 H 8.70598 C 8.47334,7.30928 8.33764,6.95876 8.33764,6.60825 c 0,-0.37114 0.15509,-0.74227 0.58158,-0.74227 z m 0,6.26802 c -0.42649,0 -0.58158,-0.3711 -0.58158,-0.7422 0,-0.3506 0.1357,-0.7011 0.36834,-1.0104 h 1.82232 c 0,0.1444 0.0194,0.2887 0.0194,0.4124 -0.2521,0.2268 -0.4653,0.433 -0.65917,0.6392 -0.40711,0.4124 -0.6979,0.701 -0.96931,0.701 z M 11.3748,4.52577 C 10.6769,3.7835 9.95961,3 8.79645,3 7.14863,3 5.96607,4.23711 5.96607,5.92784 c 0,0.82474 0.17448,1.50515 0.32957,1.91752 L 5.73344,7.96907 V 7.02062 H 5.40388 4.27948 3.96931 V 8.05155 H 3.31018 3 V 8.40206 9.5979 9.9485 h 0.31018 0.65913 v 1.0309 h 0.31017 1.1244 0.32956 v -0.9485 l 0.54281,0.1237 c -0.1357,0.4124 -0.31018,1.0928 -0.31018,1.9176 0,1.6907 1.18256,2.9278 2.83038,2.9278 1.16316,0 1.88045,-0.7835 2.57835,-1.5258 0.3683,-0.3711 0.7367,-0.7629 1.1632,-1.0515 0.1357,0.4536 0.3683,0.7422 0.6979,0.9072 0.3683,0.2062 0.8142,0.2062 1.3182,0.2062 H 14.6704 15 V 13.1856 L 14.9935,4.81443 V 4.46392 H 14.664 14.5477 c -0.5041,0 -0.95,0 -1.3183,0.20618 C 12.8998,4.83505 12.6672,5.12371 12.5315,5.57732 12.105,5.28866 11.7367,4.89691 11.3683,4.52577 Z\"\n fill=\"black\"\n style=\"fill:#000000;fill-opacity:1;filter:url(#shadow);\"\n id=\"path1-6\" />\n </g>`;\n","import { Effects } from 'chessboard/plugins/effects/renderer/types';\n\nexport const defeatWhite = `<g id=\"defeat_white\">\n<path class=\"${Effects.ClassNames.Shadow}\" opacity=\"0.3\" d=\"M9,.5a9,9,0,1,0,9,9A9,9,0,0,0,9,.5Z\"></path>\n<path class=\"${Effects.ClassNames.Background}\" fill=\"#E02828\" d=\"M9,0a9,9,0,1,0,9,9A9,9,0,0,0,9,0Z\"></path>\n\n<filter id=\"shadow\">\n  <feDropShadow dx=\"0\" dy=\"0.3\" stdDeviation=\"0\" flood-opacity=\"0.5\"/>\n</filter>\n\n<path\n d=\"m 8.91922,5.86598 c 0.27141,0 0.5622,0.28866 0.96931,0.70103 0.19387,0.20619 0.40707,0.41237 0.65917,0.63918 0,0.12371 -0.0194,0.26804 -0.0194,0.41237 H 8.70598 C 8.47334,7.30928 8.33764,6.95876 8.33764,6.60825 c 0,-0.37114 0.15509,-0.74227 0.58158,-0.74227 z m 0,6.26802 c -0.42649,0 -0.58158,-0.3711 -0.58158,-0.7422 0,-0.3506 0.1357,-0.7011 0.36834,-1.0104 h 1.82232 c 0,0.1444 0.0194,0.2887 0.0194,0.4124 -0.2521,0.2268 -0.4653,0.433 -0.65917,0.6392 -0.40711,0.4124 -0.6979,0.701 -0.96931,0.701 z M 11.3748,4.52577 C 10.6769,3.7835 9.95961,3 8.79645,3 7.14863,3 5.96607,4.23711 5.96607,5.92784 c 0,0.82474 0.17448,1.50515 0.32957,1.91752 L 5.73344,7.96907 V 7.02062 H 5.40388 4.27948 3.96931 V 8.05155 H 3.31018 3 V 8.40206 9.5979 9.9485 h 0.31018 0.65913 v 1.0309 h 0.31017 1.1244 0.32956 v -0.9485 l 0.54281,0.1237 c -0.1357,0.4124 -0.31018,1.0928 -0.31018,1.9176 0,1.6907 1.18256,2.9278 2.83038,2.9278 1.16316,0 1.88045,-0.7835 2.57835,-1.5258 0.3683,-0.3711 0.7367,-0.7629 1.1632,-1.0515 0.1357,0.4536 0.3683,0.7422 0.6979,0.9072 0.3683,0.2062 0.8142,0.2062 1.3182,0.2062 H 14.6704 15 V 13.1856 L 14.9935,4.81443 V 4.46392 H 14.664 14.5477 c -0.5041,0 -0.95,0 -1.3183,0.20618 C 12.8998,4.83505 12.6672,5.12371 12.5315,5.57732 12.105,5.28866 11.7367,4.89691 11.3683,4.52577 Z\"\n fill=\"white\"\n style=\"fill:#ffffff;fill-opacity:1;filter:url(#shadow);\"\n id=\"path1-6\" />\n </g>`;\n","import { Effects } from 'chessboard/plugins/effects/renderer/types';\n\nexport const drawBlack = `<g id=\"draw_black\">\n    <path class=\"${Effects.ClassNames.Shadow}\" opacity=\"0.3\" d=\"M9,.5a9,9,0,1,0,9,9A9,9,0,0,0,9,.5Z\"></path>\n    <path class=\"${Effects.ClassNames.Background}\" fill=\"#312e2b\" d=\"M9,0a9,9,0,1,0,9,9A9,9,0,0,0,9,0Z\"></path>\n    <path d=\"M2.92,7V5.84c.81,0,1.75-.28,1.8-1.22H6.14v5.5H4.34V7Zm8.87-2.39L7,13.88H5l4.8-9.26ZM9.85,13.88c-.08-1.54,1.38-2.19,2.57-2.89.33-.17.78-.4.78-.78a.66.66,0,0,0-.68-.7c-.69,0-.94.58-.92,1.16H10a2.17,2.17,0,0,1,.64-1.79,2.74,2.74,0,0,1,1.91-.62C14.1,8.26,15,8.78,15,10c0,1.82-2.66,2.18-2.66,2.5h2.73v1.38Z\"></path>\n    <path class=\"${Effects.ClassNames.ComponentShadow}\" fill=\"#fff\" d=\"M2.92,6.51V5.34c.81,0,1.75-.28,1.8-1.22H6.14v5.5H4.34V6.51Zm8.87-2.39L7,13.38H5l4.8-9.26ZM9.85,13.38c-.08-1.54,1.38-2.19,2.57-2.89.33-.17.78-.4.78-.78a.66.66,0,0,0-.68-.7c-.69,0-.94.58-.92,1.16H10a2.17,2.17,0,0,1,.64-1.79,2.74,2.74,0,0,1,1.91-.62C14.1,7.76,15,8.28,15,9.5c0,1.82-2.66,2.18-2.66,2.5h2.73v1.38Z\"></path>\n  </g>`;\n","import { Effects } from 'chessboard/plugins/effects/renderer/types';\n\nexport const drawWhite = `<g id=\"draw_white\">\n    <path class=\"${Effects.ClassNames.Shadow}\" opacity=\"0.3\" d=\"M9,.5a9,9,0,1,0,9,9A9,9,0,0,0,9,.5Z\"></path>\n    <circle class=\"${Effects.ClassNames.Background}\" fill=\"#f8f8f8\" cx=\"9\" cy=\"9\" r=\"8.5\"></circle>\n    <path class=\"${Effects.ClassNames.ComponentShadow}\" fill=\"#e8e8e8\" d=\"M9,1A8,8,0,1,1,1,9,8,8,0,0,1,9,1M9,0a9,9,0,1,0,9,9A9,9,0,0,0,9,0Z\"></path>\n    <path d=\"M2.92,6.61V5.44c.81,0,1.75-.28,1.8-1.22H6.14v5.5H4.34V6.61Zm8.87-2.39L7,13.48H5l4.8-9.26ZM9.85,13.48c-.08-1.54,1.38-2.19,2.57-2.89.33-.17.78-.4.78-.78a.66.66,0,0,0-.68-.7c-.69,0-.94.58-.92,1.16H10a2.17,2.17,0,0,1,.64-1.79,2.74,2.74,0,0,1,1.91-.62C14.1,7.86,15,8.38,15,9.6c0,1.82-2.66,2.18-2.66,2.5h2.73v1.38Z\"></path>\n  </g>`;\n","import { Effects } from 'chessboard/plugins/effects/renderer/types';\n\nexport const excellent = `<g id=\"excellent\">\n    <g>\n      <path class=\"${Effects.ClassNames.Shadow}\" opacity=\"0.3\" d=\"M9,.5a9,9,0,1,0,9,9A9,9,0,0,0,9,.5Z\"></path>\n      <path class=\"${Effects.ClassNames.Background}\" fill=\"#81B64C\" d=\"M9,0a9,9,0,1,0,9,9A9,9,0,0,0,9,0Z\"></path>\n    </g>\n    <g class=\"${Effects.ClassNames.ComponentShadow}\" opacity=\"0.2\">\n      <path d=\"M13.79,11.34c0-.2.4-.53.4-.94S14,9.72,14,9.58a2.06,2.06,0,0,0,.18-.83,1,1,0,0,0-.3-.69,1.13,1.13,0,0,0-.55-.2,10.29,10.29,0,0,1-2.07,0c-.37-.23,0-1.18.18-1.7S11.9,4,10.62,3.7c-.69-.17-.66.37-.78.9-.05.21-.09.43-.13.57A5,5,0,0,1,7.05,8.23a1.57,1.57,0,0,1-.42.18v4.94A7.23,7.23,0,0,1,8,13.53c.52.12.91.25,1.44.33A11.11,11.11,0,0,0,11,14a6.65,6.65,0,0,0,1.18,0,1.09,1.09,0,0,0,1-.59.66.66,0,0,0,.06-.2,1.63,1.63,0,0,1,.07-.3c.13-.28.37-.3.5-.68S13.74,11.53,13.79,11.34Z\"></path>\n      <path d=\"M5.49,8.09H4.31a.5.5,0,0,0-.5.5v4.56a.5.5,0,0,0,.5.5H5.49a.5.5,0,0,0,.5-.5V8.59A.5.5,0,0,0,5.49,8.09Z\"></path>\n    </g>\n    <g>\n      <path class=\"${Effects.ClassNames.Component}\" fill=\"#fff\" d=\"M13.79,10.84c0-.2.4-.53.4-.94S14,9.22,14,9.08a2.06,2.06,0,0,0,.18-.83,1,1,0,0,0-.3-.69,1.13,1.13,0,0,0-.55-.2,10.29,10.29,0,0,1-2.07,0c-.37-.23,0-1.18.18-1.7s.51-2.12-.77-2.43c-.69-.17-.66.37-.78.9-.05.21-.09.43-.13.57A5,5,0,0,1,7.05,7.73a1.57,1.57,0,0,1-.42.18v4.94A7.23,7.23,0,0,1,8,13c.52.12.91.25,1.44.33a11.11,11.11,0,0,0,1.62.16,6.65,6.65,0,0,0,1.18,0,1.09,1.09,0,0,0,1-.59.66.66,0,0,0,.06-.2,1.63,1.63,0,0,1,.07-.3c.13-.28.37-.3.5-.68S13.74,11,13.79,10.84Z\"></path>\n      <path class=\"${Effects.ClassNames.Component}\" fill=\"#fff\" d=\"M5.49,7.59H4.31a.5.5,0,0,0-.5.5v4.56a.5.5,0,0,0,.5.5H5.49a.5.5,0,0,0,.5-.5V8.09A.5.5,0,0,0,5.49,7.59Z\"></path>\n    </g>\n  </g>`;\n","import { Effects } from 'chessboard/plugins/effects/renderer/types';\n\nexport const fastWin = `<g id=\"fast_win\">\n    <g>\n      <path class=\"${Effects.ClassNames.Shadow}\" opacity=\"0.3\" d=\"M9,.5a9,9,0,1,0,9,9A9,9,0,0,0,9,.5Z\"></path>\n      <path class=\"${Effects.ClassNames.Background}\" fill=\"#96af8b\" d=\"M9,0a9,9,0,1,0,9,9A9,9,0,0,0,9,0Z\"></path>\n    </g>\n    <g class=\"${Effects.ClassNames.ComponentShadow}\" opacity=\"0.2\">\n      <path d=\"M4.85,4.7,9.67,9.19a.18.18,0,0,1,.05.07.21.21,0,0,1,0,.18l-.05.07L4.85,14a.24.24,0,0,1-.11.06.3.3,0,0,1-.13,0A.23.23,0,0,1,4.52,14a.28.28,0,0,1,0-.12v-9a.28.28,0,0,1,0-.12.23.23,0,0,1,.09-.08.3.3,0,0,1,.13,0A.24.24,0,0,1,4.85,4.7Z\"></path>\n      <path d=\"M10,4.7l4.82,4.49a.18.18,0,0,1,.05.07.21.21,0,0,1,0,.18l-.05.07L10,14a.24.24,0,0,1-.11.06.27.27,0,0,1-.13,0A.18.18,0,0,1,9.7,14a.19.19,0,0,1,0-.12v-9a.19.19,0,0,1,0-.12.18.18,0,0,1,.09-.08.27.27,0,0,1,.13,0A.24.24,0,0,1,10,4.7Z\"></path>\n    </g>\n    <g>\n      <path class=\"${Effects.ClassNames.Component}\" fill=\"#fff\" d=\"M4.85,4.2,9.67,8.69a.18.18,0,0,1,.05.07.21.21,0,0,1,0,.18L9.67,9,4.85,13.5a.24.24,0,0,1-.11.06.3.3,0,0,1-.13,0,.23.23,0,0,1-.09-.08.28.28,0,0,1,0-.12v-9a.28.28,0,0,1,0-.12.23.23,0,0,1,.09-.08.3.3,0,0,1,.13,0A.24.24,0,0,1,4.85,4.2Z\"></path>\n      <path class=\"${Effects.ClassNames.Component}\" fill=\"#fff\" d=\"M10,4.2l4.82,4.49a.18.18,0,0,1,.05.07.21.21,0,0,1,0,.18L14.85,9,10,13.5a.24.24,0,0,1-.11.06.27.27,0,0,1-.13,0,.18.18,0,0,1-.09-.08.19.19,0,0,1,0-.12v-9a.19.19,0,0,1,0-.12.18.18,0,0,1,.09-.08.27.27,0,0,1,.13,0A.24.24,0,0,1,10,4.2Z\"></path>\n    </g>\n  </g>`;\n","import { Effects } from 'chessboard/plugins/effects/renderer/types';\n\nexport const freePiece = `<g id=\"free_piece\">\n    <path class=\"${Effects.ClassNames.Shadow}\" opacity=\"0.3\" d=\"M9,.5a9,9,0,1,0,9,9A9,9,0,0,0,9,.5Z\"></path>\n    <path class=\"${Effects.ClassNames.Background}\" fill=\"#ec6250\" d=\"M9,0a9,9,0,1,0,9,9A9,9,0,0,0,9,0Z\"></path>\n    <g class=\"${Effects.ClassNames.ComponentShadow}\" opacity=\"0.2\">\n      <path d=\"M9.76,9.66h3.89v4.19a.68.68,0,0,1-.68.68H9.76Z\"></path>\n      <path d=\"M4.35,9.66H8.24v4.87H5a.58.58,0,0,1-.26-.06.6.6,0,0,1-.36-.36.58.58,0,0,1,0-.26V9.66Z\"></path>\n      <path d=\"M13.39,7H10.13l2-1a.78.78,0,0,0,.29-.25.78.78,0,0,0,.13-.36A.82.82,0,0,0,12.53,5a.87.87,0,0,0-.23-.31l-1.15-1a.76.76,0,0,0-.34-.16.74.74,0,0,0-.39,0,.94.94,0,0,0-.33.2.84.84,0,0,0-.19.33L9.08,7H9l-.83-2.9A.73.73,0,0,0,8,3.81a.79.79,0,0,0-.33-.2.7.7,0,0,0-.38,0,.75.75,0,0,0-.35.16l-1.14,1A.87.87,0,0,0,5.54,5a.71.71,0,0,0,0,.38.78.78,0,0,0,.13.36A.71.71,0,0,0,5.91,6l2,1H4.61a.46.46,0,0,0-.49.44v.87a.47.47,0,0,0,.49.45h8.78a.47.47,0,0,0,.49-.45V7.48A.47.47,0,0,0,13.39,7Z\"></path>\n    </g>\n    <g>\n      <path class=\"${Effects.ClassNames.Component}\" fill=\"#fff\" d=\"M9.76,14H13a.71.71,0,0,0,.48-.19.72.72,0,0,0,.2-.48V9.16H9.76Z\"></path>\n      <path class=\"${Effects.ClassNames.Component}\" fill=\"#fff\" d=\"M4.36,13.35a.58.58,0,0,0,0,.26.6.6,0,0,0,.36.36A.58.58,0,0,0,5,14H8.24V9.16H4.36Z\"></path>\n      <path class=\"${Effects.ClassNames.Component}\" fill=\"#fff\" d=\"M13.39,6.54H10.13l2-1a.78.78,0,0,0,.29-.25.78.78,0,0,0,.13-.36.82.82,0,0,0-.05-.38.87.87,0,0,0-.23-.31l-1.15-1a.76.76,0,0,0-.34-.16.74.74,0,0,0-.39,0,.94.94,0,0,0-.33.2.84.84,0,0,0-.19.33l-.82,2.9H9l-.83-2.9A.73.73,0,0,0,8,3.31a.79.79,0,0,0-.33-.2.7.7,0,0,0-.38,0,.75.75,0,0,0-.35.16l-1.14,1a.87.87,0,0,0-.23.31.71.71,0,0,0,0,.38.78.78,0,0,0,.13.36.71.71,0,0,0,.29.25l2,1H4.61A.46.46,0,0,0,4.12,7v.87a.47.47,0,0,0,.49.45h8.78a.47.47,0,0,0,.49-.45V7A.47.47,0,0,0,13.39,6.54Z\"></path>\n    </g>\n  </g>`;\n","import { Effects } from 'chessboard/plugins/effects/renderer/types';\n\nexport const gamechanger = `<path class=\"${Effects.ClassNames.Shadow}\" opacity=\"0.3\" d=\"M9,.5a9,9,0,1,0,9,9A9,9,0,0,0,9,.5Z\"></path>\n<path class=\"${Effects.ClassNames.Background}\" fill=\"#7979a1\" d=\"M9,0a9,9,0,1,0,9,9A9,9,0,0,0,9,0Z\"></path>\n<g class=\"${Effects.ClassNames.ComponentShadow}\" opacity=\"0.1\">\n    <polygon points=\"11.29 11.34 11.29 8.56 7.79 11.3 7.79 11.34 5.39 11.34 9.54 16.5 13.73 11.34 11.29 11.34\"></polygon>\n    <polygon points=\"7.83 7.51 7.83 10.32 11.33 7.58 11.33 7.5 13.73 7.5 9.58 2.35 5.39 7.51 7.83 7.51\"></polygon>\n  </g>\n<g>\n    <polygon class=\"${Effects.ClassNames.Component}\" fill=\"#fff\" points=\"10.9 10.92 10.9 8.13 7.4 10.87 7.4 10.92 5 10.92 9.15 16.07 13.34 10.92 10.9 10.92\"></polygon>\n    <polygon class=\"${Effects.ClassNames.Component}\" fill=\"#fff\" points=\"7.44 7.08 7.44 9.9 10.94 7.16 10.94 7.08 13.34 7.08 9.19 1.93 5 7.08 7.44 7.08\"></polygon>\n  </g>`;\n","import { Effects } from 'chessboard/plugins/effects/renderer/types';\n\nexport const greatFind = `<g id=\"great_find\">\n    <path class=\"${Effects.ClassNames.Shadow}\" opacity=\"0.3\" d=\"M9,.5a9,9,0,1,0,9,9A9,9,0,0,0,9,.5Z\"></path>\n    <path class=\"${Effects.ClassNames.Background}\" fill=\"#749BBF\" d=\"M9,0a9,9,0,1,0,9,9A9,9,0,0,0,9,0Z\"></path>\n    <g>\n      <g class=\"${Effects.ClassNames.ComponentShadow}\" opacity=\"0.2\">\n        <path d=\"M10.32,14.6a.27.27,0,0,1,0,.13.44.44,0,0,1-.08.11l-.11.08-.13,0H8l-.13,0-.11-.08a.41.41,0,0,1-.08-.24V12.7a.27.27,0,0,1,0-.13.36.36,0,0,1,.07-.1.39.39,0,0,1,.1-.08l.13,0h2a.31.31,0,0,1,.24.1.39.39,0,0,1,.08.1.51.51,0,0,1,0,.13Zm-.12-3.93a.17.17,0,0,1,0,.12.41.41,0,0,1-.07.11.4.4,0,0,1-.23.08H8.1a.31.31,0,0,1-.34-.31L7.61,3.9a.36.36,0,0,1,.09-.24.23.23,0,0,1,.11-.08.27.27,0,0,1,.13,0h2.11a.32.32,0,0,1,.25.1.36.36,0,0,1,.09.24Z\"></path>\n      </g>\n      <path class=\"${Effects.ClassNames.Component}\" fill=\"#fff\" d=\"M10.32,14.1a.27.27,0,0,1,0,.13.44.44,0,0,1-.08.11l-.11.08-.13,0H8l-.13,0-.11-.08a.41.41,0,0,1-.08-.24V12.2a.27.27,0,0,1,0-.13.36.36,0,0,1,.07-.1.39.39,0,0,1,.1-.08l.13,0h2a.31.31,0,0,1,.24.1.39.39,0,0,1,.08.1.51.51,0,0,1,0,.13Zm-.12-3.93a.17.17,0,0,1,0,.12.41.41,0,0,1-.07.11.4.4,0,0,1-.23.08H8.1a.31.31,0,0,1-.34-.31L7.61,3.4a.36.36,0,0,1,.09-.24.23.23,0,0,1,.11-.08.27.27,0,0,1,.13,0h2.11a.32.32,0,0,1,.25.1.36.36,0,0,1,.09.24Z\"></path>\n    </g>\n  </g>`;\n","import { Effects } from 'chessboard/plugins/effects/renderer/types';\n\nexport const forced = `<g id=\"forced\">\n    <g id=\"fast_win\">\n      <g>\n        <path class=\"${Effects.ClassNames.Shadow}\" opacity=\"0.3\" d=\"M9,.5a9,9,0,1,0,9,9A9,9,0,0,0,9,.5Z\"></path>\n        <path class=\"${Effects.ClassNames.Background}\" fill=\"#96af8b\" d=\"M9,0a9,9,0,1,0,9,9A9,9,0,0,0,9,0Z\"></path>\n      </g>\n    </g>\n    <g class=\"${Effects.ClassNames.ComponentShadow}\" opacity=\"0.2\">\n      <path d=\"M14.39,9.07,9,4.31a.31.31,0,0,0-.3,0,.32.32,0,0,0-.13.1.29.29,0,0,0,0,.16V7.42H3.9a.58.58,0,0,0-.19,0,.5.5,0,0,0-.17.11.91.91,0,0,0-.11.16.63.63,0,0,0,0,.19v3.41a.58.58,0,0,0,0,.19.64.64,0,0,0,.11.16.39.39,0,0,0,.17.11.41.41,0,0,0,.19,0H8.5v2.74a.26.26,0,0,0,.16.26.3.3,0,0,0,.16,0A.34.34,0,0,0,9,14.79L14.39,10a.69.69,0,0,0,.16-.22.7.7,0,0,0,0-.52A.69.69,0,0,0,14.39,9.07Z\"></path>\n    </g>\n    <path class=\"${Effects.ClassNames.Component}\" fill=\"#fff\" d=\"M14.39,8.57,9,3.81a.31.31,0,0,0-.3,0,.32.32,0,0,0-.13.1A.29.29,0,0,0,8.5,4V6.92H3.9a.58.58,0,0,0-.19,0,.5.5,0,0,0-.17.11.91.91,0,0,0-.11.16.63.63,0,0,0,0,.19v3.41a.58.58,0,0,0,0,.19.64.64,0,0,0,.11.16.39.39,0,0,0,.17.11.41.41,0,0,0,.19,0H8.5v2.74a.26.26,0,0,0,.16.26.3.3,0,0,0,.16,0A.34.34,0,0,0,9,14.29l5.42-4.76a.69.69,0,0,0,.16-.22.7.7,0,0,0,0-.52A.69.69,0,0,0,14.39,8.57Z\"></path>\n  </g>`;\n","import { Effects } from 'chessboard/plugins/effects/renderer/types';\n\nexport const good = `<g id=\"good\">\n    <g>\n      <path class=\"${Effects.ClassNames.Shadow}\" opacity=\"0.3\" d=\"M9,.5a9,9,0,1,0,9,9A9,9,0,0,0,9,.5Z\"></path>\n      <path class=\"${Effects.ClassNames.Background}\" fill=\"#95b776\" d=\"M9,0a9,9,0,1,0,9,9A9,9,0,0,0,9,0Z\"></path>\n    </g>\n    <g>\n      <path class=\"${Effects.ClassNames.ComponentShadow}\" opacity=\"0.2\" d=\"M15.11,6.81,9.45,12.47,7.79,14.13a.39.39,0,0,1-.28.11.39.39,0,0,1-.27-.11L2.89,9.78a.39.39,0,0,1-.11-.28.39.39,0,0,1,.11-.27L4.28,7.85a.34.34,0,0,1,.12-.09l.15,0a.37.37,0,0,1,.15,0,.38.38,0,0,1,.13.09l2.69,2.68,5.65-5.65a.38.38,0,0,1,.13-.09.37.37,0,0,1,.15,0,.4.4,0,0,1,.15,0,.34.34,0,0,1,.12.09l1.39,1.38a.41.41,0,0,1,.08.13.33.33,0,0,1,0,.15.4.4,0,0,1,0,.15A.5.5,0,0,1,15.11,6.81Z\"></path>\n      <path class=\"${Effects.ClassNames.Component}\" fill=\"#fff\" d=\"M15.11,6.31,9.45,12,7.79,13.63a.39.39,0,0,1-.28.11.39.39,0,0,1-.27-.11L2.89,9.28A.39.39,0,0,1,2.78,9a.39.39,0,0,1,.11-.27L4.28,7.35a.34.34,0,0,1,.12-.09l.15,0a.37.37,0,0,1,.15,0,.38.38,0,0,1,.13.09L7.52,10l5.65-5.65a.38.38,0,0,1,.13-.09.37.37,0,0,1,.15,0,.4.4,0,0,1,.15,0,.34.34,0,0,1,.12.09l1.39,1.38a.41.41,0,0,1,.08.13.33.33,0,0,1,0,.15.4.4,0,0,1,0,.15A.5.5,0,0,1,15.11,6.31Z\"></path>\n    </g>\n  </g>`;\n","import { Effects } from 'chessboard/plugins/effects/renderer/types';\n\nexport const inaccuracy = `<g id=\"inaccuracy\">\n    <path class=\"${Effects.ClassNames.Shadow}\" opacity=\"0.3\" d=\"M9,.5a9,9,0,1,0,9,9A9,9,0,0,0,9,.5Z\"></path>\n    <path class=\"${Effects.ClassNames.Background}\" fill=\"#F7C631\" d=\"M9,0a9,9,0,1,0,9,9A9,9,0,0,0,9,0Z\"></path>\n    <g class=\"${Effects.ClassNames.ComponentShadow}\" opacity=\"0.2\">\n      <path d=\"M13.66,14.8a.28.28,0,0,1,0,.13.23.23,0,0,1-.08.11.28.28,0,0,1-.11.08l-.12,0h-2l-.13,0a.27.27,0,0,1-.1-.08A.36.36,0,0,1,11,14.8V12.9a.59.59,0,0,1,0-.13.36.36,0,0,1,.07-.1l.1-.08.13,0h2a.33.33,0,0,1,.23.1.39.39,0,0,1,.08.1.28.28,0,0,1,0,.13Zm-.12-3.93a.31.31,0,0,1,0,.13.3.3,0,0,1-.07.1.3.3,0,0,1-.23.08H11.43a.31.31,0,0,1-.34-.31L10.94,4.1A.5.5,0,0,1,11,3.86l.11-.08.13,0h2.11a.35.35,0,0,1,.26.1.41.41,0,0,1,.08.24Z\"></path>\n      <path d=\"M7.65,14.82a.27.27,0,0,1,0,.12.26.26,0,0,1-.07.11l-.1.07-.13,0H5.43a.25.25,0,0,1-.12,0,.27.27,0,0,1-.1-.08.31.31,0,0,1-.09-.22V13a.36.36,0,0,1,.09-.23l.1-.07.12,0H7.32a.32.32,0,0,1,.23.09.3.3,0,0,1,.07.1.28.28,0,0,1,0,.13Zm2.2-7.17a3.1,3.1,0,0,1-.36.73A5.58,5.58,0,0,1,9,9a4.85,4.85,0,0,1-.52.49,8,8,0,0,0-.65.63,1,1,0,0,0-.27.7V11a.21.21,0,0,1,0,.12.17.17,0,0,1-.06.1.23.23,0,0,1-.1.07l-.12,0H5.53a.21.21,0,0,1-.12,0,.18.18,0,0,1-.1-.07.2.2,0,0,1-.08-.1.37.37,0,0,1,0-.12v-.35a2.68,2.68,0,0,1,.13-.84,2.91,2.91,0,0,1,.33-.66,3.38,3.38,0,0,1,.45-.55c.16-.15.33-.29.49-.42a7.84,7.84,0,0,0,.65-.64,1,1,0,0,0,.25-.67.77.77,0,0,0-.07-.34.67.67,0,0,0-.23-.27A1.16,1.16,0,0,0,6.49,6,1.61,1.61,0,0,0,6,6.11a3,3,0,0,0-.41.18,1.75,1.75,0,0,0-.29.18l-.11.09A.5.5,0,0,1,5,6.62a.31.31,0,0,1-.21-.13l-1-1.21a.3.3,0,0,1,0-.4A1.36,1.36,0,0,1,4,4.68a3.07,3.07,0,0,1,.56-.38,5.49,5.49,0,0,1,.9-.37,3.69,3.69,0,0,1,1.19-.17,3.92,3.92,0,0,1,2.3.75,2.85,2.85,0,0,1,.77.92A2.82,2.82,0,0,1,10,6.71,3,3,0,0,1,9.85,7.65Z\"></path>\n    </g>\n    <g>\n      <path class=\"${Effects.ClassNames.Component}\" fill=\"#fff\" d=\"M13.66,14.3a.28.28,0,0,1,0,.13.23.23,0,0,1-.08.11.28.28,0,0,1-.11.08l-.12,0h-2l-.13,0a.27.27,0,0,1-.1-.08A.36.36,0,0,1,11,14.3V12.4a.59.59,0,0,1,0-.13.36.36,0,0,1,.07-.1l.1-.08.13,0h2a.33.33,0,0,1,.23.1.39.39,0,0,1,.08.1.28.28,0,0,1,0,.13Zm-.12-3.93a.31.31,0,0,1,0,.13.3.3,0,0,1-.07.1.3.3,0,0,1-.23.08H11.43a.31.31,0,0,1-.34-.31L10.94,3.6A.5.5,0,0,1,11,3.36l.11-.08.13,0h2.11a.35.35,0,0,1,.26.1.41.41,0,0,1,.08.24Z\"></path>\n      <path class=\"${Effects.ClassNames.Component}\" fill=\"#fff\" d=\"M7.65,14.32a.27.27,0,0,1,0,.12.26.26,0,0,1-.07.11l-.1.07-.13,0H5.43a.25.25,0,0,1-.12,0,.27.27,0,0,1-.1-.08.31.31,0,0,1-.09-.22V12.49a.36.36,0,0,1,.09-.23l.1-.07.12,0H7.32a.32.32,0,0,1,.23.09.3.3,0,0,1,.07.1.28.28,0,0,1,0,.13Zm2.2-7.17a3.1,3.1,0,0,1-.36.73,5.58,5.58,0,0,1-.49.6A4.85,4.85,0,0,1,8.48,9a8,8,0,0,0-.65.63,1,1,0,0,0-.27.7v.22a.21.21,0,0,1,0,.12.17.17,0,0,1-.06.1.23.23,0,0,1-.1.07l-.12,0H5.53a.21.21,0,0,1-.12,0,.18.18,0,0,1-.1-.07.2.2,0,0,1-.08-.1.37.37,0,0,1,0-.12v-.35a2.68,2.68,0,0,1,.13-.84,2.91,2.91,0,0,1,.33-.66,3.38,3.38,0,0,1,.45-.55c.16-.15.33-.29.49-.42a7.84,7.84,0,0,0,.65-.64,1,1,0,0,0,.25-.67.77.77,0,0,0-.07-.34.67.67,0,0,0-.23-.27,1.16,1.16,0,0,0-.72-.24A1.61,1.61,0,0,0,6,5.61a3,3,0,0,0-.41.18A1.75,1.75,0,0,0,5.3,6l-.11.09A.5.5,0,0,1,5,6.12.31.31,0,0,1,4.74,6l-1-1.21a.3.3,0,0,1,0-.4A1.36,1.36,0,0,1,4,4.18a3.07,3.07,0,0,1,.56-.38,5.49,5.49,0,0,1,.9-.37,3.69,3.69,0,0,1,1.19-.17A3.92,3.92,0,0,1,8.93,4a2.85,2.85,0,0,1,.77.92A2.82,2.82,0,0,1,10,6.21,3,3,0,0,1,9.85,7.15Z\"></path>\n    </g>\n  </g>`;\n","import { Effects } from 'chessboard/plugins/effects/renderer/types';\n\nexport const incorrect = `<g id=\"incorrect\">\n    <path class=\"${Effects.ClassNames.Shadow}\" opacity=\"0.3\" d=\"M9,.5a9,9,0,1,0,9,9A9,9,0,0,0,9,.5Z\"></path>\n    <path class=\"${Effects.ClassNames.Background}\" fill=\"#fa412d\" d=\"M9,0a9,9,0,1,0,9,9A9,9,0,0,0,9,0Z\"></path>\n    <g class=\"${Effects.ClassNames.ComponentShadow}\" opacity=\"0.2\">\n      <path d=\"M14,12.51a.57.57,0,0,1,.08.13.39.39,0,0,1,0,.3.5.5,0,0,1-.08.12l-1.38,1.38a.5.5,0,0,1-.12.08l-.15,0-.15,0a.57.57,0,0,1-.13-.08L9,11.37,5.94,14.44a.57.57,0,0,1-.13.08l-.15,0-.15,0a.36.36,0,0,1-.12-.08L4,13.06a.39.39,0,0,1-.11-.27A.41.41,0,0,1,4,12.51L7.07,9.45,4,6.39a.43.43,0,0,1-.11-.28A.39.39,0,0,1,4,5.84L5.39,4.46a.39.39,0,0,1,.27-.11.43.43,0,0,1,.28.11L9,7.52l3.06-3.06a.41.41,0,0,1,.28-.11.39.39,0,0,1,.27.11L14,5.84a.36.36,0,0,1,.08.12.39.39,0,0,1,0,.3.57.57,0,0,1-.08.13L10.92,9.45Z\"></path>\n    </g>\n    <path class=\"${Effects.ClassNames.Component}\" fill=\"#fff\" d=\"M14,12a.57.57,0,0,1,.08.13.39.39,0,0,1,0,.3.5.5,0,0,1-.08.12l-1.38,1.38a.5.5,0,0,1-.12.08l-.15,0-.15,0a.57.57,0,0,1-.13-.08L9,10.87,5.94,13.94a.57.57,0,0,1-.13.08l-.15,0-.15,0a.36.36,0,0,1-.12-.08L4,12.56a.39.39,0,0,1-.11-.27A.41.41,0,0,1,4,12L7.07,9,4,5.89a.43.43,0,0,1-.11-.28A.39.39,0,0,1,4,5.34L5.39,4a.39.39,0,0,1,.27-.11A.43.43,0,0,1,5.94,4L9,7,12.06,4a.41.41,0,0,1,.28-.11.39.39,0,0,1,.27.11L14,5.34a.36.36,0,0,1,.08.12.39.39,0,0,1,0,.3.57.57,0,0,1-.08.13L10.92,9Z\"></path>\n  </g>`;\n","import { Effects } from 'chessboard/plugins/effects/renderer/types';\n\nexport const mate = `<g id=\"mate\">\n    <path class=\"${Effects.ClassNames.Shadow}\" opacity=\"0.3\" d=\"M9,.5a9,9,0,1,0,9,9A9,9,0,0,0,9,.5Z\"></path>\n    <path class=\"${Effects.ClassNames.Background}\" fill=\"#ec6250\" d=\"M9,0a9,9,0,1,0,9,9A9,9,0,0,0,9,0Z\"></path>\n    <g>\n      <g class=\"${Effects.ClassNames.ComponentShadow}\" opacity=\"0.2\">\n        <path d=\"M11.44,8.61h1.74l.1-1.55H11.54l.18-2.78H10.17L10,7.06H8.31l.18-2.78H6.94L6.76,7.06H5l-.1,1.55H6.66l-.11,1.68H4.82l-.1,1.55H6.46l-.18,2.78H7.83L8,11.84H9.69l-.18,2.78h1.55l.18-2.78H13l.1-1.55H11.34ZM8.11,10.29l.1-1.68H9.89l-.1,1.68Z\"></path>\n      </g>\n      <path class=\"${Effects.ClassNames.Component}\" fill=\"#fff\" d=\"M11.44,8.11h1.74l.1-1.55H11.54l.18-2.78H10.17L10,6.56H8.31l.18-2.78H6.94L6.76,6.56H5l-.1,1.55H6.66L6.55,9.79H4.82l-.1,1.55H6.46l-.18,2.78H7.83L8,11.34H9.69l-.18,2.78h1.55l.18-2.78H13l.1-1.55H11.34ZM8.11,9.79l.1-1.68H9.89l-.1,1.68Z\"></path>\n    </g>\n  </g>`;\n","export const miss =\n  '<defs><style>.cls-1{fill:#f1f2f2;}.cls-2{fill:#FF7769;}.cls-3{opacity:.2;}.cls-4{opacity:.3;}</style></defs><g id=\"incorrect\"><path class=\"cls-4\" d=\"M9,.5C4.03,.5,0,4.53,0,9.5s4.03,9,9,9,9-4.03,9-9S13.97,.5,9,.5Z\"/><path class=\"cls-2\" d=\"M9,0C4.03,0,0,4.03,0,9s4.03,9,9,9,9-4.03,9-9S13.97,0,9,0Z\"/><g class=\"cls-3\"><path d=\"M13.99,12.51s.06,.08,.08,.13c.02,.05,.03,.1,.03,.15s-.01,.1-.03,.15c-.02,.05-.05,.09-.08,.13l-1.37,1.37s-.08,.06-.13,.08c-.05,.02-.1,.03-.15,.03s-.1-.01-.15-.03c-.05-.02-.09-.05-.13-.08l-3.06-3.06-3.06,3.06s-.08,.06-.13,.08c-.05,.02-.1,.03-.15,.03s-.1-.01-.15-.03c-.05-.02-.09-.05-.13-.08l-1.37-1.37c-.07-.07-.11-.17-.11-.28s.04-.2,.11-.28l3.06-3.06-3.06-3.06c-.07-.07-.11-.17-.11-.28s.04-.2,.11-.28l1.37-1.37c.07-.07,.17-.11,.28-.11s.2,.04,.28,.11l3.06,3.06,3.06-3.06c.07-.07,.17-.11,.28-.11s.2,.04,.28,.11l1.37,1.37s.06,.08,.08,.13c.02,.05,.03,.1,.03,.15s-.01,.1-.03,.15c-.02,.05-.05,.09-.08,.13l-3.06,3.06,3.06,3.06Z\"/></g><path class=\"cls-1\" d=\"M13.99,12.01s.06,.08,.08,.13c.02,.05,.03,.1,.03,.15s-.01,.1-.03,.15c-.02,.05-.05,.09-.08,.13l-1.37,1.37s-.08,.06-.13,.08c-.05,.02-.1,.03-.15,.03s-.1-.01-.15-.03c-.05-.02-.09-.05-.13-.08l-3.06-3.06-3.06,3.06s-.08,.06-.13,.08c-.05,.02-.1,.03-.15,.03s-.1-.01-.15-.03c-.05-.02-.09-.05-.13-.08l-1.37-1.37c-.07-.07-.11-.17-.11-.28s.04-.2,.11-.28l3.06-3.06-3.06-3.06c-.07-.07-.11-.17-.11-.28s.04-.2,.11-.28l1.37-1.37c.07-.07,.17-.11,.28-.11s.2,.04,.28,.11l3.06,3.06,3.06-3.06c.07-.07,.17-.11,.28-.11s.2,.04,.28,.11l1.37,1.37s.06,.08,.08,.13c.02,.05,.03,.1,.03,.15s-.01,.1-.03,.15c-.02,.05-.05,.09-.08,.13l-3.06,3.06,3.06,3.06Z\"/></g>';\n","import { Effects } from 'chessboard/plugins/effects/renderer/types';\n\nexport const missedWin = `<g id=\"missed_win\">\n    <g>\n      <path class=\"${Effects.ClassNames.Shadow}\" opacity=\"0.3\" d=\"M9,.5a9,9,0,1,0,9,9A9,9,0,0,0,9,.5Z\"></path>\n      <path class=\"${Effects.ClassNames.Background}\" fill=\"#dbac16\" d=\"M9,0a9,9,0,1,0,9,9A9,9,0,0,0,9,0Z\"></path>\n    </g>\n    <g>\n      <g class=\"${Effects.ClassNames.ComponentShadow}\" opacity=\"0.2\">\n        <rect x=\"2.74\" y=\"8.1\" width=\"12.51\" height=\"3.11\" rx=\"0.36\"></rect>\n      </g>\n      <rect class=\"${Effects.ClassNames.Component}\" fill=\"#fff\" x=\"2.74\" y=\"7.6\" width=\"12.51\" height=\"3.11\" rx=\"0.36\"></rect>\n    </g>\n  </g>`;\n","import { Effects } from 'chessboard/plugins/effects/renderer/types';\n\nexport const mistake = `<g id=\"mistake\">\n    <g>\n      <path class=\"${Effects.ClassNames.Shadow}\" opacity=\"0.3\" d=\"M9,.5a9,9,0,1,0,9,9A9,9,0,0,0,9,.5Z\"></path>\n      <path class=\"${Effects.ClassNames.Background}\" fill=\"#FFA459\" d=\"M9,0a9,9,0,1,0,9,9A9,9,0,0,0,9,0Z\"></path>\n    </g>\n    <g>\n      <g class=\"${Effects.ClassNames.ComponentShadow}\" opacity=\"0.2\">\n        <path d=\"M9.92,15a.27.27,0,0,1,0,.12.41.41,0,0,1-.07.11.32.32,0,0,1-.23.09H7.7a.25.25,0,0,1-.12,0,.27.27,0,0,1-.1-.08A.31.31,0,0,1,7.39,15V13.19A.32.32,0,0,1,7.48,13l.1-.07.12,0H9.59a.32.32,0,0,1,.23.09.61.61,0,0,1,.07.1.28.28,0,0,1,0,.13Zm2.2-7.17a3.1,3.1,0,0,1-.36.73,5.58,5.58,0,0,1-.49.6,6,6,0,0,1-.52.49,8,8,0,0,0-.65.63,1,1,0,0,0-.27.7v.22a.24.24,0,0,1,0,.12.17.17,0,0,1-.06.1.3.3,0,0,1-.1.07l-.12,0H7.79l-.12,0a.3.3,0,0,1-.1-.07.26.26,0,0,1-.07-.1.37.37,0,0,1,0-.12v-.35A2.42,2.42,0,0,1,7.61,10a2.55,2.55,0,0,1,.33-.66,3.38,3.38,0,0,1,.45-.55c.16-.15.33-.29.49-.42a7.73,7.73,0,0,0,.64-.64,1,1,0,0,0,.26-.67.77.77,0,0,0-.07-.34.75.75,0,0,0-.23-.27,1.16,1.16,0,0,0-.72-.24,1.61,1.61,0,0,0-.49.07,3,3,0,0,0-.41.18,1.41,1.41,0,0,0-.29.18l-.11.09a.5.5,0,0,1-.24.06A.31.31,0,0,1,7,6.69L6,5.48a.29.29,0,0,1,0-.4,1.36,1.36,0,0,1,.21-.2,3.07,3.07,0,0,1,.56-.38,5.38,5.38,0,0,1,.89-.37A3.75,3.75,0,0,1,8.9,4a4.07,4.07,0,0,1,1.2.19,4,4,0,0,1,1.09.56,2.76,2.76,0,0,1,.78.92,2.82,2.82,0,0,1,.28,1.28A3,3,0,0,1,12.12,7.85Z\"></path>\n      </g>\n      <path class=\"${Effects.ClassNames.Component}\" fill=\"#fff\" d=\"M9.92,14.52a.27.27,0,0,1,0,.12.41.41,0,0,1-.07.11.32.32,0,0,1-.23.09H7.7a.25.25,0,0,1-.12,0,.27.27,0,0,1-.1-.08.31.31,0,0,1-.09-.22V12.69a.32.32,0,0,1,.09-.23l.1-.07.12,0H9.59a.32.32,0,0,1,.23.09.61.61,0,0,1,.07.1.28.28,0,0,1,0,.13Zm2.2-7.17a3.1,3.1,0,0,1-.36.73,5.58,5.58,0,0,1-.49.6,6,6,0,0,1-.52.49,8,8,0,0,0-.65.63,1,1,0,0,0-.27.7v.22a.24.24,0,0,1,0,.12.17.17,0,0,1-.06.1.3.3,0,0,1-.1.07l-.12,0H7.79l-.12,0a.3.3,0,0,1-.1-.07.26.26,0,0,1-.07-.1.37.37,0,0,1,0-.12v-.35a2.42,2.42,0,0,1,.13-.84,2.55,2.55,0,0,1,.33-.66,3.38,3.38,0,0,1,.45-.55c.16-.15.33-.29.49-.42a7.73,7.73,0,0,0,.64-.64,1,1,0,0,0,.26-.67.77.77,0,0,0-.07-.34A.75.75,0,0,0,9.48,6a1.16,1.16,0,0,0-.72-.24,1.61,1.61,0,0,0-.49.07A3,3,0,0,0,7.86,6a1.41,1.41,0,0,0-.29.18l-.11.09a.5.5,0,0,1-.24.06A.31.31,0,0,1,7,6.19L6,5a.29.29,0,0,1,0-.4,1.36,1.36,0,0,1,.21-.2A3.07,3.07,0,0,1,6.81,4a5.38,5.38,0,0,1,.89-.37,3.75,3.75,0,0,1,1.2-.17,4.07,4.07,0,0,1,1.2.19,4,4,0,0,1,1.09.56,2.76,2.76,0,0,1,.78.92,2.82,2.82,0,0,1,.28,1.28A3,3,0,0,1,12.12,7.35Z\"></path>\n    </g>\n  </g>`;\n","import { Effects } from 'chessboard/plugins/effects/renderer/types';\n\nexport const resignBlack = `<g id=\"resign_black\">\n    <path class=\"${Effects.ClassNames.Shadow}\" opacity=\"0.3\" d=\"M9,.5a9,9,0,1,0,9,9A9,9,0,0,0,9,.5Z\"></path>\n    <path class=\"${Effects.ClassNames.Background}\" fill=\"#312e2b\" d=\"M9,0a9,9,0,1,0,9,9A9,9,0,0,0,9,0Z\"></path>\n    <g>\n      <path d=\"M4.94,6.34H4.89a.63.63,0,0,0-.44.77l2.16,8.09a.63.63,0,0,0,.77.45l0,0a.62.62,0,0,0,.44-.76L5.7,6.78A.62.62,0,0,0,4.94,6.34Z\"></path>\n      <path d=\"M12.33,4.48c-2,2.29-3.83-.41-6,1.52a.54.54,0,0,0-.15.25.48.48,0,0,0,0,.29c.22.89.87,3.3,1.12,4.15a.15.15,0,0,0,.26.07c1.92-2.65,4,.27,6.11-1.69a.46.46,0,0,0,.12-.44c-.21-.78-.8-3-1.1-4.05C12.62,4.44,12.42,4.36,12.33,4.48Z\"></path>\n    </g>\n    <g>\n      <path class=\"${Effects.ClassNames.ComponentShadow}\" fill=\"#fff\" d=\"M4.94,5.74H4.89a.63.63,0,0,0-.44.77l2.16,8.09a.63.63,0,0,0,.77.45l0,0a.62.62,0,0,0,.44-.76L5.7,6.18A.62.62,0,0,0,4.94,5.74Z\"></path>\n      <path class=\"${Effects.ClassNames.ComponentShadow}\" fill=\"#fff\" d=\"M12.33,3.88c-2,2.29-3.83-.41-6,1.52a.54.54,0,0,0-.15.25.48.48,0,0,0,0,.29c.22.89.87,3.3,1.12,4.15a.15.15,0,0,0,.26.07c1.92-2.65,4,.27,6.11-1.69A.46.46,0,0,0,13.76,8c-.21-.78-.8-3-1.1-4C12.62,3.84,12.42,3.76,12.33,3.88Z\"></path>\n    </g>\n  </g>`;\n","import { Effects } from 'chessboard/plugins/effects/renderer/types';\n\nexport const resignWhite = `<g id=\"resign_white\">\n    <g>\n      <path class=\"${Effects.ClassNames.Shadow}\" opacity=\"0.3\" d=\"M9,.5a9,9,0,1,0,9,9A9,9,0,0,0,9,.5Z\"></path>\n      <circle class=\"${Effects.ClassNames.Background}\" fill=\"#f8f8f8\" cx=\"9\" cy=\"9\" r=\"8.5\"></circle>\n      <g>\n        <path d=\"M4.94,5.74H4.89a.63.63,0,0,0-.44.77l2.16,8.09a.63.63,0,0,0,.77.45l0,0a.62.62,0,0,0,.44-.76L5.7,6.18A.62.62,0,0,0,4.94,5.74Z\"></path>\n        <path d=\"M12.33,3.88c-2,2.29-3.83-.41-6,1.52a.54.54,0,0,0-.15.25.48.48,0,0,0,0,.29c.22.89.87,3.3,1.12,4.15a.15.15,0,0,0,.26.07c1.92-2.65,4,.27,6.11-1.69A.46.46,0,0,0,13.76,8c-.21-.78-.8-3-1.1-4C12.62,3.84,12.42,3.76,12.33,3.88Z\"></path>\n      </g>\n    </g>\n    <path class=\"${Effects.ClassNames.ComponentShadow}\" fill=\"#e8e8e8\" d=\"M9,1A8,8,0,1,1,1,9,8,8,0,0,1,9,1M9,0a9,9,0,1,0,9,9A9,9,0,0,0,9,0Z\"></path>\n  </g>`;\n","import { Effects } from 'chessboard/plugins/effects/renderer/types';\n\nexport const sharp = `<g id=\"sharp\">\n    <path class=\"${Effects.ClassNames.Shadow}\" opacity=\"0.3\" d=\"M9,.5a9,9,0,1,0,9,9A9,9,0,0,0,9,.5Z\"></path>\n    <path class=\"${Effects.ClassNames.Background}\" fill=\"#ad5b8c\" d=\"M9,0a9,9,0,1,0,9,9A9,9,0,0,0,9,0Z\"></path>\n    <g class=\"${Effects.ClassNames.ComponentShadow}\" opacity=\"0.2\">\n      <path d=\"M13.37,11.74,9.25,2.81a.22.22,0,0,0-.1-.11.27.27,0,0,0-.28,0,.18.18,0,0,0-.1.11L4.63,11.74a.26.26,0,0,0,0,.15.25.25,0,0,0,.08.14l2.67,2.29.07.09a.3.3,0,0,1,0,.1v1.08a.25.25,0,0,0,.08.18.24.24,0,0,0,.18.07h2.57a.26.26,0,0,0,.18-.07.25.25,0,0,0,.08-.18V14.51a.16.16,0,0,1,0-.1.47.47,0,0,1,.06-.09L13.31,12a.25.25,0,0,0,.08-.14A.26.26,0,0,0,13.37,11.74ZM9,5v8.73a.24.24,0,0,1-.38.17L5.91,11.76a.3.3,0,0,1-.09-.13.22.22,0,0,1,0-.16L8.84,5a.08.08,0,0,1,0,0h.06A.09.09,0,0,1,9,5S9,5,9,5Z\"></path>\n    </g>\n    <path class=\"${Effects.ClassNames.Component}\" fill=\"#fff\" d=\"M13.37,11.24,9.25,2.31a.22.22,0,0,0-.1-.11.26.26,0,0,0-.28,0,.18.18,0,0,0-.1.11L4.63,11.24a.26.26,0,0,0,0,.15.25.25,0,0,0,.08.14l2.67,2.29.07.09a.3.3,0,0,1,0,.1v1.08a.25.25,0,0,0,.08.18.24.24,0,0,0,.18.07h2.57a.26.26,0,0,0,.18-.07.25.25,0,0,0,.08-.18V14a.16.16,0,0,1,0-.1.47.47,0,0,1,.06-.09l2.67-2.29a.25.25,0,0,0,.08-.14A.26.26,0,0,0,13.37,11.24ZM9,4.51v8.73a.24.24,0,0,1-.38.17L5.91,11.26a.3.3,0,0,1-.09-.13.22.22,0,0,1,0-.16l3-6.49a.08.08,0,0,1,0,0h.06a.09.09,0,0,1,.05,0S9,4.49,9,4.51Z\"></path>\n  </g>`;\n","import { Effects } from 'chessboard/plugins/effects/renderer/types';\n\nexport const takeback = `<g id=\"take_back\">\n    <g>\n      <path class=\"${Effects.ClassNames.Shadow}\" opacity=\"0.3\" d=\"M9,.5a9,9,0,1,0,9,9A9,9,0,0,0,9,.5Z\"></path>\n      <path class=\"${Effects.ClassNames.Background}\" fill=\"#96af8b\" d=\"M9,0a9,9,0,1,0,9,9A9,9,0,0,0,9,0Z\"></path>\n    </g>\n    <g class=\"${Effects.ClassNames.ComponentShadow}\" opacity=\"0.2\">\n      <path d=\"M3.67,10.38a.25.25,0,0,1,.24-.31L5,9.93a.49.49,0,0,1,.2.05.26.26,0,0,1,.1.2,3.77,3.77,0,0,0,1.26,2.34,3.87,3.87,0,0,0,2.52.94,3.53,3.53,0,0,0,1.47-.31,3.72,3.72,0,0,0,1.22-.81,4.13,4.13,0,0,0,.82-1.2,3.74,3.74,0,0,0,0-3A3.94,3.94,0,0,0,11.77,7a3.72,3.72,0,0,0-1.22-.81,3.53,3.53,0,0,0-1.47-.31,3.43,3.43,0,0,0-1.23.22,3.07,3.07,0,0,0-1.09.6L7.85,7.75c.16.14.22.29.16.38s-.18.16-.4.16H4.45a.33.33,0,0,1-.19,0,1,1,0,0,1-.17-.1A.57.57,0,0,1,4,8a.46.46,0,0,1,0-.21V4.6a.4.4,0,0,1,.16-.38c.11,0,.26,0,.42.17L5.6,5.49a5.93,5.93,0,0,1,1.63-1,5.42,5.42,0,0,1,4,.11A5.17,5.17,0,0,1,12.93,5.8a5.48,5.48,0,0,1,1.16,1.73,5.17,5.17,0,0,1,.44,2.12,5,5,0,0,1-.44,2.12,5.54,5.54,0,0,1-2.88,2.91,5.77,5.77,0,0,1-2.13.42,5.39,5.39,0,0,1-1.94-.37,5.36,5.36,0,0,1-2.85-2.48A5.43,5.43,0,0,1,3.67,10.38Z\"></path>\n    </g>\n    <path class=\"${Effects.ClassNames.Component}\" fill=\"#fff\" d=\"M3.67,9.88a.25.25,0,0,1,.24-.31L5,9.43a.49.49,0,0,1,.2.05.26.26,0,0,1,.1.2A3.77,3.77,0,0,0,6.56,12,3.87,3.87,0,0,0,9.08,13a3.53,3.53,0,0,0,1.47-.31,3.72,3.72,0,0,0,1.22-.81,4.13,4.13,0,0,0,.82-1.2,3.74,3.74,0,0,0,0-3,3.94,3.94,0,0,0-.82-1.2,3.72,3.72,0,0,0-1.22-.81,3.53,3.53,0,0,0-1.47-.31,3.43,3.43,0,0,0-1.23.22,3.07,3.07,0,0,0-1.09.6L7.85,7.25c.16.14.22.29.16.38s-.18.16-.4.16H4.45a.33.33,0,0,1-.19,0,1,1,0,0,1-.17-.1A.57.57,0,0,1,4,7.47a.46.46,0,0,1,0-.21V4.1a.4.4,0,0,1,.16-.38c.11-.05.26,0,.42.17L5.6,5A5.93,5.93,0,0,1,7.23,4a5.42,5.42,0,0,1,4,.11A5.17,5.17,0,0,1,12.93,5.3,5.48,5.48,0,0,1,14.09,7a5.17,5.17,0,0,1,.44,2.12,5,5,0,0,1-.44,2.12,5.54,5.54,0,0,1-2.88,2.91,5.77,5.77,0,0,1-2.13.42,5.39,5.39,0,0,1-1.94-.37,5.63,5.63,0,0,1-1.65-1,5.59,5.59,0,0,1-1.2-1.5A5.43,5.43,0,0,1,3.67,9.88Z\"></path>\n  </g>`;\n","import { Effects } from 'chessboard/plugins/effects/renderer/types';\n\nexport const threat = `<g id=\"threat\">\n    <path class=\"${Effects.ClassNames.Shadow}\" opacity=\"0.3\" d=\"M9,.5a9,9,0,1,0,9,9A9,9,0,0,0,9,.5Z\"></path>\n    <path class=\"${Effects.ClassNames.Background}\" fill=\"#ec6250\" d=\"M9,0a9,9,0,1,0,9,9A9,9,0,0,0,9,0Z\"></path>\n    <g class=\"${Effects.ClassNames.ComponentShadow}\" opacity=\"0.2\">\n      <path d=\"M15.12,9.65a6.14,6.14,0,0,1-3.78,5.65,6.19,6.19,0,0,1-3.53.35A6.15,6.15,0,0,1,3,10.84,6.11,6.11,0,0,1,9,3.53a6.15,6.15,0,0,1,6.12,6.12ZM5,9.65a4,4,0,0,0,.67,2.22,4.09,4.09,0,0,0,1.79,1.47,4,4,0,0,0,5.22-5.22A4,4,0,0,0,5,9.65Z\"></path>\n      <path d=\"M6.75,9.65a2.24,2.24,0,0,0,.38,1.25,2.27,2.27,0,0,0,1,.83,2.22,2.22,0,0,0,1.3.12,2.22,2.22,0,0,0,1.76-1.76,2.22,2.22,0,0,0-.13-1.3,2.25,2.25,0,0,0-4.32.86Z\"></path>\n    </g>\n    <g>\n      <path class=\"${Effects.ClassNames.Component}\" fill=\"#fff\" d=\"M15.12,9.15a6.14,6.14,0,0,1-3.78,5.65,6.19,6.19,0,0,1-3.53.35A6.15,6.15,0,0,1,3,10.34,6.11,6.11,0,0,1,9,3a6.15,6.15,0,0,1,6.12,6.12ZM5,9.15a4,4,0,0,0,.67,2.22,4.09,4.09,0,0,0,1.79,1.47,4,4,0,0,0,5.22-5.22A4,4,0,0,0,5,9.15Z\"></path>\n      <path class=\"${Effects.ClassNames.Component}\" fill=\"#fff\" d=\"M6.75,9.15a2.24,2.24,0,0,0,.38,1.25,2.27,2.27,0,0,0,1,.83,2.22,2.22,0,0,0,1.3.12A2.22,2.22,0,0,0,11.2,9.59a2.22,2.22,0,0,0-.13-1.3,2.25,2.25,0,0,0-4.32.86Z\"></path>\n    </g>\n  </g>`;\n","import { Effects } from 'chessboard/plugins/effects/renderer/types';\n\nexport const timeoutBlack = `<path class=\"${Effects.ClassNames.Shadow}\" opacity=\"0.3\" d=\"M9,.5a9,9,0,1,0,9,9A9,9,0,0,0,9,.5Z\"></path>\n<path class=\"${Effects.ClassNames.Background}\" fill=\"#312e2b\" d=\"M9,0a9,9,0,1,0,9,9A9,9,0,0,0,9,0Z\"></path>\n<path d=\"M8.57,7.26,8.11,10l.89.86L9.89,10,9.45,7.26ZM9,12.86A3.35,3.35,0,1,1,12.36,9.5,3.34,3.34,0,0,1,9,12.86Zm.7-8.29V4.12h.82V2.79h-3V4.12H8.3v.45a5,5,0,1,0,1.4,0Z\"></path>\n<path class=\"${Effects.ClassNames.ComponentShadow}\" fill=\"#fff\" d=\"M8.57,6.76,8.11,9.48l.89.86.89-.86L9.45,6.76ZM9,12.36A3.35,3.35,0,1,1,12.36,9,3.34,3.34,0,0,1,9,12.36Zm.7-8.29V3.62h.82V2.29h-3V3.62H8.3v.45a5,5,0,1,0,1.4,0Z\"></path>`;\n","import { Effects } from 'chessboard/plugins/effects/renderer/types';\n\nexport const timeoutWhite = `<path class=\"${Effects.ClassNames.Shadow}\" opacity=\"0.3\" d=\"M9,.5a9,9,0,1,0,9,9A9,9,0,0,0,9,.5Z\"></path>\n<circle class=\"${Effects.ClassNames.Background}\" fill=\"#f8f8f8\" cx=\"9\" cy=\"9\" r=\"8.5\"></circle>\n<path class=\"${Effects.ClassNames.ComponentShadow}\" fill=\"#e8e8e8\" d=\"M9,1A8,8,0,1,1,1,9,8,8,0,0,1,9,1M9,0a9,9,0,1,0,9,9A9,9,0,0,0,9,0Z\"></path>\n<path d=\"M8.57,6.76,8.11,9.48l.89.86.89-.86L9.45,6.76ZM9,12.36A3.35,3.35,0,1,1,12.36,9,3.34,3.34,0,0,1,9,12.36Zm.7-8.29V3.62h.82V2.29h-3V3.62H8.3v.45a5,5,0,1,0,1.4,0Z\"></path>`;\n","import { Effects } from 'chessboard/plugins/effects/renderer/types';\n\nexport const undo = `\n  <path\n    class=\"${Effects.ClassNames.Shadow}\"\n    d=\"M9,.5a9,9,0,1,0,9,9A9,9,0,0,0,9,.5Z\"\n    opacity=\".3\"></path>\n  <path\n    class=\"${Effects.ClassNames.Background}\"\n    d=\"M9,0a9,9,0,1,0,9,9A9,9,0,0,0,9,0Z\"\n    fill=\"#8a8886\"></path>\n  <path\n    d=\"M3.59,10.23a.25.25,0,0,1,.24-.31l1.08-.15a.49.49,0,0,1,.2.06.25.25,0,0,1,.11.2,3.58,3.58,0,0,0,.42,1.28,3.68,3.68,0,0,0,.84,1.06,3.76,3.76,0,0,0,1.16.69A3.9,3.9,0,0,0,9,13.31,3.58,3.58,0,0,0,10.47,13a3.94,3.94,0,0,0,1.22-.81A4.09,4.09,0,0,0,12.5,11a3.74,3.74,0,0,0,0-3,4.09,4.09,0,0,0-.81-1.2A3.94,3.94,0,0,0,10.47,6,3.65,3.65,0,0,0,9,5.69a3.61,3.61,0,0,0-1.23.21,3.23,3.23,0,0,0-1.09.6L7.77,7.59c.16.15.21.29.16.38s-.18.17-.4.17H4.37a.36.36,0,0,1-.2,0A.76.76,0,0,1,4,8a.52.52,0,0,1-.17-.38V4.45c0-.2.06-.33.17-.38s.25,0,.41.16L5.51,5.34a5.83,5.83,0,0,1,1.64-1A5.19,5.19,0,0,1,9,4.05a5.3,5.3,0,0,1,2.12.44,5,5,0,0,1,1.73,1.16A5.59,5.59,0,0,1,14,7.38a5.23,5.23,0,0,1,.44,2.12A5.16,5.16,0,0,1,14,11.62a5.59,5.59,0,0,1-1.16,1.73,5.32,5.32,0,0,1-1.73,1.18A5.64,5.64,0,0,1,9,15a5.23,5.23,0,0,1-1.94-.37A5.27,5.27,0,0,1,4.21,12.1,5.1,5.1,0,0,1,3.59,10.23Z\"\n    class=\"${Effects.ClassNames.ComponentShadow}\"\n    opacity=\".3\"></path>\n  <path\n    d=\"M3.59,9.73a.25.25,0,0,1,.24-.31l1.08-.15a.49.49,0,0,1,.2.06.25.25,0,0,1,.11.2,3.58,3.58,0,0,0,.42,1.28,3.68,3.68,0,0,0,.84,1.06,3.76,3.76,0,0,0,1.16.69A3.9,3.9,0,0,0,9,12.81a3.58,3.58,0,0,0,1.47-.31,3.94,3.94,0,0,0,1.22-.81,4.09,4.09,0,0,0,.81-1.2,3.74,3.74,0,0,0,0-3,4.09,4.09,0,0,0-.81-1.2,3.94,3.94,0,0,0-1.22-.81A3.65,3.65,0,0,0,9,5.19a3.61,3.61,0,0,0-1.23.21A3.23,3.23,0,0,0,6.68,6L7.77,7.09c.16.15.21.29.16.38s-.18.17-.4.17H4.37a.36.36,0,0,1-.2,0A.76.76,0,0,1,4,7.49a.52.52,0,0,1-.17-.38V4c0-.2.06-.33.17-.38s.25,0,.41.16L5.51,4.84a5.83,5.83,0,0,1,1.64-1A5.19,5.19,0,0,1,9,3.55,5.3,5.3,0,0,1,11.12,4a5,5,0,0,1,1.73,1.16A5.59,5.59,0,0,1,14,6.88,5.23,5.23,0,0,1,14.45,9,5.16,5.16,0,0,1,14,11.12a5.59,5.59,0,0,1-1.16,1.73A5.32,5.32,0,0,1,11.12,14,5.64,5.64,0,0,1,9,14.45a5.23,5.23,0,0,1-1.94-.37A5.27,5.27,0,0,1,4.21,11.6,5.1,5.1,0,0,1,3.59,9.73Z\"\n    class=\"${Effects.ClassNames.Component}\"\n    fill=\"#ffffff\"></path>\n`;\n","import { Effects } from 'chessboard/plugins/effects/renderer/types';\n\nexport const winner = `<g id=\"winner\">\n    <g>\n      <path class=\"${Effects.ClassNames.Shadow}\" opacity=\"0.3\" d=\"M9,.5a9,9,0,1,0,9,9A9,9,0,0,0,9,.5Z\"></path>\n      <path class=\"${Effects.ClassNames.Background}\" fill=\"#dbac16\" d=\"M9,0a9,9,0,1,0,9,9A9,9,0,0,0,9,0Z\"></path>\n    </g>\n    <g class=\"${Effects.ClassNames.ComponentShadow}\" opacity=\"0.2\">\n      <path class=\"cls-4\" d=\"M4.35,12.66,2.86,7.72a.37.37,0,0,1,0-.21A.35.35,0,0,1,3,7.34a.31.31,0,0,1,.2-.07.3.3,0,0,1,.21.05L6.27,9.15l.14,0h.14a.31.31,0,0,0,.13-.06A.48.48,0,0,0,6.77,9L8.69,5.54a.4.4,0,0,1,.13-.13.37.37,0,0,1,.18,0,.36.36,0,0,1,.31.18L11.22,9a.52.52,0,0,0,.1.11.31.31,0,0,0,.13.06h.14l.13,0,2.89-1.83a.3.3,0,0,1,.21-.05.31.31,0,0,1,.2.07.35.35,0,0,1,.12.17.37.37,0,0,1,0,.21l-1.49,4.94a.34.34,0,0,1-.13.18.31.31,0,0,1-.21.07H4.69a.31.31,0,0,1-.21-.07A.34.34,0,0,1,4.35,12.66Z\"></path>\n    </g>\n    <path class=\"${undefined}\" fill-rule=\"evenodd\" d=\"M4.35,12.06,2.86,7.12a.37.37,0,0,1,0-.21A.35.35,0,0,1,3,6.74a.31.31,0,0,1,.2-.07.3.3,0,0,1,.21,0L6.27,8.55l.14,0h.14a.31.31,0,0,0,.13-.06.48.48,0,0,0,.09-.11L8.69,4.94a.4.4,0,0,1,.13-.13.37.37,0,0,1,.18,0,.36.36,0,0,1,.31.18l1.91,3.48a.52.52,0,0,0,.1.11.31.31,0,0,0,.13.06h.14l.13,0,2.89-1.83a.3.3,0,0,1,.21,0,.31.31,0,0,1,.2.07.35.35,0,0,1,.12.17.38.38,0,0,1,0,.21l-1.49,4.94a.34.34,0,0,1-.13.18.31.31,0,0,1-.21.07H4.69a.31.31,0,0,1-.21-.07A.34.34,0,0,1,4.35,12.06Z\"></path>\n  </g>`;\n","import { Effects } from 'chessboard/plugins/effects/renderer/types';\n\nexport const winnerWhite = `<g id=\"winner-white\" fill=\"#fff\">\n    <g>\n      <path class=\"${Effects.ClassNames.Shadow}\" opacity=\"0.3\" d=\"M9,.5a9,9,0,1,0,9,9A9,9,0,0,0,9,.5Z\"></path>\n      <path class=\"${Effects.ClassNames.Background}\" fill=\"#dbac16\" d=\"M9,0a9,9,0,1,0,9,9A9,9,0,0,0,9,0Z\"></path>\n    </g>\n    <g class=\"${Effects.ClassNames.ComponentShadow}\" opacity=\"0.2\">\n      <path class=\"cls-4\" d=\"M4.35,12.66,2.86,7.72a.37.37,0,0,1,0-.21A.35.35,0,0,1,3,7.34a.31.31,0,0,1,.2-.07.3.3,0,0,1,.21.05L6.27,9.15l.14,0h.14a.31.31,0,0,0,.13-.06A.48.48,0,0,0,6.77,9L8.69,5.54a.4.4,0,0,1,.13-.13.37.37,0,0,1,.18,0,.36.36,0,0,1,.31.18L11.22,9a.52.52,0,0,0,.1.11.31.31,0,0,0,.13.06h.14l.13,0,2.89-1.83a.3.3,0,0,1,.21-.05.31.31,0,0,1,.2.07.35.35,0,0,1,.12.17.37.37,0,0,1,0,.21l-1.49,4.94a.34.34,0,0,1-.13.18.31.31,0,0,1-.21.07H4.69a.31.31,0,0,1-.21-.07A.34.34,0,0,1,4.35,12.66Z\"></path>\n    </g>\n    <path class=\"${undefined}\" fill-rule=\"evenodd\" d=\"M4.35,12.06,2.86,7.12a.37.37,0,0,1,0-.21A.35.35,0,0,1,3,6.74a.31.31,0,0,1,.2-.07.3.3,0,0,1,.21,0L6.27,8.55l.14,0h.14a.31.31,0,0,0,.13-.06.48.48,0,0,0,.09-.11L8.69,4.94a.4.4,0,0,1,.13-.13.37.37,0,0,1,.18,0,.36.36,0,0,1,.31.18l1.91,3.48a.52.52,0,0,0,.1.11.31.31,0,0,0,.13.06h.14l.13,0,2.89-1.83a.3.3,0,0,1,.21,0,.31.31,0,0,1,.2.07.35.35,0,0,1,.12.17.38.38,0,0,1,0,.21l-1.49,4.94a.34.34,0,0,1-.13.18.31.31,0,0,1-.21.07H4.69a.31.31,0,0,1-.21-.07A.34.34,0,0,1,4.35,12.06Z\"></path>\n  </g>`;\n","import { Effects } from 'chessboard/plugins/effects/renderer/types';\n\nexport const interesting = `<g id=\"interesting\">\n    <path class=\"${Effects.ClassNames.Shadow}\" d=\"m9 .5a9 9 0 1 0 9 9 9 9 0 0 0 -9-9z\" opacity=\"0.3\"></path>\n    <path  class=\"${Effects.ClassNames.Background}\" d=\"m0 9a9 9 0 1 0 9-9 9 9 0 0 0 -9 9z\" fill=\"#7979a1\"></path>\n    <g  class=\"${Effects.ClassNames.Component}\" opacity=\".2\">\n      <path d=\"m4.75 12.9a.28.28 0 0 1 0-.13.25.25 0 0 1 .08-.1.33.33 0 0 1 .23-.1h2 .12l.11.08a.36.36 0 0 1 .07.1.59.59 0 0 1 0 .13v1.9a.36.36 0 0 1 -.09.24.27.27 0 0 1 -.1.08h-.13-2-.12a.44.44 0 0 1 -.19-.19.28.28 0 0 1 0-.13zm-.06-8.8a.41.41 0 0 1 .08-.24.35.35 0 0 1 .23-.1h2.14.13l.11.08a.5.5 0 0 1 .09.24l-.15 6.77c0 .21-.15.31-.34.31h-1.78a.3.3 0 0 1 -.2-.06.3.3 0 0 1 -.1-.1.31.31 0 0 1 0-.13z\"/><path d=\"m12.39 14.82a.25.25 0 0 1 0 .12.28.28 0 0 1 -.08.11l-.1.07h-.12-1.91a.27.27 0 0 1 -.13 0 .39.39 0 0 1 -.05-.12.35.35 0 0 1 -.08-.22v-1.78a.32.32 0 0 1 .09-.23l.1-.07h.12 1.89a.33.33 0 0 1 .23.09.61.61 0 0 1 .07.1.27.27 0 0 1 0 .13zm2.2-7.17a2.49 2.49 0 0 1 -.36.73 4.51 4.51 0 0 1 -.48.6 6 6 0 0 1 -.52.49q-.39.34-.66.63a1 1 0 0 0 -.27.7v.2a.22.22 0 0 1 0 .12.35.35 0 0 1 -.17.17.2.2 0 0 1 -.11 0h-1.75-.12a.23.23 0 0 1 -.1-.07.26.26 0 0 1 -.07-.1.22.22 0 0 1 .02-.12v-.35a2.41 2.41 0 0 1 .12-.84 2.91 2.91 0 0 1 .33-.66 3.38 3.38 0 0 1 .45-.55l.49-.42a6.55 6.55 0 0 0 .61-.62 1 1 0 0 0 .26-.67.66.66 0 0 0 -.08-.34.64.64 0 0 0 -.18-.27 1.18 1.18 0 0 0 -.77-.28 1.66 1.66 0 0 0 -.49.07 3 3 0 0 0 -.41.18 2.29 2.29 0 0 0 -.29.18l-.1.09a.53.53 0 0 1 -.24.06c-.12 0-.19-.07-.21-.13l-1-1.21a.29.29 0 0 1 0-.4 1.36 1.36 0 0 1 .21-.2 3 3 0 0 1 .55-.38 5.87 5.87 0 0 1 .9-.37 3.75 3.75 0 0 1 1.2-.17 4.12 4.12 0 0 1 1.2.19 4 4 0 0 1 1.09.56 2.73 2.73 0 0 1 .77.92 2.7 2.7 0 0 1 .29 1.28 2.72 2.72 0 0 1 -.11.98z\"/></g><g fill=\"#fff\"><path d=\"m4.75 12.4a.28.28 0 0 1 0-.13.25.25 0 0 1 .08-.1.33.33 0 0 1 .23-.1h2 .12l.11.08a.36.36 0 0 1 .07.1.59.59 0 0 1 0 .13v1.9a.36.36 0 0 1 -.09.24.27.27 0 0 1 -.1.08h-.13-2-.12a.44.44 0 0 1 -.19-.19.28.28 0 0 1 0-.13zm-.06-8.8a.41.41 0 0 1 .08-.24.35.35 0 0 1 .23-.1h2.14.13l.11.08a.5.5 0 0 1 .09.24l-.15 6.77c0 .21-.15.31-.34.31h-1.78a.3.3 0 0 1 -.2-.06.3.3 0 0 1 -.07-.1.31.31 0 0 1 0-.13z\"/><path d=\"m12.39 14.32a.25.25 0 0 1 0 .12.28.28 0 0 1 -.08.11l-.1.07h-.12-1.91a.27.27 0 0 1 -.13 0 .39.39 0 0 1 -.1-.08.35.35 0 0 1 -.08-.22v-1.83a.32.32 0 0 1 .09-.23l.1-.07h.12 1.89a.33.33 0 0 1 .23.09.61.61 0 0 1 .07.1.27.27 0 0 1 0 .13zm2.2-7.17a2.49 2.49 0 0 1 -.36.73 4.51 4.51 0 0 1 -.48.6 6 6 0 0 1 -.52.49q-.39.34-.66.63a1 1 0 0 0 -.27.7v.22a.22.22 0 0 1 0 .12.35.35 0 0 1 -.17.17.2.2 0 0 1 -.11 0h-1.75-.12a.23.23 0 0 1 -.1-.07.26.26 0 0 1 -.07-.1.22.22 0 0 1 0-.12v-.35a2.41 2.41 0 0 1 .12-.84 2.91 2.91 0 0 1 .33-.66 3.38 3.38 0 0 1 .45-.55l.49-.42a6.55 6.55 0 0 0 .63-.64 1 1 0 0 0 .26-.67.66.66 0 0 0 -.08-.34.64.64 0 0 0 -.18-.27 1.18 1.18 0 0 0 -.73-.24 1.66 1.66 0 0 0 -.49.07 3 3 0 0 0 -.41.18 2.29 2.29 0 0 0 -.37.21l-.1.09a.53.53 0 0 1 -.24.06c-.12 0-.19-.07-.21-.13l-1-1.21a.29.29 0 0 1 0-.4 1.36 1.36 0 0 1 .21-.2 3 3 0 0 1 .55-.38 5.87 5.87 0 0 1 .9-.37 3.75 3.75 0 0 1 1.2-.17 4.12 4.12 0 0 1 1.2.19 4 4 0 0 1 1.16.52 2.73 2.73 0 0 1 .77.92 2.7 2.7 0 0 1 .29 1.28 2.72 2.72 0 0 1 -.14.95z\"/>\n    </g>\n  </g>`;\n","import { Effects } from 'chessboard/plugins/effects/renderer/types';\n\nexport const warning = `<g id=\"warning\">\n    <g>\n      <g class=\"${Effects.ClassNames.Shadow}\" opacity=\"0.3\">\n        <path d=\"M.32,14.3,6.94,2.83a2.37,2.37,0,0,1,4.11,0L17.68,14.3a2.38,2.38,0,0,1-2.06,3.56H2.38A2.38,2.38,0,0,1,.32,14.3Z\"></path>\n      </g>\n      <path class=\"${Effects.ClassNames.Background}\" fill=\"#ec6250\" d=\"M.32,13.8,6.94,2.33a2.37,2.37,0,0,1,4.11,0L17.68,13.8a2.38,2.38,0,0,1-2.06,3.56H2.38A2.38,2.38,0,0,1,.32,13.8Z\"></path>\n    </g>\n    <g>\n      <g class=\"${Effects.ClassNames.ComponentShadow}\" opacity=\"0.2\">\n        <path d=\"M10.21,15.19a.5.5,0,0,1,0,.12.26.26,0,0,1-.07.1.31.31,0,0,1-.22.09H8.1a.25.25,0,0,1-.12,0,.31.31,0,0,1-.09-.07.35.35,0,0,1-.08-.22V13.45a.29.29,0,0,1,.09-.21A.22.22,0,0,1,8,13.17l.11,0H9.9a.31.31,0,0,1,.22.09.27.27,0,0,1,.09.21ZM10.1,11.6a.22.22,0,0,1,0,.11.23.23,0,0,1-.07.1.27.27,0,0,1-.21.07H8.18a.29.29,0,0,1-.31-.28L7.73,5.41a.35.35,0,0,1,.08-.22.23.23,0,0,1,.1-.07A.25.25,0,0,1,8,5.1H10a.32.32,0,0,1,.23.09.35.35,0,0,1,.08.22Z\"></path>\n      </g>\n      <path class=\"${Effects.ClassNames.Component}\" fill=\"#fff\" d=\"M10.21,14.69a.5.5,0,0,1,0,.12.26.26,0,0,1-.07.1A.31.31,0,0,1,9.9,15H8.1A.25.25,0,0,1,8,15a.31.31,0,0,1-.09-.07.35.35,0,0,1-.08-.22V13a.29.29,0,0,1,.09-.21A.22.22,0,0,1,8,12.67l.11,0H9.9a.31.31,0,0,1,.22.09.27.27,0,0,1,.09.21ZM10.1,11.1a.22.22,0,0,1,0,.11.23.23,0,0,1-.07.1.27.27,0,0,1-.21.07H8.18a.29.29,0,0,1-.31-.28L7.73,4.91a.35.35,0,0,1,.08-.22.23.23,0,0,1,.1-.07A.25.25,0,0,1,8,4.6H10a.32.32,0,0,1,.23.09.35.35,0,0,1,.08.22Z\"></path>\n    </g>\n  </g>`;\n","import { Effects } from 'chessboard/plugins/effects/renderer/types';\n\nexport const equal = `<g id=\"equal\">\n    <path class=\"${Effects.ClassNames.Shadow}\" opacity=\"0.3\" d=\"M9,.5a9,9,0,1,0,9,9A9,9,0,0,0,9,.5Z\"/>\n    <path class=\"${Effects.ClassNames.Background}\" fill=\"#a88865\" d=\"M9,0a9,9,0,1,0,9,9A9,9,0,0,0,9,0Z\"/>\n    <g class=\"${Effects.ClassNames.ComponentShadow}\" opacity=\"0.4\">\n      <path d=\"M5.31,8.36l-.15,0A.57.57,0,0,1,5,8.25.57.57,0,0,1,5,8.12a.4.4,0,0,1,0-.15V6a.38.38,0,0,1,.39-.39h7.38a.38.38,0,0,1,.39.39V8a.4.4,0,0,1,0,.15.57.57,0,0,1-.08.13.57.57,0,0,1-.13.08l-.15,0Z\"/>\n      <path d=\"M5.31,13.36l-.15,0A.57.57,0,0,1,5,13.25.57.57,0,0,1,5,13.12a.4.4,0,0,1,0-.15V11a.38.38,0,0,1,.39-.39h7.38a.38.38,0,0,1,.39.39V13a.4.4,0,0,1,0,.15.33.33,0,0,1-.21.21l-.15,0Z\"/>\n    </g>\n    <g>\n      <path class=\"${Effects.ClassNames.Component}\" fill=\"#f1f2f2\" d=\"M5.31,7.86l-.15,0A.57.57,0,0,1,5,7.75.57.57,0,0,1,5,7.62a.4.4,0,0,1,0-.15V5.53a.38.38,0,0,1,.39-.39h7.38a.38.38,0,0,1,.39.39V7.47a.4.4,0,0,1,0,.15.57.57,0,0,1-.08.13.57.57,0,0,1-.13.08l-.15,0Z\"/>\n      <path class=\"${Effects.ClassNames.Component}\" fill=\"#f1f2f2\" d=\"M5.31,12.86l-.15,0A.57.57,0,0,1,5,12.75.57.57,0,0,1,5,12.62a.4.4,0,0,1,0-.15V10.53a.38.38,0,0,1,.39-.39h7.38a.38.38,0,0,1,.39.39v1.94a.4.4,0,0,1,0,.15.33.33,0,0,1-.21.21l-.15,0Z\"/>\n    </g>\n  </g>`;\n","import { alternative } from 'chessboard/plugins/effects/renderer/icons/alternative';\nimport { bestMove } from 'chessboard/plugins/effects/renderer/icons/best-move';\nimport { blunder } from 'chessboard/plugins/effects/renderer/icons/blunder';\nimport { book } from 'chessboard/plugins/effects/renderer/icons/book';\nimport { brilliant } from 'chessboard/plugins/effects/renderer/icons/brilliant';\nimport { checkmateBlack } from 'chessboard/plugins/effects/renderer/icons/checkmate-black';\nimport { checkmateWhite } from 'chessboard/plugins/effects/renderer/icons/checkmate-white';\nimport { correct } from 'chessboard/plugins/effects/renderer/icons/correct';\nimport { critical } from 'chessboard/plugins/effects/renderer/icons/critical';\nimport { defeatBlack } from 'chessboard/plugins/effects/renderer/icons/defeat-black';\nimport { defeatWhite } from 'chessboard/plugins/effects/renderer/icons/defeat-white';\nimport { drawBlack } from 'chessboard/plugins/effects/renderer/icons/draw-black';\nimport { drawWhite } from 'chessboard/plugins/effects/renderer/icons/draw-white';\nimport { excellent } from 'chessboard/plugins/effects/renderer/icons/excellent';\nimport { fastWin } from 'chessboard/plugins/effects/renderer/icons/fast-win';\nimport { freePiece } from 'chessboard/plugins/effects/renderer/icons/free-piece';\nimport { gamechanger } from 'chessboard/plugins/effects/renderer/icons/gamechanger';\nimport { greatFind } from 'chessboard/plugins/effects/renderer/icons/great-find';\nimport { forced } from 'chessboard/plugins/effects/renderer/icons/forced';\nimport { good } from 'chessboard/plugins/effects/renderer/icons/good';\nimport { inaccuracy } from 'chessboard/plugins/effects/renderer/icons/inaccuracy';\nimport { incorrect } from 'chessboard/plugins/effects/renderer/icons/incorrect';\nimport { mate } from 'chessboard/plugins/effects/renderer/icons/mate';\nimport { miss } from 'chessboard/plugins/effects/renderer/icons/miss';\nimport { missedWin } from 'chessboard/plugins/effects/renderer/icons/missed-win';\nimport { mistake } from 'chessboard/plugins/effects/renderer/icons/mistake';\nimport { resignBlack } from 'chessboard/plugins/effects/renderer/icons/resign-black';\nimport { resignWhite } from 'chessboard/plugins/effects/renderer/icons/resign-white';\nimport { sharp } from 'chessboard/plugins/effects/renderer/icons/sharp';\nimport { takeback } from 'chessboard/plugins/effects/renderer/icons/takeback';\nimport { threat } from 'chessboard/plugins/effects/renderer/icons/threat';\nimport { timeoutBlack } from 'chessboard/plugins/effects/renderer/icons/timeout-black';\nimport { timeoutWhite } from 'chessboard/plugins/effects/renderer/icons/timeout-white';\nimport { undo } from 'chessboard/plugins/effects/renderer/icons/undo';\nimport { winner } from 'chessboard/plugins/effects/renderer/icons/winner';\nimport { winnerWhite } from 'chessboard/plugins/effects/renderer/icons/winner-white';\nimport { interesting } from 'chessboard/plugins/effects/renderer/icons/interesting';\nimport { warning } from 'chessboard/plugins/effects/renderer/icons/warning';\nimport { equal } from 'chessboard/plugins/effects/renderer/icons/equal';\nimport { EffectTypes } from 'chessboard/plugins/effects/config/types';\n\nexport const EffectIcons = {\n  [EffectTypes.Alternative]: alternative,\n  [EffectTypes.BestMove]: bestMove,\n  [EffectTypes.Blunder]: blunder,\n  [EffectTypes.Book]: book,\n  [EffectTypes.Brilliant]: brilliant,\n  [EffectTypes.CheckmateBlack]: checkmateBlack,\n  [EffectTypes.CheckmateWhite]: checkmateWhite,\n  [EffectTypes.Correct]: correct,\n  [EffectTypes.Critical]: critical,\n  [EffectTypes.DefeatWhite]: defeatWhite,\n  [EffectTypes.DefeatBlack]: defeatBlack,\n  [EffectTypes.DrawBlack]: drawBlack,\n  [EffectTypes.DrawWhite]: drawWhite,\n  [EffectTypes.Excellent]: excellent,\n  [EffectTypes.FastWin]: fastWin,\n  [EffectTypes.Forced]: forced,\n  [EffectTypes.FreePiece]: freePiece,\n  [EffectTypes.Gamechanger]: gamechanger,\n  [EffectTypes.Good]: good,\n  [EffectTypes.GreatFind]: greatFind,\n  [EffectTypes.Inaccuracy]: inaccuracy,\n  [EffectTypes.Incorrect]: incorrect,\n  [EffectTypes.Mate]: mate,\n  [EffectTypes.Miss]: miss,\n  [EffectTypes.MissedWin]: missedWin,\n  [EffectTypes.Mistake]: mistake,\n  [EffectTypes.ResignBlack]: resignBlack,\n  [EffectTypes.ResignWhite]: resignWhite,\n  [EffectTypes.Sharp]: sharp,\n  [EffectTypes.Takeback]: takeback,\n  [EffectTypes.Threat]: threat,\n  [EffectTypes.TimeoutBlack]: timeoutBlack,\n  [EffectTypes.TimeoutWhite]: timeoutWhite,\n  [EffectTypes.Undo]: undo,\n  [EffectTypes.Winner]: winner,\n  [EffectTypes.WinnerWhite]: winnerWhite,\n  [EffectTypes.Interesting]: interesting,\n  [EffectTypes.Warning]: warning,\n  [EffectTypes.Equal]: equal,\n};\n","/**\n * Image element.\n */\nexport const Image = `\n<svg viewBox=\"0 0 40 40\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n  <image x=\"7.5\" y=\"7.5\" width=\"25\" height=\"25\" />\n</svg>\n`;\n","/**\n * Star SVG\n */\nexport const Star = `\n  <svg xmlns=\"http://www.w3.org/2000/svg\" style=\"fill: #ffa704\" viewBox=\"0 0 40 40\">\n    <path\n      d=\"M23.12,17.84H16.4a1.11,1.11,0,0,1-1.06-1.43L18.7,5.21a1.11,1.11,0,0,1,2.13,0l3.36,11.2A1.11,1.11,0,0,1,23.12,17.84Z\" />\n    <path\n      d=\"M27.21,34.11,4.35,16.88a1.11,1.11,0,0,1,.67-2l17.89,0a1.11,1.11,0,0,1,1.06.8l5,17.19A1.11,1.11,0,0,1,27.21,34.11Z\" />\n    <path\n      d=\"M35.17,16.88,12.31,34.11a1.11,1.11,0,0,1-1.74-1.2l5-17.19a1.11,1.11,0,0,1,1.06-.8l17.89,0A1.11,1.11,0,0,1,35.17,16.88Z\" />\n  </svg>\n`;\n","/**\n * Text box element.\n */\nexport const TextBox = `\n<svg viewBox=\"0 0 40 40\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n  <rect x=\"5\" y=\"12.5\" width=\"30\" height=\"15\" rx=\"3\" fill=\"inherit\" />\n  <text fill=\"#676767\" font-size=\"0.8rem\" x=\"20.5\" y=\"20.5\" dominant-baseline=\"middle\" text-anchor=\"middle\"></text>\n</svg>\n`;\n","import type { Board } from 'chessboard/model/board/types';\n\n/**\n * Get a SanSquare from a FileRank.\n */\nexport function getSanFromFileRank(fileRank: Board.FileRank): Board.SanSquare | null {\n  if (\n    !fileRank ||\n    !fileRank.file ||\n    !fileRank.rank ||\n    fileRank.file > 8 ||\n    fileRank.rank > 8 ||\n    fileRank.file < 1 ||\n    fileRank.rank < 1\n  ) {\n    return null;\n  }\n\n  return <Board.SanSquare>`${String.fromCharCode(96 + fileRank.file)}${fileRank.rank.toString()}`;\n}\n","/**\n * Set test data on any element.\n */\nexport function setTestData(\n  el: HTMLElement | SVGSVGElement | SVGPolygonElement,\n  keyVals: KeyVals,\n): boolean {\n  if (!el) {\n    return false;\n  }\n\n  Object.entries(keyVals).forEach(([key, val]) => {\n    const capitalizedKey = `${key.charAt(0).toUpperCase()}${key.slice(1)}`;\n\n    if (typeof val === 'undefined') {\n      delete el.dataset[`test${capitalizedKey}`];\n    } else {\n      el.dataset[`test${capitalizedKey}`] = <string>val;\n    }\n  });\n\n  return true;\n}\n\ninterface KeyVals {\n  [key: string]: string | number | undefined | boolean;\n}\n\nexport enum TestKeys {\n  Anchor = 'anchor',\n  Animated = 'animated',\n  Blinking = 'blinking',\n  Color = 'color',\n  Dragging = 'dragging',\n  Editable = 'editable',\n  Element = 'element',\n  EnPassant = 'enPassant',\n  File = 'file',\n  Figurine = 'figurine',\n  Flipped = 'flipped',\n  IconTextValue = 'iconTextValue',\n  Inside = 'inside',\n  Interval = 'interval',\n  LeadingFigurine = 'leadingFigurine',\n  Opacity = 'opacity',\n  Outside = 'outside',\n  Position = 'position',\n  Rank = 'rank',\n  Selected = 'selected',\n  ShortString = 'shortstring',\n  Square = 'square',\n  Star = 'star',\n  TextColor = 'textColor',\n  TextValue = 'textValue',\n  Times = 'times',\n  TrailingFigurine = 'trailingFigurine',\n  Type = 'type',\n  WholeMoveNumber = 'wholeMoveNumber',\n  X = 'x',\n  Y = 'y',\n}\n\nexport enum TestElements {\n  Arrow = 'arrow',\n  BlinkingHighlight = 'blinking-highlight',\n  Board = 'board',\n  CommentLink = 'comment-link',\n  Coordinates = 'coordinates',\n  CustomItem = 'custom-item',\n  Effect = 'effect',\n  FadeInOverlay = 'fade-in-overlay',\n  GameResult = 'game-result',\n  HalfMove = 'half-move',\n  Highlight = 'highlight',\n  Hint = 'hint',\n  HoverSquare = 'hover-square',\n  Move = 'move',\n  Piece = 'piece',\n  PotentialCapture = 'capture-hint',\n  PromotionCloseButton = 'promotion-close-button',\n  PromotionPiece = 'promotion-piece',\n  PromotionWindow = 'promotion-window',\n  Square = 'square',\n  SiblingBoard = 'sibling-board',\n}\n","/* eslint no-cond-assign: off */\n/* eslint no-param-reassign: off */\n\n/**\n * Easing functions based on Robert Penner's equations.\n * (copied from tween.js: https://github.com/tweenjs/tween.js)\n *\n * http://robertpenner.com/easing\n *\n * t: normalized time\n */\n\n/**\n * Cubic easing in.\n */\nexport function easeInCubic(t: number): number {\n  return t * t * t;\n}\n\n/**\n * Cubic easing out.\n */\nexport function easeOutCubic(t: number): number {\n  return --t * t * t + 1;\n}\n\n/**\n * Cubic easing in/out.\n */\nexport function easeInOutCubic(t: number): number {\n  if ((t *= 2) < 1) {\n    return 0.5 * t * t * t;\n  }\n\n  return 0.5 * ((t -= 2) * t * t + 2);\n}\n","import { getXYFromEvent } from 'src/utils/get-xy-from-event';\n\n/**\n * Get XY coordinates from event, relative to top left of board.\n */\nexport function getBoardXYFromEvent(event: any, boardEl: HTMLElement): object {\n  const boardRect = boardEl.getBoundingClientRect();\n  const { x, y } = getXYFromEvent(event);\n\n  return {\n    boardRect,\n    x: x - boardRect.left,\n    y: y - boardRect.top,\n  };\n}\n","import type { Animator } from 'chessboard/renderers/model/animator/types';\nimport type { KeyedEffect } from 'chessboard/plugins/effects/config/types';\nimport type { Board } from 'chessboard/model/board/types';\nimport type { Game } from 'chessboard/model/game/types';\nimport type { TestElements } from 'src/utils/set-test-data';\nimport type { LegacyThemes } from 'chessboard/config/legacy-themes';\nimport type { TextOptions, Types, VisualOrder } from 'chessboard/plugins/custom-items/config/types';\nimport type { EventEmitterUtil } from '@chesscom/web-ui';\nimport type { Effects } from 'chessboard/model/effects/types';\nimport type { Core } from 'chessboard/core/config/types';\nimport type {\n  StartParams,\n  ThemeTakeover as Takeover,\n} from 'chessboard/plugins/theme-takeover/config/types';\n\nexport namespace WebGLRenderer {\n  export const PixelRatio = window.devicePixelRatio || 1;\n\n  export interface Params<T extends State> {\n    className: string;\n    options: Board.Options;\n    boardThemes: LegacyThemes.BoardStyles;\n    emitter: EventEmitterUtil.EventEmitter;\n    pieceThemes: LegacyThemes.PieceStyles;\n    containerEl: HTMLElement;\n    methods: Methods<T>;\n    name: string;\n    animationMethods: AnimationMethods<T>;\n    testElement?: TestElements;\n  }\n\n  export interface Instance<T extends State> {\n    state: T;\n    methods: Methods<T>;\n    animationMethods: AnimationMethods<T>;\n    className: string;\n    eventListeners: EventListeners;\n    frameRequestId: number;\n    lastPieceId: number;\n  }\n\n  export interface State {\n    animator: Animator.API;\n    options: Board.Options;\n    boardId: string;\n    destroyed: boolean;\n\n    flipCoordinates: boolean;\n\n    assetsLoaded: boolean;\n    squareSize: number;\n\n    boardStyle: string;\n    boardThemes: LegacyThemes.BoardStyles;\n\n    pieceStyle: string;\n    pieceThemes: LegacyThemes.PieceStyles;\n\n    containerEl: HTMLElement;\n    viewEl: HTMLCanvasElement;\n    viewSize: { width: number; height: number };\n\n    isBoardFlipped: boolean;\n    isBoardEnabled: boolean;\n    isCheckmate: boolean;\n    isPromotionWindowVisible: boolean;\n\n    pieces: Piece.Collection<any>;\n    selectedPiece: Piece.Model<any> | null;\n\n    animatedOverPiece: Piece.Model<any> | null;\n    animatedOverHint: Hint.Model<any> | null;\n\n    fadeSetupAnimation: Animator.Animation.Model | null;\n    pieceAnimations: Piece.Animation.Collection;\n    promotionWindowAnimation: Animator.Animation.Model | null;\n\n    arrows: Arrow.Collection<any>;\n    blinkingHighlights: Highlight.Collection<any>;\n    customItems: CustomItem.Collection<any>;\n    effects: Effect.Collection<any>;\n    highlights: Highlight.Collection<any>;\n    hints: Hint.Collection<any>;\n    hoverSquare: any;\n\n    attackedKing: Piece.Model<any> | null;\n\n    pointer: PointerState;\n\n    takeover: Array<ThemeTakeover.Model<any>>;\n  }\n\n  export interface EventListeners {\n    doubleClick?: (event: Event) => void;\n    pointerDown?: (event: Event) => void;\n    pointerMove?: (event: Event) => void;\n    pointerUp?: (event: Event) => void;\n    wheel?: (event: WheelEvent) => void;\n  }\n\n  export namespace Piece {\n    export type Info = Game.Piece.Model;\n\n    export interface Model<T> {\n      id: number;\n      info: Info;\n      obj: T;\n    }\n\n    export interface Collection<T> {\n      [key: string]: Model<T>;\n    }\n\n    export namespace Animation {\n      export const enum Type {\n        Capture = 'Capture',\n        Drag = 'Drag',\n        Drop = 'Drop',\n        KingAttack = 'KingAttack',\n        Move = 'Move',\n        Restore = 'Restore',\n        Out = 'Out',\n        Over = 'Over',\n      }\n\n      export interface Collection {\n        [key: string]: {\n          animation: Animator.Animation.Model;\n          type: Type;\n        };\n      }\n    }\n  }\n\n  export namespace Arrow {\n    export interface Info {\n      color: string;\n      opacity: number;\n      from: Board.FileRank;\n      to: Board.FileRank;\n      isKnight: boolean;\n    }\n\n    export interface Model<T> {\n      info: Info;\n      obj: T;\n    }\n\n    export interface Collection<T> {\n      [key: string]: Model<T>;\n    }\n  }\n\n  export namespace CustomItem {\n    export interface Info {\n      color?: Game.Node.Marking.Color;\n      image?: Game.Node.Marking.ImageOptions;\n      frame?: Game.Node.Marking.CustomItem.Frame;\n      opacity?: number;\n      position: BoardPosition;\n      square: Board.SanSquare;\n      text?: TextOptions;\n      type: Types;\n      visualOrder?: VisualOrder.Model;\n    }\n\n    export interface Model<T> {\n      info: Info;\n      obj: T;\n    }\n\n    export interface Collection<T> {\n      [key: string]: Model<T>;\n    }\n  }\n\n  export namespace Effect {\n    export interface Info {\n      position: BoardPosition;\n      square: Board.SanSquare;\n      type: Game.Node.Marking.Effect.Types;\n      effect: KeyedEffect;\n    }\n\n    export interface Model<T> {\n      animated: boolean;\n      info: Info;\n      obj: T;\n    }\n\n    export interface Collection<T> {\n      [key: string]: Model<T>;\n    }\n  }\n\n  export namespace Highlight {\n    export interface Info {\n      color: string;\n      opacity: number;\n      position: BoardPosition;\n      square: Board.SanSquare;\n      turn?: Game.ColorsAsNumbers;\n      type?: string;\n    }\n\n    export interface Model<T> {\n      info: Info;\n      obj: T;\n    }\n\n    export interface Collection<T> {\n      [key: string]: Model<T>;\n    }\n  }\n\n  export namespace Hint {\n    export interface Info {\n      color: string;\n      opacity: number;\n      position: BoardPosition;\n      square: Board.SanSquare;\n      turn: Game.ColorsAsNumbers;\n      type: Type;\n    }\n\n    export interface Model<T> {\n      info: Info;\n      obj: T;\n      activeAnimation?: ItemAnimation.Model;\n    }\n\n    export interface Collection<T> {\n      [key: string]: Model<T>;\n    }\n\n    export const enum Type {\n      Move = 'move',\n      Capture = 'capture',\n    }\n  }\n\n  export namespace ThemeTakeover {\n    export interface Model<T> {\n      info: StartParams;\n      obj: T;\n    }\n  }\n\n  export interface Size {\n    width: number;\n    height: number;\n  }\n\n  export interface BoardPosition {\n    x: number;\n    y: number;\n  }\n\n  export interface PointerState {\n    event: Event;\n    insideBoard: boolean;\n\n    down: boolean;\n    downInsideBoard: boolean;\n    rightDown: boolean;\n    secondaryDown: boolean;\n\n    viewPosition: Board.Coords;\n    boardPosition: BoardPosition;\n\n    previousViewPosition: Board.Coords;\n    previousBoardPosition: BoardPosition;\n  }\n\n  export namespace ItemAnimation {\n    export interface Model {\n      animation: Animator.Animation.Model;\n      type: Type;\n    }\n\n    export const enum Type {\n      Show = 'show',\n      Hide = 'hide',\n      Out = 'out',\n      Over = 'over',\n    }\n  }\n\n  export interface Methods<T extends State> {\n    createState: (baseState: State) => T;\n    flipBoard: (state: T, shouldFlip: boolean) => void;\n    setBoardEnabled?: (state: T, enabled: boolean) => void;\n    init: (state: T) => void;\n    destroy: (state: T) => void;\n    loadAssets: (state: T) => Promise<void>;\n    render: (state: T, time: number) => void;\n    onWebGLContextLost: (state: T) => void;\n\n    addAnalysisOverlay: (state: T) => void;\n    removeAnalysisOverlay: (state: T) => void;\n\n    normalizePointer: (state: T, coords: Board.Coords) => Board.Coords;\n    getBoardPosition: (state: T, coords: Board.Coords) => BoardPosition;\n    getPieceStyles?: () => LegacyThemes.PieceStyles;\n    getViewPosition: (state: T, position: BoardPosition) => Board.Coords;\n    getViewAspectRatio: () => number;\n    fileRankToPosition: (state: T, fileRank: Board.FileRank) => BoardPosition;\n    positionToFileRank: (state: T, position: BoardPosition) => Board.FileRank;\n    positionToNearestSquare: (state: T, position: BoardPosition) => BoardPosition;\n\n    createPieceObj: (state: T, pieceInfo: Piece.Info) => any;\n    addPiece: (state: T, piece: Piece.Model<any>) => void;\n    removePiece: (state: T, piece: Piece.Model<any>) => void;\n    setPiecePosition: (piece: Piece.Model<any>, position: BoardPosition) => void;\n    fadeInAllPieces: (state: T, duration: number) => Animator.Animation.Model;\n\n    updatePiecesStyle: (state: T, fallback: boolean) => Promise<void>;\n    updatePieceVisuals: (state: T, piece: Piece.Model<any>) => void;\n    updateViewSize: (state: T, size: Size) => void;\n\n    updateBoardStyle: (state: T) => Promise<void>;\n\n    updateBoardCoordinates: (\n      state: T,\n      coordinates: {\n        flipped: boolean;\n        position: Board.CoordinatesPositions;\n        colorUpdate?: boolean;\n      },\n    ) => void;\n\n    createArrowObj: (state: T, arrowInfo: Arrow.Info) => any;\n    addArrow: (state: T, arrow: Arrow.Model<any>) => void;\n    removeArrow: (state: T, arrow: Arrow.Model<any>) => void;\n\n    createCustomItemObj: (state: T, itemInfo: CustomItem.Info) => any;\n    addCustomItem: (state: T, item: CustomItem.Model<any>) => void;\n    removeCustomItem: (state: T, item: CustomItem.Model<any>) => void;\n\n    createEffectObj: (state: T, effectInfo: Effect.Info) => any;\n    createEffectObjAnimated: (\n      state: T,\n      effectInfo: Effect.Info,\n      translations: Effects.Translations,\n      context: Core.Context,\n    ) => any;\n    addEffect: (state: T, effect: Effect.Model<any>) => void;\n    removeEffect: (state: T, effect: Effect.Model<any>) => void;\n    fadeOutEffect: (state: T, square: Board.SanSquare) => Promise<void>;\n\n    createHighlightObj: (state: T, highlightInfo: Highlight.Info) => any;\n    addHighlight: (state: T, highlight: Highlight.Model<any>) => void;\n    removeHighlight: (state: T, highlight: Highlight.Model<any>) => void;\n\n    createCaptureHintObj: (state: T, hintInfo: Hint.Info) => any;\n    createMoveHintObj: (state: T, hintInfo: Hint.Info) => any;\n    addHint: (state: T, hint: Hint.Model<any>) => void;\n    removeHint: (state: T, hint: Hint.Model<any>) => void;\n\n    createHoverSquareObj: (state: T) => any;\n    showHoverSquare: (state: T, position: BoardPosition) => void;\n    hideHoverSquare: (state: T) => void;\n\n    openPromotionWindow: (\n      state: T,\n      promotionMove: Game.Move.Model,\n    ) => Promise<Game.Piece.Types | undefined>;\n    closePromotionWindow: (state: T) => void;\n\n    onPieceDrag?: (state: T, piece: Piece.Model<any>) => void;\n    onPieceDrop?: (state: T, piece: Piece.Model<any>) => void;\n    onPieceMoved?: (state: T, params: { piece: Piece.Model<any>; square: Board.SanSquare }) => void;\n    onPiecesLoaded?: (state: T) => void;\n    onPiecesVisualsChanged?: (state: T) => void;\n\n    onMouseDoubleClick?: (state: T) => void;\n    onMouseWheel?: (state: T, wheelDelta: number) => boolean;\n    onPointerDown?: (state: T) => void;\n    onPointerMove?: (state: T) => void;\n    onPointerUp?: (state: T) => void;\n\n    createTakeover: (state: T, takeoverInfo: StartParams) => any;\n    addTakeover: (state: T, takeover: any) => void;\n    endTakeover: (state: T) => void;\n    removeTakeover: (state: T) => void;\n    removeTakeoverByType: (state: T, takeoverType: Takeover.DirectionOrPercent) => void;\n  }\n\n  export interface AnimationMethods<T extends State> {\n    init?: (state: T) => void;\n    loadAssets?: (state: T) => Promise<void>;\n\n    createHighlightObj?: (state: T, highlightInfo: Highlight.Info) => any;\n\n    createCaptureHintObj?: (state: T, hintInfo: Hint.Info) => any;\n    createMoveHintObj?: (state: T, hintInfo: Hint.Info) => any;\n\n    createHoverSquareObj?: (state: T) => any;\n    showHoverSquare?: (state: T, position: BoardPosition) => void;\n    hideHoverSquare?: (state: T) => void;\n\n    movePiece: (\n      state: T,\n      params: {\n        piece: Piece.Model<any>;\n        from: BoardPosition;\n        to: BoardPosition;\n        castling: boolean;\n        capturing: boolean;\n      },\n    ) => Animator.Animation.Model;\n\n    blinkHighlight: (\n      state: T,\n      params: { highlight: Highlight.Model<any>; interval: number; times: number },\n    ) => Animator.Animation.Model;\n\n    attackKing?: (\n      state: T,\n      params: { piece: Piece.Model<any>; illegalMove?: boolean },\n    ) => Animator.Animation.Model;\n\n    dragPiece?: (state: T, piece: Piece.Model<any>) => Animator.Animation.Model;\n\n    dropPiece?: (\n      state: T,\n      params: { piece: Piece.Model<any>; to: BoardPosition; capturing?: boolean },\n    ) => Animator.Animation.Model;\n\n    capturePiece?: (\n      state: T,\n      params: { piece: Piece.Model<any>; fromDrop?: boolean },\n    ) => Animator.Animation.Model;\n\n    restorePiece?: (state: T, piece: Piece.Model<any>) => Animator.Animation.Model;\n\n    pieceOver?: (\n      state: T,\n      params: { piece: Piece.Model<any>; pointer: PointerState },\n    ) => Animator.Animation.Model;\n\n    pieceOut?: (state: T, piece: Piece.Model<any>) => Animator.Animation.Model;\n\n    hideCustomItem?: (state: T, item: CustomItem.Model<any>) => Animator.Animation.Model;\n\n    showHighlight?: (state: T, highlight: Highlight.Model<any>) => Animator.Animation.Model;\n\n    hideHighlight?: (state: T, highlight: Highlight.Model<any>) => Animator.Animation.Model;\n\n    showHint?: (state: T, hint: Hint.Model<any>) => Animator.Animation.Model;\n    hideHint?: (state: T, hint: Hint.Model<any>) => Animator.Animation.Model;\n    hintOver?: (state: T, hint: Hint.Model<any>) => Animator.Animation.Model;\n    hintOut?: (state: T, hint: Hint.Model<any>) => Animator.Animation.Model;\n\n    showPromotionWindow?: (state: T) => Animator.Animation.Model;\n    hidePromotionWindow?: (state: T) => Animator.Animation.Model;\n  }\n}\n","import type { Board } from 'chessboard/model/board/types';\nimport { calculateArrowLength } from 'chessboard/model/arrows/calculate-arrow-length';\n\n/**\n * Get the angle to rotate the arrow\n */\nexport function calculateArrowRotation({\n  from,\n  to,\n}: {\n  from: Board.Coords;\n  to: Board.Coords;\n}): number {\n  const length = calculateArrowLength({ from, to });\n\n  // arrows point straight down before they get rotated. So we need to calculate\n  // the coordinates of the original `to` point from before the arrow is rotated.\n  const originalTo = {\n    x: from.x,\n    y: from.y + length,\n  };\n\n  // arrow before rotation\n  const vector1 = {\n    x: from.x - originalTo.x,\n    y: from.y - originalTo.y,\n  };\n\n  // arrow after rotation\n  const vector2 = {\n    x: from.x - to.x,\n    y: from.y - to.y,\n  };\n\n  // calculate the angle between the two vectors\n  const cosine = (vector1.x * vector2.x + vector1.y * vector2.y) / length ** 2;\n  const clampedCosine = Math.max(-1, Math.min(1, cosine));\n  const radians = Math.acos(clampedCosine);\n\n  // convert to degrees and round to 100th\n  const degrees = Math.floor(radians * (180 / Math.PI) * 100) / 100;\n\n  return from.x < to.x ? 360 - degrees : degrees;\n}\n","import type { Board } from 'chessboard/model/board/types';\nimport { Game } from 'chessboard/model/game/types';\n\n/**\n * Get the color for an arrow. First choice is one of the color options, like alt\n * or shift. Next is custom color. Last is the default color option.\n */\nexport function getArrowColor(\n  color: Game.Node.Marking.Arrow.Model['color'],\n  colorOptions: Board.ArrowColors,\n): string {\n  return (\n    (color && colorOptions[Game.Node.Marking.JCEColorsMap[color]]) ?? color ?? colorOptions.default\n  );\n}\n","import type { Board } from 'chessboard/model/board/types';\nimport type { Game } from 'chessboard/model/game/types';\nimport { getOppositeColor } from 'chessboard/model/game/get-opposite-color';\nimport { nodeTargetSquare } from 'api/move/model/node-target-square';\n\n/**\n * Get the details required for undoing a move.\n */\nexport function getUndoMoveDetails(move: Game.Move.ExtendedNode): {\n  movedPieces: Game.Move.Undo[];\n  promotedSquare?: Board.SanSquare;\n  restoredPiece?: Game.Piece.Model;\n} {\n  const movedPieces: Game.Move.Undo[] = [\n    {\n      animate: move.animate,\n      from: nodeTargetSquare(move),\n      to: <Board.SanSquare>move.from,\n    },\n  ];\n\n  if (move.rookMove) {\n    movedPieces.push({\n      ...move.rookMove,\n      from: move.rookMove.to,\n      to: move.rookMove.from,\n    });\n  }\n\n  const restoredPiece =\n    move.captured && move.capturedStr\n      ? {\n          color: getOppositeColor(move.color),\n          promoted: move.capturedPromotedPawn,\n          square: move.EPCapturedSquare || move.to,\n          type: <Game.Piece.ShortStrings.Black>move.capturedStr.toLowerCase(),\n        }\n      : undefined;\n\n  return {\n    movedPieces,\n    promotedSquare: move.promotion ? <Board.SanSquare>move.from : undefined,\n    restoredPiece: <Game.Piece.Model>restoredPiece,\n  };\n}\n","import type { Board } from 'chessboard/model/board/types';\nimport type { WebGLRenderer } from 'chessboard/renderers/webgl/base';\nimport { getFileRankFromSan } from 'chessboard/model/board/get-file-rank-from-san';\n\n/**\n * Converts the SAN square to view coordinates.\n */\nexport function getCoordsFromSquare<T extends WebGLRenderer.State>(\n  instance: WebGLRenderer.Instance<T>,\n  square: Board.SanSquare,\n): Board.Coords {\n  const { state, methods } = instance;\n\n  const fileRank = getFileRankFromSan(square);\n\n  const boardPosition = methods.fileRankToPosition(state, fileRank);\n\n  return methods.getViewPosition(state, boardPosition);\n}\n","import type { Board } from 'chessboard/model/board/types';\nimport type { WebGLRenderer } from 'chessboard/renderers/webgl/base';\nimport { getSanFromFileRank } from 'chessboard/model/board/get-san-from-file-rank';\n\n/**\n * Converts the board position to a SAN square.\n */\nexport function positionToSquare<T extends WebGLRenderer.State>(\n  instance: WebGLRenderer.Instance<T>,\n  position: WebGLRenderer.BoardPosition,\n): Board.SanSquare | null {\n  const { state, methods } = instance;\n  const fileRank = methods.positionToFileRank(state, position);\n\n  return getSanFromFileRank(fileRank);\n}\n","import type { WebGLRenderer } from 'chessboard/renderers/webgl/base';\n\n/**\n * Converts the position to square percentage (from 0 to 100).\n */\nexport function positionToSquarePercentage(\n  position: WebGLRenderer.BoardPosition,\n  squareSize: number,\n): WebGLRenderer.BoardPosition {\n  const positionX = Math.floor(position.x);\n  const positionY = Math.floor(position.y);\n\n  const squarePosition = {\n    left: Math.floor(positionX / squareSize) * squareSize,\n    top: Math.floor(positionY / squareSize) * squareSize,\n  };\n\n  const positionInsideSquare = {\n    left: positionX - squarePosition.left,\n    top: positionY - squarePosition.top,\n  };\n\n  return {\n    x: Math.floor((positionInsideSquare.left / squareSize) * 100),\n    y: Math.floor((positionInsideSquare.top / squareSize) * 100),\n  };\n}\n","import type { Board } from 'chessboard/model/board/types';\nimport type { WebGLRenderer } from 'chessboard/renderers/webgl/base';\nimport {\n  positionToSquare,\n  positionToSquarePercentage,\n} from 'chessboard/renderers/webgl/base/utils';\nimport { getBoardXYFromEvent } from 'src/utils/get-board-xy-from-event';\n\n/**\n * Get all the coordinates and squares needed to interact with the board.\n */\nexport function getPointerPosition<T extends WebGLRenderer.State>(\n  instance: WebGLRenderer.Instance<T>,\n  event: MouseEvent,\n): Board.PointerPosition {\n  const { state, methods } = instance;\n  const { containerEl } = state;\n\n  const coords = <Board.Coords>getBoardXYFromEvent(event, containerEl);\n\n  const viewPosition = methods.normalizePointer(state, coords);\n  const boardPosition = methods.getBoardPosition(state, viewPosition);\n  const positionInsideBoard = methods.positionToNearestSquare(state, boardPosition);\n\n  return {\n    coords: viewPosition,\n    coordsInsideBoard: methods.getViewPosition(state, positionInsideBoard),\n    coordsInsideSquare: positionToSquarePercentage(boardPosition, state.squareSize),\n    square: positionToSquare(instance, boardPosition),\n    squareInsideBoard: positionToSquare(instance, positionInsideBoard),\n  };\n}\n","import type { WebGLRenderer } from 'chessboard/renderers/webgl/base';\n\n/**\n * Get the view aspect ratio.\n */\nexport function getViewAspectRatio<T extends WebGLRenderer.State>(\n  instance: WebGLRenderer.Instance<T>,\n): number {\n  return instance.methods.getViewAspectRatio();\n}\n","import type { WebGLRenderer } from 'chessboard/renderers/webgl/base';\n\n/**\n * Retrieve the canvas element used to render WebGL content.\n */\nexport function getWebGLCanvas<T extends WebGLRenderer.State>(\n  instance: WebGLRenderer.Instance<T>,\n): HTMLCanvasElement {\n  return instance.state.viewEl;\n}\n","import type { WebGLRenderer } from 'chessboard/renderers/webgl/base';\n\n/**\n * Handle the WebGL context lost.\n */\nexport function handleWebGLContextLost<T extends WebGLRenderer.State>(\n  instance: WebGLRenderer.Instance<T>,\n): void {\n  const { state, methods } = instance;\n  const { viewEl } = state;\n\n  const newViewEl = <HTMLCanvasElement>viewEl.cloneNode();\n\n  viewEl.replaceWith(newViewEl);\n\n  state.viewEl = newViewEl;\n\n  methods.onWebGLContextLost(state);\n}\n","import type { WebGLRenderer } from 'chessboard/renderers/webgl/base';\nimport type { Game } from 'model/game/types';\n\n/**\n * Get a collection of concise piece objects.\n */\nexport function getPieces<T extends WebGLRenderer.State>(\n  instance: WebGLRenderer.Instance<T>,\n): Game.Piece.ConciseObject {\n  const { state } = instance;\n\n  return Object.keys(state.pieces).reduce(\n    (acc, key) => {\n      acc[key] = {\n        color: state.pieces[key].info.color,\n        type: state.pieces[key].info.type as Game.Piece.Types,\n      };\n\n      return acc;\n    },\n    <Game.Piece.ConciseObject>{},\n  );\n}\n","import type { WebGLRenderer } from 'chessboard/renderers/webgl/base';\n\n/**\n * Test if the position is inside the board.\n */\nexport function isPositionInsideBoard<T extends WebGLRenderer.State>(\n  state: T,\n  position: WebGLRenderer.BoardPosition,\n): boolean {\n  const { squareSize } = state;\n\n  if (\n    position.x >= 0 &&\n    position.x <= squareSize * 8 &&\n    position.y >= 0 &&\n    position.y <= squareSize * 8\n  ) {\n    return true;\n  }\n\n  return false;\n}\n","import type { Board } from 'chessboard/model/board/types';\nimport type { WebGLRenderer } from 'chessboard/renderers/webgl/base';\nimport { getBoardXYFromEvent } from 'utils/get-board-xy-from-event';\nimport { isPositionInsideBoard } from 'chessboard/renderers/webgl/base/utils/is-position-inside-board';\n\n/**\n * On mouse double click.\n */\nexport function onMouseDoubleClick<T extends WebGLRenderer.State>(\n  instance: WebGLRenderer.Instance<T>,\n  event: Event,\n): void {\n  const { state, methods } = instance;\n  const { containerEl, pointer } = state;\n\n  const coords = <Board.Coords>getBoardXYFromEvent(event, containerEl);\n\n  pointer.event = event;\n\n  pointer.viewPosition = methods.normalizePointer(state, coords);\n  pointer.boardPosition = methods.getBoardPosition(state, pointer.viewPosition);\n\n  pointer.insideBoard = isPositionInsideBoard(state, pointer.boardPosition);\n\n  methods.onMouseDoubleClick?.(state);\n\n  pointer.previousViewPosition = pointer.viewPosition;\n  pointer.previousBoardPosition = pointer.boardPosition;\n}\n","import type { Board } from 'chessboard/model/board/types';\nimport type { WebGLRenderer } from 'chessboard/renderers/webgl/base';\nimport { getBoardXYFromEvent } from 'utils/get-board-xy-from-event';\nimport { isPositionInsideBoard } from 'chessboard/renderers/webgl/base/utils/is-position-inside-board';\n\n/**\n * On mouse wheel.\n */\nexport function onMouseWheel<T extends WebGLRenderer.State>(\n  instance: WebGLRenderer.Instance<T>,\n  event: WheelEvent,\n): void {\n  const { state, methods } = instance;\n  const { containerEl, pointer } = state;\n\n  const coords = <Board.Coords>getBoardXYFromEvent(event, containerEl);\n\n  pointer.event = event;\n\n  pointer.viewPosition = methods.normalizePointer(state, coords);\n  pointer.boardPosition = methods.getBoardPosition(state, pointer.viewPosition);\n\n  pointer.insideBoard = isPositionInsideBoard(state, pointer.boardPosition);\n\n  const eventHandled = methods.onMouseWheel?.(state, event.deltaY);\n\n  pointer.previousViewPosition = pointer.viewPosition;\n  pointer.previousBoardPosition = pointer.boardPosition;\n\n  if (eventHandled) {\n    event.preventDefault();\n    event.stopImmediatePropagation();\n  }\n}\n","import type { WebGLRenderer } from 'chessboard/renderers/webgl/base';\n\n/**\n * Stop the animation of a piece.\n */\nexport function endPieceAnimation<T extends WebGLRenderer.State>(\n  state: T,\n  piece: WebGLRenderer.Piece.Model<any>,\n): void {\n  const { animator, pieceAnimations } = state;\n  const animData = pieceAnimations[piece.id];\n\n  if (!animData || animData.animation.ended) {\n    return;\n  }\n\n  animator.end(animData.animation);\n}\n","import { isTouchEvent } from 'chessboard/model/dom/is-touch-event';\n\n/**\n * Determine whether or not a DOM event is caused by a secondary button, like right or middle button.\n */\nexport function isSecondaryButton(event: MouseEvent | PointerEvent | TouchEvent): boolean {\n  return isTouchEvent(event) ? false : (<MouseEvent | PointerEvent>event).which > 1;\n}\n","import type { Board } from 'chessboard/model/board/types';\nimport type { WebGLRenderer } from 'chessboard/renderers/webgl/base';\nimport { endPieceAnimation } from 'chessboard/renderers/webgl/base/animation';\nimport { getBoardXYFromEvent } from 'utils/get-board-xy-from-event';\nimport { isPositionInsideBoard } from 'chessboard/renderers/webgl/base/utils/is-position-inside-board';\nimport { isRightButton } from 'chessboard/model/dom/is-right-button';\nimport { isSecondaryButton } from 'chessboard/model/dom/is-secondary-button';\n\n/**\n * On pointer down.\n */\nexport function onPointerDown<T extends WebGLRenderer.State>(\n  instance: WebGLRenderer.Instance<T>,\n  event: Event,\n): void {\n  const { state, methods } = instance;\n  const { animatedOverPiece, containerEl, pointer } = state;\n\n  const coords = <Board.Coords>getBoardXYFromEvent(event, containerEl);\n\n  pointer.event = event;\n\n  const isRightDown = isRightButton(event as MouseEvent);\n\n  if (!state.isBoardEnabled && !isRightDown) {\n    return;\n  }\n\n  pointer.viewPosition = methods.normalizePointer(state, coords);\n  pointer.boardPosition = methods.getBoardPosition(state, pointer.viewPosition);\n\n  pointer.down = true;\n  pointer.secondaryDown = isSecondaryButton(event as MouseEvent);\n  pointer.rightDown = isRightDown;\n\n  pointer.insideBoard = isPositionInsideBoard(state, pointer.boardPosition);\n  pointer.downInsideBoard = pointer.insideBoard;\n\n  methods.onPointerDown?.(state);\n\n  if (animatedOverPiece) {\n    endPieceAnimation(state, animatedOverPiece);\n\n    state.animatedOverPiece = null;\n  }\n\n  pointer.previousViewPosition = pointer.viewPosition;\n  pointer.previousBoardPosition = pointer.boardPosition;\n}\n","import type { Animator } from 'chessboard/renderers/model/animator/types';\nimport type { WebGLRenderer } from 'chessboard/renderers/webgl/base';\n\n/**\n * Animate an item.\n *\n * The purpose of animating an item on the board through this function\n * is to make sure only one animation is playing for it.\n */\nexport function animateItem<T extends WebGLRenderer.State>(\n  state: T,\n  {\n    item,\n    animation,\n    type,\n    onEnd,\n  }: {\n    item: { activeAnimation?: WebGLRenderer.ItemAnimation.Model };\n    animation: Animator.Animation.Model;\n    type: WebGLRenderer.ItemAnimation.Type;\n    onEnd?: Animator.Animation.Callback;\n  },\n): void {\n  const { animator } = state;\n\n  if (item.activeAnimation) {\n    animator.end(item.activeAnimation.animation);\n  }\n\n  item.activeAnimation = { animation, type };\n\n  animation.onEnd(() => {\n    onEnd?.(animation);\n\n    item.activeAnimation = undefined;\n  });\n}\n","import type { Animator } from 'chessboard/renderers/model/animator/types';\nimport type { WebGLRenderer } from 'chessboard/renderers/webgl/base';\n\n/**\n * Animate a piece.\n */\nexport function animatePiece<T extends WebGLRenderer.State>(\n  instance: WebGLRenderer.Instance<T>,\n  {\n    piece,\n    type,\n    animation,\n    onEnd,\n  }: {\n    piece: WebGLRenderer.Piece.Model<any>;\n    type: WebGLRenderer.Piece.Animation.Type;\n    animation: Animator.Animation.Model;\n    onEnd?: Animator.Animation.Callback;\n  },\n): void {\n  const { state } = instance;\n  const { animator, pieceAnimations } = state;\n\n  if (pieceAnimations[piece.id] && !pieceAnimations[piece.id].animation.ended) {\n    animator.end(pieceAnimations[piece.id].animation);\n  }\n\n  pieceAnimations[piece.id] = { animation, type };\n\n  animation.onEnd((endedAnimation) => {\n    onEnd?.(endedAnimation);\n\n    if (pieceAnimations[piece.id] && pieceAnimations[piece.id].animation === endedAnimation) {\n      delete pieceAnimations[piece.id];\n    }\n  });\n}\n","import type { WebGLRenderer } from 'chessboard/renderers/webgl/base';\n\n/**\n * Stop the animation of an item.\n */\nexport function endItemAnimation<T extends WebGLRenderer.State>(\n  state: T,\n  item: { activeAnimation?: WebGLRenderer.ItemAnimation.Model },\n): void {\n  const { animator } = state;\n\n  if (item.activeAnimation) {\n    animator.end(item.activeAnimation.animation);\n  }\n\n  item.activeAnimation = undefined;\n}\n","import type { WebGLRenderer } from 'chessboard/renderers/webgl/base';\n\n/**\n * Check if a piece is playing an animation.\n */\nexport function isPieceAnimating<T extends WebGLRenderer.State>(\n  state: T,\n  {\n    piece,\n    type,\n  }: {\n    piece?: WebGLRenderer.Piece.Model<any>;\n    type?: WebGLRenderer.Piece.Animation.Type;\n  },\n): boolean {\n  const { pieceAnimations } = state;\n\n  if (piece) {\n    const animData = pieceAnimations[piece.id];\n\n    if (!animData || animData.animation.ended) {\n      return false;\n    }\n\n    if (type && type !== animData.type) {\n      return false;\n    }\n\n    return true;\n  } else if (type) {\n    const animations = Object.values(pieceAnimations);\n\n    for (let i = 0; i < animations.length; i++) {\n      if (animations[i].type === type) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  return false;\n}\n","import type { WebGLRenderer } from 'chessboard/renderers/webgl/base';\nimport { findPieceFromFileRank } from 'chessboard/renderers/webgl/base/pieces/find-piece-from-file-rank';\n\n/**\n * Find piece from board position.\n */\nexport function findPieceFromPosition<T extends WebGLRenderer.State>(\n  instance: WebGLRenderer.Instance<T>,\n  position: WebGLRenderer.BoardPosition,\n): WebGLRenderer.Piece.Model<any> | null {\n  const { state, methods } = instance;\n  const fileRank = methods.positionToFileRank(state, position);\n\n  return findPieceFromFileRank(state, fileRank);\n}\n","import type { Board } from 'chessboard/model/board/types';\nimport type { WebGLRenderer } from 'chessboard/renderers/webgl/base';\n\n/**\n * Find hint based on a SAN square.\n */\nexport function findHintFromSquare<T extends WebGLRenderer.State>(\n  state: T,\n  square: Board.SanSquare,\n): WebGLRenderer.Hint.Model<any> | null {\n  return Object.values(state.hints).find((hint) => hint.info.square === square) ?? null;\n}\n","import type { Board } from 'chessboard/model/board/types';\nimport type { WebGLRenderer } from 'chessboard/renderers/webgl/base';\nimport { findHintFromSquare } from 'chessboard/renderers/webgl/base/hints/find-hint-from-square';\nimport { getSanFromFileRank } from 'chessboard/model/board/get-san-from-file-rank';\n\n/**\n * Find hint based on file/rank coordinates.\n */\nexport function findHintFromFileRank<T extends WebGLRenderer.State>(\n  state: T,\n  fileRank: Board.FileRank,\n): WebGLRenderer.Hint.Model<any> | null {\n  const square = getSanFromFileRank(fileRank);\n\n  if (square) {\n    return findHintFromSquare(state, square);\n  }\n\n  return null;\n}\n","import type { WebGLRenderer } from 'chessboard/renderers/webgl/base';\nimport { findHintFromFileRank } from 'chessboard/renderers/webgl/base/hints/find-hint-from-file-rank';\n\n/**\n * Find hint from board position.\n */\nexport function findHintFromPosition<T extends WebGLRenderer.State>(\n  instance: WebGLRenderer.Instance<T>,\n  position: WebGLRenderer.BoardPosition,\n): WebGLRenderer.Hint.Model<any> | null {\n  const { state, methods } = instance;\n  const fileRank = methods.positionToFileRank(state, position);\n\n  return findHintFromFileRank(state, fileRank);\n}\n","import type { Board } from 'chessboard/model/board/types';\nimport { WebGLRenderer } from 'chessboard/renderers/webgl/base';\nimport {\n  animateItem,\n  animatePiece,\n  endItemAnimation,\n  endPieceAnimation,\n  isPieceAnimating,\n} from 'chessboard/renderers/webgl/base/animation';\nimport { findPieceFromPosition } from 'chessboard/renderers/webgl/base/pieces/find-piece-from-position';\nimport { findHintFromPosition } from 'chessboard/renderers/webgl/base/hints/find-hint-from-position';\nimport { getBoardXYFromEvent } from 'utils/get-board-xy-from-event';\nimport { isPositionInsideBoard, positionToSquare } from 'chessboard/renderers/webgl/base/utils';\n\n/**\n * On pointer move.\n */\nexport function onPointerMove<T extends WebGLRenderer.State>(\n  instance: WebGLRenderer.Instance<T>,\n  event: Event,\n): void {\n  const { state, methods, animationMethods } = instance;\n  const { containerEl, pointer } = state;\n\n  const coords = <Board.Coords>getBoardXYFromEvent(event, containerEl);\n\n  pointer.event = event;\n\n  pointer.previousViewPosition = pointer.viewPosition;\n  pointer.previousBoardPosition = pointer.boardPosition;\n\n  pointer.viewPosition = methods.normalizePointer(state, coords);\n  pointer.boardPosition = methods.getBoardPosition(state, pointer.viewPosition);\n\n  pointer.insideBoard = isPositionInsideBoard(state, pointer.boardPosition);\n\n  methods.onPointerMove?.(state);\n\n  if (!state.isBoardEnabled) {\n    return;\n  }\n\n  if (animationMethods.pieceOver) {\n    doPieceOverAnimation(instance, pointer);\n  }\n\n  if (animationMethods.hintOver) {\n    doHintOverAnimation(instance, pointer);\n  }\n}\n\n/**\n * Handles the piece animations for pointer hovering.\n */\nfunction doPieceOverAnimation<T extends WebGLRenderer.State>(\n  instance: WebGLRenderer.Instance<T>,\n  pointer: WebGLRenderer.PointerState,\n): void {\n  const { state, animationMethods } = instance;\n  const { animatedOverPiece, selectedPiece } = state;\n\n  const overPiece = findPieceFromPosition(instance, pointer.boardPosition);\n\n  if (\n    animatedOverPiece &&\n    animatedOverPiece !== overPiece &&\n    isPieceAnimating(state, {\n      piece: animatedOverPiece,\n      type: WebGLRenderer.Piece.Animation.Type.Over,\n    })\n  ) {\n    endPieceAnimation(state, animatedOverPiece);\n\n    if (animationMethods.pieceOut) {\n      animatePiece(instance, {\n        animation: animationMethods.pieceOut(state, animatedOverPiece),\n        type: WebGLRenderer.Piece.Animation.Type.Out,\n        piece: animatedOverPiece,\n      });\n    }\n\n    state.animatedOverPiece = null;\n  }\n\n  if (selectedPiece && selectedPiece === overPiece) {\n    return;\n  }\n\n  if (overPiece && !isPieceAnimating(state, { piece: overPiece })) {\n    const previousSquare = positionToSquare(instance, pointer.previousBoardPosition);\n    const currentSquare = positionToSquare(instance, pointer.boardPosition);\n\n    if (previousSquare === currentSquare) {\n      // Pointer was already in (piece dropped), so ignore piece hovering.\n      return;\n    }\n\n    state.animatedOverPiece = overPiece;\n\n    if (animationMethods.pieceOver) {\n      animatePiece(instance, {\n        animation: animationMethods.pieceOver(state, { piece: overPiece, pointer }),\n        type: WebGLRenderer.Piece.Animation.Type.Over,\n        piece: overPiece,\n        onEnd: () => (state.animatedOverPiece = null),\n      });\n    }\n  }\n}\n\n/**\n * Handles the hint animations for pointer hovering.\n */\nfunction doHintOverAnimation<T extends WebGLRenderer.State>(\n  instance: WebGLRenderer.Instance<T>,\n  pointer: WebGLRenderer.PointerState,\n): void {\n  const { state, animationMethods } = instance;\n  const { animatedOverHint } = state;\n\n  const overHint = findHintFromPosition(instance, pointer.boardPosition);\n\n  if (animatedOverHint && animatedOverHint !== overHint) {\n    endItemAnimation(state, animatedOverHint);\n\n    if (animationMethods.hintOut) {\n      animateItem(state, {\n        item: animatedOverHint,\n        type: WebGLRenderer.ItemAnimation.Type.Out,\n        animation: animationMethods.hintOut(state, animatedOverHint),\n      });\n    }\n\n    state.animatedOverHint = null;\n  }\n\n  if (!overHint) {\n    return;\n  }\n\n  if (\n    animationMethods.hintOver &&\n    overHint.activeAnimation?.type !== WebGLRenderer.ItemAnimation.Type.Over\n  ) {\n    animateItem(state, {\n      item: overHint,\n      type: WebGLRenderer.ItemAnimation.Type.Over,\n      animation: animationMethods.hintOver(state, overHint),\n      onEnd: () => (state.animatedOverHint = null),\n    });\n\n    state.animatedOverHint = overHint;\n  }\n}\n","import type { Board } from 'chessboard/model/board/types';\nimport type { WebGLRenderer } from 'chessboard/renderers/webgl/base';\nimport { getBoardXYFromEvent } from 'utils/get-board-xy-from-event';\nimport { isPositionInsideBoard } from 'chessboard/renderers/webgl/base/utils/is-position-inside-board';\n\n/**\n * On pointer up.\n */\nexport function onPointerUp<T extends WebGLRenderer.State>(\n  instance: WebGLRenderer.Instance<T>,\n  event: Event,\n): void {\n  const { state, methods } = instance;\n  const { containerEl, pointer } = state;\n\n  const coords = <Board.Coords>getBoardXYFromEvent(event, containerEl);\n\n  pointer.event = event;\n\n  pointer.viewPosition = methods.normalizePointer(state, coords);\n  pointer.boardPosition = methods.getBoardPosition(state, pointer.viewPosition);\n\n  pointer.down = false;\n  pointer.downInsideBoard = false;\n  pointer.secondaryDown = false;\n  pointer.rightDown = false;\n\n  pointer.insideBoard = isPositionInsideBoard(state, pointer.boardPosition);\n\n  methods.onPointerUp?.(state);\n\n  pointer.previousViewPosition = pointer.viewPosition;\n  pointer.previousBoardPosition = pointer.boardPosition;\n}\n","import { Pointerdown, Pointerup, Pointermove } from 'chessboard/model/dom/get-pointer-events';\nimport type { WebGLRenderer } from 'chessboard/renderers/webgl/base';\nimport { onMouseDoubleClick } from 'chessboard/renderers/webgl/base/listeners/on-mouse-double-click';\nimport { onMouseWheel } from 'chessboard/renderers/webgl/base/listeners/on-mouse-wheel';\nimport { onPointerDown } from 'chessboard/renderers/webgl/base/listeners/on-pointer-down';\nimport { onPointerMove } from 'chessboard/renderers/webgl/base/listeners/on-pointer-move';\nimport { onPointerUp } from 'chessboard/renderers/webgl/base/listeners/on-pointer-up';\n\n/**\n * Add event listeners.\n */\nexport function addEventListeners<T extends WebGLRenderer.State>(\n  instance: WebGLRenderer.Instance<T>,\n): void {\n  const { eventListeners, state, methods } = instance;\n  const { containerEl } = state;\n\n  eventListeners.pointerDown = (event) => onPointerDown(instance, event);\n  eventListeners.pointerMove = (event) => onPointerMove(instance, event);\n  eventListeners.pointerUp = (event) => onPointerUp(instance, event);\n\n  containerEl.addEventListener(Pointerdown, eventListeners.pointerDown);\n  document.addEventListener(Pointermove, eventListeners.pointerMove);\n  document.addEventListener(Pointerup, eventListeners.pointerUp);\n\n  if (methods.onMouseDoubleClick) {\n    eventListeners.doubleClick = (event) => onMouseDoubleClick(instance, event);\n\n    containerEl.addEventListener('dblclick', eventListeners.doubleClick);\n  }\n\n  if (methods.onMouseWheel) {\n    eventListeners.wheel = (event) => onMouseWheel(instance, event);\n\n    containerEl.addEventListener('wheel', eventListeners.wheel);\n  }\n}\n","import JCE from '@chesscom/js-chess-engine';\n\n/**\n * Add parameters to the window object.\n */\nexport function addToWindow<T>(params: T): T {\n  Object.assign(<any>window, params, { JCE });\n\n  return params;\n}\n","import type { Animator } from 'chessboard/renderers/model/animator/types';\nimport { easeLinear } from 'chessboard/renderers/model/animator/easing';\n\n/**\n * Updates the animated properties.\n */\nexport function updateAnimatedProperties(animation: Animator.Animation.Model): void {\n  const { animatedProps, animatedPropsKeyframes, frameInfo, isTargetHTMLElement, params } =\n    animation;\n  const { keyframes, target } = params;\n  const { elapsedPercentage } = frameInfo;\n  const easing = params.easing || easeLinear;\n\n  if (!keyframes) {\n    return;\n  }\n\n  let fromValue: number;\n  let toValue: number;\n\n  let fromKeyframe: number;\n  let toKeyframe: number;\n\n  let keyframeElapsedInterval: number;\n\n  Object.keys(animatedProps).forEach((property) => {\n    // Find the keyframes segment.\n    for (let i = 1; i < animatedPropsKeyframes[property].length; i++) {\n      fromKeyframe = animatedPropsKeyframes[property][i - 1];\n      toKeyframe = animatedPropsKeyframes[property][i];\n\n      if (elapsedPercentage >= fromKeyframe && elapsedPercentage <= toKeyframe) {\n        fromValue = keyframes[fromKeyframe][property];\n        toValue = keyframes[toKeyframe][property];\n\n        break;\n      }\n    }\n\n    keyframeElapsedInterval = (elapsedPercentage - fromKeyframe) / (toKeyframe - fromKeyframe);\n    keyframeElapsedInterval = easing(keyframeElapsedInterval);\n\n    animatedProps[property] = fromValue + (toValue - fromValue) * keyframeElapsedInterval;\n\n    if (target && !isTargetHTMLElement) {\n      target[property] = animatedProps[property];\n    }\n  });\n}\n","import type { Animator } from 'chessboard/renderers/model/animator/types';\n\n/**\n * Creates an animation.\n */\nexport function createAnimation(params: Animator.Animation.Params): Animator.Animation.Model {\n  const { data, keyframes, repeat, target, onEnd } = params;\n\n  const animatedProps = getAnimatedProps(keyframes);\n  const animatedPropsKeyframes = getAnimatedPropsKeyframes(animatedProps, keyframes);\n\n  const animation: Animator.Animation.Model = {\n    animatedProps,\n    animatedPropsKeyframes,\n    data: { ...data },\n    endCallbacks: [],\n    ended: false,\n    endTime: 0,\n    forcedEnd: false,\n    frameInfo: {\n      deltaTime: 0,\n      elapsedInterval: 0,\n      elapsedPercentage: 0,\n    },\n    isTargetHTMLElement: target instanceof HTMLElement,\n    onEnd: (callback) => animation.endCallbacks.push(callback),\n    params,\n    repeatCount: repeat || 1,\n    started: false,\n    startTime: 0,\n    keptAlive: false,\n  };\n\n  if (onEnd) {\n    animation.endCallbacks.push(onEnd);\n  }\n\n  return animation;\n}\n\n/**\n * Gather the animated properties.\n */\nfunction getAnimatedProps(keyframes?: Animator.Animation.Keyframes): Animator.AnimatedProps.Model {\n  if (!keyframes) {\n    return {};\n  }\n\n  if (!keyframes[0]) {\n    throw new Error('The animation keyframes must contain values at `0` percentage.');\n  }\n\n  return { ...keyframes[0] };\n}\n\n/**\n * Gather the keyframes for each animated property.\n */\nfunction getAnimatedPropsKeyframes(\n  animatedProps: Animator.AnimatedProps.Model,\n  keyframes?: Animator.Animation.Keyframes,\n): Animator.AnimatedProps.Keyframes {\n  if (!keyframes) {\n    return {};\n  }\n\n  const animatedPropsList = Object.keys(animatedProps);\n  const animatedPropsKeyframes: Animator.AnimatedProps.Keyframes = {};\n\n  animatedPropsList.forEach((property) => (animatedPropsKeyframes[property] = []));\n\n  Object.keys(keyframes)\n    .sort((a, b) => parseInt(a, 10) - parseInt(b, 10))\n    .forEach((key) => {\n      animatedPropsList.forEach((property) => {\n        if (keyframes[key][property] !== undefined) {\n          animatedPropsKeyframes[property].push(parseInt(key, 10));\n        }\n      });\n    });\n\n  return animatedPropsKeyframes;\n}\n","import type { Animator } from 'chessboard/renderers/model/animator/types';\nimport { updateAnimatedProperties } from 'chessboard/renderers/model/animator/update-animated-properties';\nimport { createAnimation } from 'chessboard/renderers/model/animator/create-animation';\n\n/**\n * Create an animation manager.\n */\nexport function createAnimator(manualUpdate: boolean = false): Animator.API {\n  /**\n   * The animations currently playing.\n   */\n  const playingAnimations: Animator.Animation.Model[] = [];\n\n  /**\n   * The request id returned by `requestAnimationFrame`.\n   */\n  let frameRequestId = 0;\n\n  /**\n   * Last animation frame time (used to calculate delta time).\n   */\n  let frameTime = 0;\n\n  return {\n    end,\n    endAll,\n    play,\n    playingAnimations,\n    playingAnimationsCount: () => playingAnimations.length,\n    update,\n  };\n\n  /**\n   * The animation loop.\n   */\n  function animationLoop(time: number): void {\n    const deltaTime = (time - frameTime) * 0.001;\n\n    playingAnimations.forEach((animation) => {\n      if (animation.startTime > time) {\n        // `true` when using `repeatDelay`\n        return;\n      }\n\n      const frameInfo = animation.frameInfo;\n\n      frameInfo.deltaTime = deltaTime;\n\n      if (!animation.started && !onAnimationStart(animation, time)) {\n        return;\n      }\n\n      if (animation.endTime) {\n        // Ignore if animation plays indefinitely.\n\n        frameInfo.elapsedInterval =\n          (time - animation.startTime) / (animation.endTime - animation.startTime);\n\n        if (frameInfo.elapsedInterval > 1) {\n          frameInfo.elapsedInterval = 1;\n        }\n\n        frameInfo.elapsedPercentage = Math.round(frameInfo.elapsedInterval * 100);\n      }\n\n      onAnimationUpdate(animation);\n\n      if (animation.endTime && animation.endTime <= time) {\n        onAnimationEnd(animation);\n      }\n    });\n\n    frameTime = time;\n\n    if (playingAnimations.length && !manualUpdate) {\n      frameRequestId = requestAnimationFrame(animationLoop);\n    }\n  }\n\n  /**\n   * Ends an animation.\n   */\n  function end(animation: Animator.Animation.Model): void {\n    if (animation.ended || playingAnimations.indexOf(animation) < 0) {\n      return;\n    }\n\n    animation.frameInfo.elapsedInterval = 1;\n    animation.frameInfo.elapsedPercentage = 100;\n\n    onAnimationUpdate(animation);\n    onAnimationEnd(animation, true);\n  }\n\n  /**\n   * End all animations.\n   */\n  function endAll(): void {\n    [...playingAnimations].forEach(end);\n  }\n\n  /**\n   * Ends the animation playback.\n   */\n  function onAnimationEnd(animation: Animator.Animation.Model, forcedEnd = false): void {\n    const { duration, keepAlive, repeatDelay } = animation.params;\n\n    animation.repeatCount--;\n    animation.forcedEnd = forcedEnd;\n\n    if (!forcedEnd && animation.repeatCount > 0 && duration && duration !== Infinity) {\n      animation.startTime = animation.endTime + (repeatDelay || 0);\n      animation.endTime = animation.startTime + duration;\n\n      return;\n    }\n\n    if (!forcedEnd && keepAlive) {\n      animation.keptAlive = true;\n\n      return;\n    }\n\n    animation.ended = true;\n    animation.endCallbacks.forEach((callback) => callback(animation));\n\n    removeAnimation(animation);\n  }\n\n  /**\n   * Starts playing the animation.\n   */\n  function onAnimationStart(animation: Animator.Animation.Model, time: number): boolean {\n    const { duration, delay, onStart } = animation.params;\n\n    if (!animation.startTime) {\n      animation.startTime = time + (delay || 0);\n\n      if (duration && duration !== Infinity) {\n        animation.endTime = animation.startTime + duration;\n      }\n    }\n\n    if (animation.startTime > time) {\n      return false;\n    }\n\n    animation.started = true;\n\n    onStart?.(animation);\n\n    return true;\n  }\n\n  /**\n   * Process an animation frame.\n   */\n  function onAnimationUpdate(animation: Animator.Animation.Model): void {\n    const { onUpdate } = animation.params;\n\n    updateAnimatedProperties(animation);\n\n    onUpdate?.(animation);\n  }\n\n  /**\n   * Plays an animation.\n   */\n  function play(params: Animator.Animation.Params): Animator.Animation.Model {\n    const animation = createAnimation(params);\n\n    playingAnimations.push(animation);\n\n    if (!frameRequestId && !manualUpdate) {\n      startAnimationLoop();\n    }\n\n    return animation;\n  }\n\n  /**\n   * Removes an animation.\n   */\n  function removeAnimation(animation: Animator.Animation.Model): void {\n    const animationIndex = playingAnimations.indexOf(animation);\n\n    if (animationIndex >= 0) {\n      playingAnimations.splice(animationIndex, 1);\n    }\n\n    if (!playingAnimations.length && !manualUpdate) {\n      stopAnimationLoop();\n    }\n  }\n\n  /**\n   * Starts the animation loop.\n   */\n  function startAnimationLoop(): void {\n    frameTime = performance.now();\n    frameRequestId = requestAnimationFrame(animationLoop);\n  }\n\n  /**\n   * Stops the animation loop.\n   */\n  function stopAnimationLoop(): void {\n    if (frameRequestId) {\n      cancelAnimationFrame(frameRequestId);\n    }\n\n    frameRequestId = 0;\n  }\n\n  /**\n   * Updates an animation frame.\n   */\n  function update(time: number): void {\n    animationLoop(time);\n  }\n}\n","import type { Board } from 'chessboard/model/board/types';\nimport { Constants } from 'chessboard/renderers/webgl/base/constants';\nimport type { LegacyThemes } from 'chessboard/config/legacy-themes';\nimport type { WebGLRenderer } from 'chessboard/renderers/webgl/base';\nimport { createAnimator } from 'chessboard/renderers/model/animator';\n\n/**\n * Create the WebGL board's base state.\n */\nexport function createBaseState(\n  containerEl: HTMLElement,\n  {\n    options,\n    boardThemes,\n    pieceThemes,\n  }: {\n    options: Board.Options;\n    boardThemes: LegacyThemes.BoardStyles;\n    pieceThemes: LegacyThemes.PieceStyles;\n  },\n): WebGLRenderer.State {\n  const animator = createAnimator(true);\n\n  return {\n    animatedOverPiece: null,\n    animatedOverHint: null,\n    animator,\n    attackedKing: null,\n    arrows: {},\n    assetsLoaded: false,\n    blinkingHighlights: {},\n    boardId: options.id || 'webglBoard',\n    boardStyle: options.boardStyle,\n    boardThemes,\n    containerEl,\n    customItems: {},\n    destroyed: false,\n    effects: {},\n    fadeSetupAnimation: null,\n    flipCoordinates: false,\n    highlights: {},\n    hints: {},\n    hoverSquare: null,\n    isBoardFlipped: options.flipped,\n    isBoardEnabled: options.enabled,\n    isCheckmate: false,\n    isPromotionWindowVisible: false,\n    options,\n    pieceAnimations: {},\n    pieces: {},\n    pieceStyle: options.pieceStyle,\n    pieceThemes,\n    pointer: {\n      boardPosition: { x: 0, y: 0 },\n      down: false,\n      downInsideBoard: false,\n      event: new Event(''),\n      insideBoard: false,\n      previousBoardPosition: { x: 0, y: 0 },\n      previousViewPosition: { x: 0, y: 0 },\n      rightDown: false,\n      secondaryDown: false,\n      viewPosition: { x: 0, y: 0 },\n    },\n    promotionWindowAnimation: null,\n    selectedPiece: null,\n    squareSize: 0,\n    viewEl: document.createElement('canvas'),\n    viewSize: {\n      width: <number>Constants.Board.DefaultWidth,\n      height: <number>Constants.Board.DefaultHeight,\n    },\n    takeover: [],\n  };\n}\n","import type { WebGLRenderer } from 'chessboard/renderers/webgl/base';\n\n/**\n * Updates the pieces' visuals.\n */\nexport function updatePiecesVisuals<T extends WebGLRenderer.State>(\n  instance: WebGLRenderer.Instance<T>,\n): void {\n  const { state, methods } = instance;\n\n  Object.values(state.pieces).forEach((piece) => {\n    methods.updatePieceVisuals(state, piece);\n  });\n\n  methods.onPiecesVisualsChanged?.(state);\n}\n","import type { WebGLRenderer } from 'chessboard/renderers/webgl/base';\nimport { updatePiecesVisuals } from 'chessboard/renderers/webgl/base/pieces';\n\n/**\n * Load the assets.\n */\nexport function loadAssets<T extends WebGLRenderer.State>(\n  instance: WebGLRenderer.Instance<T>,\n): Promise<void> {\n  const { state, methods, animationMethods } = instance;\n\n  return Promise.all([methods.loadAssets(state), animationMethods.loadAssets?.(state)]).then(() => {\n    if (state.destroyed) {\n      return;\n    }\n\n    state.assetsLoaded = true;\n\n    updatePiecesVisuals(instance);\n\n    state.containerEl.appendChild(state.viewEl);\n  });\n}\n","import type { WebGLRenderer } from 'chessboard/renderers/webgl/base';\n\n/**\n * The update loop.\n */\nexport function updateLoop<T extends WebGLRenderer.State>(\n  instance: WebGLRenderer.Instance<T>,\n  time: number,\n): void {\n  const { state, methods } = instance;\n\n  state.animator.update(time);\n\n  methods.render(state, time);\n}\n","import type { WebGLRenderer } from 'chessboard/renderers/webgl/base';\nimport { addEventListeners } from 'chessboard/renderers/webgl/base/listeners/add-event-listeners';\nimport { addToWindow } from 'utils/add-to-window';\nimport { createBaseState, loadAssets, updateLoop } from 'chessboard/renderers/webgl/base/main';\nimport { setTestData, TestElements, TestKeys } from 'utils/set-test-data';\nimport { Core } from 'chessboard/core/config/types';\n\n/**\n * Initialize the WebGL renderer instance.\n */\nexport function init<T extends WebGLRenderer.State>(\n  params: WebGLRenderer.Params<T>,\n): WebGLRenderer.Instance<T> {\n  const {\n    animationMethods,\n    boardThemes,\n    className,\n    containerEl,\n    options,\n    methods,\n    name,\n    pieceThemes,\n    testElement,\n  } = params;\n\n  const state = methods.createState(\n    createBaseState(containerEl, { boardThemes, options, pieceThemes }),\n  );\n\n  const instance = {\n    animationMethods,\n    className,\n    eventListeners: {},\n    frameRequestId: 0,\n    lastPieceId: 0,\n    methods,\n    name,\n    state,\n  };\n\n  methods.init(state);\n  animationMethods.init?.(state);\n\n  state.hoverSquare = animationMethods.createHoverSquareObj\n    ? animationMethods.createHoverSquareObj(state)\n    : methods.createHoverSquareObj(state);\n\n  loadAssets(instance).then(() => {\n    params.emitter.emit(Core.InstanceEvents.WebGLAssetsInitialized, {\n      type: Core.InstanceEvents.WebGLAssetsInitialized,\n    });\n  });\n  addEventListeners(instance);\n\n  containerEl.classList.add(className);\n\n  onAnimatedFrameReceived(performance.now());\n\n  if (options.test) {\n    setupTestData(state, testElement);\n  }\n\n  return instance;\n\n  /**\n   * Call the next loop.\n   */\n  function onAnimatedFrameReceived(time: number): void {\n    instance.frameRequestId = requestAnimationFrame(onAnimatedFrameReceived);\n\n    updateLoop(instance, time);\n  }\n}\n\n/**\n * Add neccessary data for testing.\n */\nfunction setupTestData<T extends WebGLRenderer.State>(state: T, testElement?: TestElements): void {\n  setTestData(state.containerEl, {\n    [TestKeys.Element]: testElement || TestElements.Board,\n  });\n\n  if (testElement === TestElements.SiblingBoard) {\n    addToWindow({ webglSiblingBoardState: state });\n  } else {\n    addToWindow({ webglBoardState: state });\n  }\n}\n","import { Pointerdown, Pointerup, Pointermove } from 'chessboard/model/dom/get-pointer-events';\nimport type { WebGLRenderer } from 'chessboard/renderers/webgl/base';\n\n/**\n * Remove event listeners.\n */\nexport function removeEventListeners<T extends WebGLRenderer.State>(\n  instance: WebGLRenderer.Instance<T>,\n): void {\n  const { eventListeners, state } = instance;\n  const { containerEl } = state;\n\n  if (eventListeners.pointerDown) {\n    containerEl.removeEventListener(Pointerdown, eventListeners.pointerDown);\n  }\n\n  if (eventListeners.pointerMove) {\n    document.removeEventListener(Pointermove, eventListeners.pointerMove);\n  }\n\n  if (eventListeners.pointerUp) {\n    document.removeEventListener(Pointerup, eventListeners.pointerUp);\n  }\n\n  if (eventListeners.doubleClick) {\n    containerEl.removeEventListener('dblclick', eventListeners.doubleClick);\n  }\n\n  if (eventListeners.wheel) {\n    containerEl.removeEventListener('wheel', eventListeners.wheel);\n  }\n}\n","import type { WebGLRenderer } from 'chessboard/renderers/webgl/base';\nimport { removeEventListeners } from 'chessboard/renderers/webgl/base/listeners/remove-event-listeners';\n\n/**\n * Destroy the renderer.\n */\nexport function destroy<T extends WebGLRenderer.State>(instance: WebGLRenderer.Instance<T>): void {\n  const { className, frameRequestId, state, methods } = instance;\n  const { animator, containerEl, viewEl } = state;\n\n  state.destroyed = true;\n\n  animator.endAll();\n\n  if (frameRequestId) {\n    cancelAnimationFrame(frameRequestId);\n  }\n\n  methods.destroy(state);\n\n  removeEventListeners(instance);\n\n  viewEl.parentNode?.removeChild(viewEl);\n  containerEl.classList.remove(className);\n}\n","import { AnimationTypes } from 'chessboard/renderers/config/types';\nimport { WebGLRenderer } from 'chessboard/renderers/webgl/base';\n\n/**\n * Check if the renderer is playing animations.\n */\nexport function isAnimating<T extends WebGLRenderer.State>(\n  instance: WebGLRenderer.Instance<T>,\n  animationType?: AnimationTypes,\n): boolean {\n  const { state } = instance;\n  const { animator } = state;\n\n  if (animationType === AnimationTypes.Move) {\n    const { pieceAnimations } = state;\n    let playingAnimationsCount = 0;\n\n    Object.values(pieceAnimations).forEach((animData) => {\n      const { animation, type } = animData;\n\n      if (\n        ![\n          WebGLRenderer.Piece.Animation.Type.Capture,\n          WebGLRenderer.Piece.Animation.Type.Drop,\n          WebGLRenderer.Piece.Animation.Type.Move,\n          WebGLRenderer.Piece.Animation.Type.Restore,\n        ].includes(type)\n      ) {\n        return;\n      }\n\n      if (animation && !animation.ended) {\n        playingAnimationsCount++;\n      }\n    });\n\n    return playingAnimationsCount > 0;\n  }\n\n  return animator.playingAnimationsCount() > 0;\n}\n","import type { Board } from 'chessboard/model/board/types';\nimport type { WebGLRenderer } from 'chessboard/renderers/webgl/base';\nimport { getFileRankFromSan } from 'chessboard/model/board/get-file-rank-from-san';\n\n/**\n * Find piece position from a SAN square.\n */\nexport function squareToPiecePosition<T extends WebGLRenderer.State>(\n  instance: WebGLRenderer.Instance<T>,\n  square: Board.SanSquare,\n): WebGLRenderer.BoardPosition {\n  const { state, methods } = instance;\n  const fileRank = getFileRankFromSan(square);\n\n  return methods.fileRankToPosition(state, fileRank);\n}\n","import type { DragPiece } from 'chessboard/renderers/config/types';\nimport { WebGLRenderer } from 'chessboard/renderers/webgl/base';\nimport {\n  animatePiece,\n  endPieceAnimation,\n  isPieceAnimating,\n} from 'chessboard/renderers/webgl/base/animation';\nimport { findPieceFromSquare } from 'chessboard/renderers/webgl/base/pieces';\nimport { squareToPiecePosition } from 'chessboard/renderers/webgl/base/utils';\n\n/**\n * Drag a piece on the board.\n */\nexport function dragPiece<T extends WebGLRenderer.State>(\n  instance: WebGLRenderer.Instance<T>,\n  draggedPieceInfo: DragPiece,\n): void {\n  const { state, methods, animationMethods } = instance;\n\n  let position: WebGLRenderer.BoardPosition | null = null;\n\n  if (draggedPieceInfo.toSquare) {\n    position = squareToPiecePosition(instance, draggedPieceInfo.toSquare);\n  } else if (draggedPieceInfo.coords) {\n    position = methods.getBoardPosition(state, draggedPieceInfo.coords);\n  }\n\n  if (!position) {\n    return;\n  }\n\n  const piece = findPieceFromSquare<T>(state, draggedPieceInfo.square);\n\n  if (!piece) {\n    return;\n  }\n\n  if (!isPieceAnimating(state, { piece, type: WebGLRenderer.Piece.Animation.Type.Drag })) {\n    endPieceAnimation(state, piece);\n  }\n\n  methods.setPiecePosition(piece, position);\n\n  if (!state.selectedPiece && animationMethods.dragPiece) {\n    animatePiece(instance, {\n      animation: animationMethods.dragPiece(state, piece),\n      type: WebGLRenderer.Piece.Animation.Type.Drag,\n      piece,\n    });\n  }\n\n  state.selectedPiece = piece;\n\n  methods.onPieceDrag?.(state, piece);\n}\n","import type { Core } from 'chessboard/core/config/types';\nimport type { WebGLRenderer } from 'chessboard/renderers/webgl/base';\nimport { updatePiecesVisuals } from 'chessboard/renderers/webgl/base/pieces';\n\n/**\n * Change the pieces' style.\n */\nexport function changePiecesStyle<T extends WebGLRenderer.State>(\n  instance: WebGLRenderer.Instance<T>,\n  context: Core.Context,\n  fallback = false,\n): void {\n  const { state, methods } = instance;\n  const { pieceStyle, themeAssets } = context.options;\n\n  state.pieceStyle = pieceStyle;\n  state.options.themeAssets = themeAssets;\n\n  methods.updatePiecesStyle(state, fallback).then(() => {\n    if (!state.assetsLoaded) {\n      return;\n    }\n\n    updatePiecesVisuals(instance);\n  });\n}\n","import type { WebGLRenderer } from 'chessboard/renderers/webgl/base';\nimport type JCE from '@chesscom/js-chess-engine';\n\n/**\n * Replace a piece with another.\n */\nexport function swapPiece<T extends WebGLRenderer.State>(\n  instance: WebGLRenderer.Instance<T>,\n  {\n    piece,\n    type,\n  }: {\n    piece: WebGLRenderer.Piece.Model<any>;\n    type?: JCE.PieceSignature;\n  },\n): void {\n  const { state, methods } = instance;\n\n  if (type) {\n    piece.info.type = type;\n  }\n\n  methods.updatePieceVisuals(state, piece);\n}\n","import type { WebGLRenderer } from 'chessboard/renderers/webgl/base';\n\n/**\n * End all pieces' animation.\n */\nexport function endAllPiecesAnimation<T extends WebGLRenderer.State>(\n  state: T,\n  type?: WebGLRenderer.Piece.Animation.Type,\n): void {\n  const { animator, pieceAnimations } = state;\n\n  Object.keys(pieceAnimations).forEach((key) => {\n    const animData = pieceAnimations[key];\n\n    if (type && type !== animData.type) {\n      return;\n    }\n\n    animator.end(animData.animation);\n\n    delete pieceAnimations[key];\n  });\n}\n","import type { Animator } from 'chessboard/renderers/model/animator/types';\nimport type { Board } from 'chessboard/model/board/types';\nimport { Game } from 'chessboard/model/game/types';\nimport { WebGLRenderer } from 'chessboard/renderers/webgl/base';\nimport {\n  animatePiece,\n  endAllPiecesAnimation,\n  isPieceAnimating,\n} from 'chessboard/renderers/webgl/base/animation';\nimport { isCapture } from 'chessboard/model/move/is-capture';\nimport { isCastle } from 'chessboard/model/move/is-castle';\nimport { squareToPiecePosition } from 'chessboard/renderers/webgl/base/utils';\nimport { nodeTargetSquare } from 'api/move/model/node-target-square';\n\n/**\n * Move a piece from one square to another.\n */\nexport function movePieces<T extends WebGLRenderer.State>(\n  instance: WebGLRenderer.Instance<T>,\n  moves: Game.Move.Extended[],\n): void {\n  const { state, methods, animationMethods } = instance;\n  const { attackedKing, pieces, pointer } = state;\n\n  let castling = isCastle(moves[0]);\n  const capturing = isCapture(moves[0]);\n  const movedPieces: WebGLRenderer.Piece.Collection<any> = {};\n\n  if (!castling && moves.length === 2) {\n    // check for castling undo\n    const piece1 = pieces[<Board.SanSquare>moves[0].from];\n    const piece2 = pieces[<Board.SanSquare>moves[1].from];\n\n    if (piece1.info.type === Game.Piece.Types.King && piece2.info.type === Game.Piece.Types.Rook) {\n      castling = true;\n    }\n  }\n\n  moves.forEach((move) => {\n    const moveTo = nodeTargetSquare(move);\n\n    if (!moveTo) {\n      return;\n    }\n\n    const piece = pieces[<Board.SanSquare>move.from];\n    const fromPosition = squareToPiecePosition(instance, <Board.SanSquare>move.from);\n    const toPosition = squareToPiecePosition(instance, moveTo);\n\n    let animation: Animator.Animation.Model | null = null;\n    let animationType = WebGLRenderer.Piece.Animation.Type.Move;\n\n    if (move.userGeneratedDrop && animationMethods.dropPiece) {\n      methods.setPiecePosition(piece, pointer.boardPosition);\n\n      animation = animationMethods.dropPiece(state, { capturing, piece, to: toPosition });\n      animationType = WebGLRenderer.Piece.Animation.Type.Drop;\n    } else if (!move.userGeneratedDrop && move.animate && move.from !== moveTo) {\n      animation = animationMethods.movePiece(state, {\n        capturing,\n        castling,\n        from: fromPosition,\n        piece,\n        to: toPosition,\n      });\n    }\n\n    if (animation) {\n      animatePiece(instance, {\n        animation,\n        type: animationType,\n        piece,\n        onEnd: ({ forcedEnd }) => {\n          methods.onPieceMoved?.(state, { piece, square: moveTo });\n\n          if (forcedEnd || !animationMethods.attackKing) {\n            return;\n          }\n\n          if (\n            move.san && // `move.san` is used to check for main move since one of the moves can be a rook move.\n            attackedKing &&\n            !isPieceAnimating(state, {\n              piece: attackedKing,\n              type: WebGLRenderer.Piece.Animation.Type.KingAttack,\n            })\n          ) {\n            animatePiece(instance, {\n              animation: animationMethods.attackKing(state, { piece: attackedKing }),\n              type: WebGLRenderer.Piece.Animation.Type.KingAttack,\n              piece: attackedKing,\n            });\n          }\n        },\n      });\n    } else {\n      methods.setPiecePosition(piece, toPosition);\n      methods.onPieceMoved?.(state, { piece, square: moveTo });\n    }\n\n    if (\n      !attackedKing &&\n      isPieceAnimating(state, { type: WebGLRenderer.Piece.Animation.Type.KingAttack })\n    ) {\n      endAllPiecesAnimation(state, WebGLRenderer.Piece.Animation.Type.KingAttack);\n    }\n\n    if (move.from !== moveTo) {\n      piece.info.square = moveTo;\n\n      movedPieces[<Board.SanSquare>move.from] = piece;\n    }\n  });\n\n  Object.keys(movedPieces).forEach((from) => {\n    const piece = movedPieces[from];\n    const oldPiece = pieces[from];\n\n    pieces[<Board.SanSquare>piece.info.square] = piece;\n\n    if (piece.info.type === oldPiece.info.type && piece.info.color === oldPiece.info.color) {\n      delete pieces[from];\n    }\n  });\n}\n","import type { Board } from 'model/board/types';\nimport { WebGLRenderer } from 'chessboard/renderers/webgl/base';\nimport { animatePiece, endPieceAnimation } from 'chessboard/renderers/webgl/base/animation';\n\n/**\n * Remove a piece from the board.\n */\nexport function removePiece<T extends WebGLRenderer.State>(\n  instance: WebGLRenderer.Instance<T>,\n  {\n    captured,\n    fromDrop,\n    square,\n  }: {\n    captured?: boolean;\n    fromDrop?: boolean;\n    square: Board.SanSquare;\n  },\n): void {\n  const { state, methods, animationMethods } = instance;\n  const { pieces } = state;\n\n  const piece = state.pieces[square];\n\n  if (!piece) {\n    return;\n  }\n\n  endPieceAnimation(state, piece);\n\n  if (captured && animationMethods.capturePiece) {\n    animatePiece(instance, {\n      animation: animationMethods.capturePiece(state, { fromDrop, piece }),\n      type: WebGLRenderer.Piece.Animation.Type.Capture,\n      piece,\n      onEnd: () => methods.removePiece(state, piece),\n    });\n  } else {\n    methods.removePiece(state, piece);\n  }\n\n  delete pieces[square];\n\n  if (state.selectedPiece === piece) {\n    state.selectedPiece = null;\n  }\n}\n","import type { WebGLRenderer } from 'chessboard/renderers/webgl/base';\n\n/**\n * Generate a new piece ID.\n */\nexport function generatePieceId<T extends WebGLRenderer.State>(\n  instance: WebGLRenderer.Instance<T>,\n): number {\n  return ++instance.lastPieceId;\n}\n","import type { Board } from 'model/board/types';\nimport type { WebGLRenderer } from 'chessboard/renderers/webgl/base';\nimport { generatePieceId } from 'chessboard/renderers/webgl/base/pieces';\nimport { squareToPiecePosition } from 'chessboard/renderers/webgl/base/utils';\n\n/**\n * Add a piece on the board.\n */\nexport function addPiece<T extends WebGLRenderer.State>(\n  instance: WebGLRenderer.Instance<T>,\n  pieceInfo: WebGLRenderer.Piece.Info,\n): WebGLRenderer.Piece.Model<any> {\n  const { state, methods } = instance;\n\n  const piece: WebGLRenderer.Piece.Model<any> = {\n    id: generatePieceId(instance),\n    info: pieceInfo,\n    obj: methods.createPieceObj(state, pieceInfo),\n  };\n\n  const piecePosition = squareToPiecePosition(instance, <Board.SanSquare>pieceInfo.square);\n\n  if (state.assetsLoaded) {\n    methods.updatePieceVisuals(state, piece);\n  }\n\n  methods.setPiecePosition(piece, piecePosition);\n  methods.addPiece(state, piece);\n\n  state.pieces[<Board.SanSquare>pieceInfo.square] = piece;\n\n  return piece;\n}\n","import type { Game } from 'chessboard/model/game/types';\n\n/**\n * Determine from the SAN if a move is checkmate.\n */\nexport function isCheckmate(move: Game.Move.Model): boolean {\n  if (!move || !move.san) {\n    return false;\n  }\n\n  return ['#'].includes(move.san.slice(-1));\n}\n","import type { Board } from 'chessboard/model/board/types';\nimport { Game } from 'chessboard/model/game/types';\nimport { WebGLRenderer } from 'chessboard/renderers/webgl/base';\nimport { swapPiece } from 'chessboard/renderers/webgl/base/pieces';\nimport { movePieces } from 'chessboard/renderers/webgl/base/pieces/move-pieces';\nimport { removePiece } from 'chessboard/renderers/webgl/base/pieces/remove-piece';\nimport { addPiece } from 'chessboard/renderers/webgl/base/pieces/add-piece';\nimport { getUndoMoveDetails } from 'chessboard/renderers/model/get-undo-move-details';\nimport { animatePiece, endAllPiecesAnimation } from 'chessboard/renderers/webgl/base/animation';\nimport { isCheckmate } from 'chessboard/model/move/is-checkmate';\n\n/**\n * Undo the last move.\n */\nexport function undoMove<T extends WebGLRenderer.State>(\n  instance: WebGLRenderer.Instance<T>,\n  {\n    move,\n    attackedKingSquare,\n  }: {\n    move: Game.Move.ExtendedNode;\n    attackedKingSquare?: Board.SanSquare;\n  },\n): void {\n  const { state, animationMethods } = instance;\n  const { pieces } = state;\n  const { movedPieces, restoredPiece, promotedSquare } = getUndoMoveDetails(move);\n\n  endAllPiecesAnimation(state);\n\n  if (move.drop) {\n    removePiece(instance, { square: move.to });\n\n    return;\n  }\n\n  state.attackedKing = attackedKingSquare ? pieces[attackedKingSquare] : null;\n  state.isCheckmate = isCheckmate(move);\n\n  movePieces(instance, <Game.Move.Extended[]>movedPieces);\n\n  if (restoredPiece) {\n    const addedPiece = addPiece(instance, restoredPiece);\n\n    if (animationMethods.restorePiece) {\n      animatePiece(instance, {\n        animation: animationMethods.restorePiece(state, addedPiece),\n        type: WebGLRenderer.Piece.Animation.Type.Restore,\n        piece: addedPiece,\n      });\n    }\n  }\n\n  if (promotedSquare) {\n    const promotedPiece = pieces[promotedSquare];\n\n    swapPiece(instance, { piece: promotedPiece, type: Game.Piece.Types.Pawn });\n  }\n}\n","import type { Board } from 'model/board/types';\nimport { WebGLRenderer } from 'chessboard/renderers/webgl/base';\nimport {\n  animatePiece,\n  endPieceAnimation,\n  isPieceAnimating,\n} from 'chessboard/renderers/webgl/base/animation';\nimport { squareToPiecePosition } from 'chessboard/renderers/webgl/base/utils';\n\n/**\n * Drop a piece on the board.\n */\nexport function dropPiece<T extends WebGLRenderer.State>(\n  instance: WebGLRenderer.Instance<T>,\n  square: Board.SanSquare,\n): void {\n  const { state, methods, animationMethods } = instance;\n  const { selectedPiece } = state;\n\n  if (!selectedPiece) {\n    return;\n  }\n\n  endPieceAnimation(state, selectedPiece);\n\n  const position = squareToPiecePosition(instance, square);\n\n  if (\n    animationMethods.dropPiece &&\n    square === selectedPiece.info.square // rely on `makeMove` to animate the move drop\n  ) {\n    animatePiece(instance, {\n      animation: animationMethods.dropPiece(state, { piece: selectedPiece, to: position }),\n      type: WebGLRenderer.Piece.Animation.Type.Drop,\n      piece: selectedPiece,\n      onEnd: ({ forcedEnd }) => {\n        if (forcedEnd || !animationMethods.attackKing || selectedPiece.info.square === square) {\n          return;\n        }\n\n        // Important: reading `attackedKing` directly from `state` is required,\n        // since that is set inside `makeMove` which is called after `dropPiece`.\n        if (\n          state.attackedKing &&\n          !isPieceAnimating(state, {\n            piece: state.attackedKing,\n            type: WebGLRenderer.Piece.Animation.Type.KingAttack,\n          })\n        ) {\n          animatePiece(instance, {\n            animation: animationMethods.attackKing(state, { piece: state.attackedKing }),\n            type: WebGLRenderer.Piece.Animation.Type.KingAttack,\n            piece: state.attackedKing,\n          });\n        }\n      },\n    });\n  }\n\n  methods.setPiecePosition(selectedPiece, position);\n  methods.onPieceDrop?.(state, selectedPiece);\n\n  state.selectedPiece = null;\n}\n","import type { Board } from 'chessboard/model/board/types';\nimport { WebGLRenderer } from 'chessboard/renderers/webgl/base';\nimport { animatePiece } from 'chessboard/renderers/webgl/base/animation';\nimport { findPieceFromSquare } from 'chessboard/renderers/webgl/base/pieces/find-piece-from-square';\n\n/**\n * Respond to an illegal move.\n */\nexport function illegalMove<T extends WebGLRenderer.State>(\n  instance: WebGLRenderer.Instance<T>,\n  kingInCheck: false | Board.SanSquare,\n): void {\n  const { state, animationMethods } = instance;\n\n  if (kingInCheck && animationMethods.attackKing) {\n    const kingPiece = findPieceFromSquare(state, kingInCheck);\n\n    if (!kingPiece) {\n      return;\n    }\n\n    animatePiece(instance, {\n      animation: animationMethods.attackKing(state, { piece: kingPiece, illegalMove: true }),\n      type: WebGLRenderer.Piece.Animation.Type.KingAttack,\n      piece: kingPiece,\n    });\n  }\n}\n","import type { Board } from 'model/board/types';\nimport type { Game } from 'chessboard/model/game/types';\nimport type { WebGLRenderer } from 'chessboard/renderers/webgl/base';\nimport { addPiece } from 'chessboard/renderers/webgl/base/pieces/add-piece';\nimport { removePiece } from 'chessboard/renderers/webgl/base/pieces/remove-piece';\nimport { endAllPiecesAnimation } from 'chessboard/renderers/webgl/base/animation';\n\n/**\n * Load pieces on the board.\n */\nexport function loadPieces<T extends WebGLRenderer.State>(\n  instance: WebGLRenderer.Instance<T>,\n  {\n    piecesInfo,\n    reloadAll,\n  }: {\n    piecesInfo: Game.Piece.Collection;\n    reloadAll?: boolean;\n  },\n) {\n  const { state, methods } = instance;\n\n  endAllPiecesAnimation(state);\n\n  if (reloadAll) {\n    Object.values(state.pieces).forEach((piece) => {\n      removePiece(instance, { square: <Board.SanSquare>piece.info.square });\n    });\n  } else {\n    // Remove pieces that no longer exist or are different\n    Object.values(state.pieces).forEach((piece) => {\n      const pieceInfo = piece.info;\n      const square = <Board.SanSquare>pieceInfo.square;\n\n      const newPieceInfo = piecesInfo.isDefined(square) ? piecesInfo.get(square) : null;\n\n      if (\n        !newPieceInfo ||\n        pieceInfo.type !== newPieceInfo.type ||\n        pieceInfo.color !== newPieceInfo.color\n      ) {\n        removePiece(instance, { square });\n      }\n    });\n  }\n\n  // Add the new pieces on the board\n  piecesInfo\n    .keys()\n    .filter((square) => !state.pieces[square])\n    .forEach((square) => {\n      const piece = piecesInfo.get(square);\n\n      addPiece(instance, piece);\n    });\n\n  methods.onPiecesLoaded?.(state);\n}\n","import type { Board } from 'chessboard/model/board/types';\nimport type { Game } from 'chessboard/model/game/types';\nimport type { WebGLRenderer } from 'chessboard/renderers/webgl/base';\nimport { swapPiece } from 'chessboard/renderers/webgl/base/pieces';\nimport { movePieces } from 'chessboard/renderers/webgl/base/pieces/move-pieces';\nimport { removePiece } from 'chessboard/renderers/webgl/base/pieces/remove-piece';\nimport { addPiece } from 'chessboard/renderers/webgl/base/pieces/add-piece';\nimport { endAllPiecesAnimation } from 'chessboard/renderers/webgl/base/animation';\nimport { isCheckmate } from 'chessboard/model/move/is-checkmate';\nimport { nodeTargetSquare } from 'api/move/model/node-target-square';\n\n/**\n * Make a piece move.\n */\nexport function makeMove<T extends WebGLRenderer.State>(\n  instance: WebGLRenderer.Instance<T>,\n  {\n    move,\n    attackedKingSquare,\n  }: {\n    move: Game.Move.Extended;\n    attackedKingSquare?: Board.SanSquare;\n  },\n): void {\n  const { state } = instance;\n  const { pieces } = state;\n\n  endAllPiecesAnimation(state);\n\n  if (move.drop) {\n    addPiece(instance, {\n      color: move.color,\n      square: nodeTargetSquare(move),\n      type: move.drop,\n    });\n\n    return;\n  }\n\n  state.attackedKing = attackedKingSquare ? pieces[attackedKingSquare] : null;\n  state.isCheckmate = isCheckmate(move);\n\n  if (move.EPCapturedSquare) {\n    removePiece(instance, {\n      captured: true,\n      square: move.EPCapturedSquare,\n      fromDrop: move.userGeneratedDrop,\n    });\n  } else if (move.captured) {\n    removePiece(instance, {\n      captured: true,\n      square: move.to,\n      fromDrop: move.userGeneratedDrop,\n    });\n  }\n\n  const moves = [move, move.rookMove].filter(Boolean);\n\n  movePieces(instance, <Game.Move.Extended[]>moves);\n\n  if (move.promotion) {\n    const promotedPiece = pieces[move.to];\n\n    swapPiece(instance, { piece: promotedPiece, type: move.promotion });\n  }\n}\n","import type { WebGLRenderer } from 'chessboard/renderers/webgl/base';\n\n/**\n * Add the analysis overlay.\n */\nexport function addAnalysisOverlay<T extends WebGLRenderer.State>(\n  instance: WebGLRenderer.Instance<T>,\n): void {\n  const { state, methods } = instance;\n\n  methods.addAnalysisOverlay(state);\n}\n","import type { Core } from 'chessboard/core/config/types';\nimport type { WebGLRenderer } from 'chessboard/renderers/webgl/base';\n\n/**\n * Change the board's style.\n */\nexport function changeBoardStyle<T extends WebGLRenderer.State>(\n  instance: WebGLRenderer.Instance<T>,\n  context: Core.Context,\n): void {\n  const { state, methods } = instance;\n  const { coordinates, flipped } = state.options;\n  const { boardStyle, themeAssets } = context.options;\n\n  state.boardStyle = boardStyle;\n  state.options.themeAssets = themeAssets;\n\n  methods.updateBoardStyle(state);\n  methods.updateBoardCoordinates(state, { colorUpdate: true, flipped, position: coordinates });\n}\n","import type { WebGLRenderer } from 'chessboard/renderers/webgl/base';\n\n/**\n * Fade the pieces setup.\n */\nexport function fadeSetup<T extends WebGLRenderer.State>(\n  instance: WebGLRenderer.Instance<T>,\n  fadeDuration: number,\n): void {\n  const { state, methods } = instance;\n  const { animator } = state;\n\n  if (state.fadeSetupAnimation) {\n    animator.end(state.fadeSetupAnimation);\n  }\n\n  if (fadeDuration === 0) {\n    return;\n  }\n\n  state.fadeSetupAnimation = methods.fadeInAllPieces(state, fadeDuration);\n  state.fadeSetupAnimation.onEnd(() => (state.fadeSetupAnimation = null));\n}\n","import type { WebGLRenderer } from 'chessboard/renderers/webgl/base';\n\n/**\n * Flips the board.\n */\nexport function flipBoard<T extends WebGLRenderer.State>(\n  instance: WebGLRenderer.Instance<T>,\n  shouldFlip: boolean,\n): void {\n  const { state, methods } = instance;\n\n  if (state.isBoardFlipped === shouldFlip) {\n    return;\n  }\n\n  state.isBoardFlipped = shouldFlip;\n\n  methods.flipBoard(state, shouldFlip);\n}\n","import type { WebGLRenderer } from 'chessboard/renderers/webgl/base';\n\n/**\n * Toggle board disabled boolean\n */\nexport function setBoardEnabled<T extends WebGLRenderer.State>(\n  instance: WebGLRenderer.Instance<T>,\n  enabled: boolean,\n): void {\n  const { state } = instance;\n\n  state.isBoardEnabled = enabled;\n}\n","import type { WebGLRenderer } from 'chessboard/renderers/webgl/base';\n\n/**\n * Remove the analysis overlay.\n */\nexport function removeAnalysisOverlay<T extends WebGLRenderer.State>(\n  instance: WebGLRenderer.Instance<T>,\n): void {\n  const { state, methods } = instance;\n\n  methods.removeAnalysisOverlay(state);\n}\n","import { Constants } from 'chessboard/renderers/webgl/base/constants';\nimport type { WebGLRenderer } from 'chessboard/renderers/webgl/base';\n\n/**\n * Resizes the board.\n */\nexport function resize<T extends WebGLRenderer.State>(instance: WebGLRenderer.Instance<T>): void {\n  const { state, methods } = instance;\n  const { width, height } = state.containerEl.getBoundingClientRect();\n\n  state.viewSize.width = width || Constants.Board.DefaultWidth;\n  state.viewSize.height = height || Constants.Board.DefaultHeight;\n\n  methods.updateViewSize(state, state.viewSize);\n}\n","import type { Board } from 'chessboard/model/board/types';\nimport type { WebGLRenderer } from 'chessboard/renderers/webgl/base';\n\n/**\n * Set board coordinates.\n */\nexport function setBoardCoordinates<T extends WebGLRenderer.State>(\n  instance: WebGLRenderer.Instance<T>,\n  {\n    position,\n    flipped,\n  }: {\n    position: Board.CoordinatesPositions;\n    flipped: boolean;\n  },\n): void {\n  const { state, methods } = instance;\n\n  methods.updateBoardCoordinates(state, { flipped, position });\n}\n","const rgbaRegex = /^rgba?\\((\\d+),\\s*(\\d+),\\s*(\\d+)(?:,\\s*((\\d|\\.)+))?\\)$/;\n\n/**\n * Get a hex color from rgba or rgb.\n */\nexport function rgbToHex(rgb) {\n  if (rgb.search('rgb') === -1) {\n    return rgb;\n  }\n\n  const matches = rgb.match(rgbaRegex);\n\n  return `#${hexValue(matches[1])}${hexValue(matches[2])}${hexValue(matches[3])}`;\n}\n\n/**\n * Get opacity from rgba.\n */\nexport function rgbaToOpacity(rgba) {\n  if (rgba.search('rgba') === -1) {\n    return 1;\n  }\n\n  return parseFloat(rgba.match(rgbaRegex)[4]);\n}\n\n/**\n * Get hex notation.\n */\nfunction hexValue(rgb) {\n  return `0${parseInt(rgb, 10).toString(16)}`.slice(-2);\n}\n","import { getFileRankFromSan } from 'chessboard/model/board/get-file-rank-from-san';\nimport { getArrowColor } from 'chessboard/model/arrows/get-arrow-color';\nimport type { KeyedArrow } from 'chessboard/plugins/arrows/config/types';\nimport { rgbToHex, rgbaToOpacity } from 'utils/colors/convert-color';\nimport type { WebGLRenderer } from 'chessboard/renderers/webgl/base';\n\n/**\n * Add arrows on the board.\n */\nexport function addArrows<T extends WebGLRenderer.State>(\n  instance: WebGLRenderer.Instance<T>,\n  arrows: KeyedArrow[],\n): void {\n  const { state, methods } = instance;\n  const { options } = state;\n\n  arrows.forEach((arrow) => {\n    const { data, key } = arrow;\n    const { color, from, opacity, to } = data;\n\n    if (state.arrows[key]) {\n      methods.removeArrow(state, state.arrows[key]);\n\n      delete state.arrows[key];\n    }\n\n    const fromFileRank = getFileRankFromSan(from);\n    const toFileRank = getFileRankFromSan(to);\n\n    const fromFileDiff = Math.abs(fromFileRank.file - toFileRank.file);\n    const fromRankDiff = Math.abs(fromFileRank.rank - toFileRank.rank);\n\n    const isKnight =\n      (fromFileDiff === 1 && fromRankDiff === 2) || (fromFileDiff === 2 && fromRankDiff === 1);\n\n    const arrowColor = getArrowColor(color, options.arrowColors);\n\n    const arrowInfo = {\n      color: rgbToHex(arrowColor),\n      from: fromFileRank,\n      isKnight,\n      to: toFileRank,\n      opacity: opacity || rgbaToOpacity(arrowColor),\n    };\n\n    const arrowState = {\n      info: arrowInfo,\n      obj: methods.createArrowObj(state, arrowInfo),\n    };\n\n    methods.addArrow(state, arrowState);\n\n    state.arrows[key] = arrowState;\n  });\n}\n","import type { KeyedArrow } from 'chessboard/plugins/arrows/config/types';\nimport type { WebGLRenderer } from 'chessboard/renderers/webgl/base';\n\n/**\n * Remove arrows from the board.\n */\nexport function removeArrows<T extends WebGLRenderer.State>(\n  instance: WebGLRenderer.Instance<T>,\n  arrows: KeyedArrow[],\n): void {\n  const { state, methods } = instance;\n\n  arrows.forEach((arrow) => {\n    const { key } = arrow;\n\n    methods.removeArrow(state, state.arrows[key]);\n\n    delete state.arrows[key];\n  });\n}\n","import { Game } from 'chessboard/model/game/types';\nimport type { KeyedHighlight } from 'chessboard/plugins/highlights/config/types';\nimport type { WebGLRenderer } from 'chessboard/renderers/webgl/base';\nimport { squareToPiecePosition } from 'chessboard/renderers/webgl/base/utils';\n\n/**\n * Add highlights to the board.\n */\nexport function addHighlights<T extends WebGLRenderer.State>(\n  instance: WebGLRenderer.Instance<T>,\n  highlightsToAdd: KeyedHighlight[],\n): void {\n  const { state, methods, animationMethods } = instance;\n  const { highlights } = state;\n\n  highlightsToAdd.forEach((highlightToAdd) => {\n    const { color, opacity, square, turn, type } = highlightToAdd.data;\n\n    if (highlights[square]) {\n      methods.removeHighlight(state, highlights[square]);\n\n      delete highlights[square];\n    }\n\n    const highlightInfo = {\n      color: color || Game.Highlight.Defaults.Color,\n      opacity,\n      position: squareToPiecePosition(instance, square),\n      square,\n      turn,\n      type,\n    };\n\n    const highlight = {\n      info: highlightInfo,\n      obj:\n        animationMethods.createHighlightObj?.(state, highlightInfo) ||\n        methods.createHighlightObj(state, highlightInfo),\n    };\n\n    methods.addHighlight(state, highlight);\n\n    animationMethods.showHighlight?.(state, highlight);\n\n    highlights[square] = highlight;\n  });\n}\n","import type { Board } from 'chessboard/model/board/types';\nimport { Game } from 'chessboard/model/game/types';\nimport type { KeyedBlinkingHighlight } from 'chessboard/plugins/highlights/config/types';\nimport { squareToPiecePosition } from 'chessboard/renderers/webgl/base/utils';\nimport type { WebGLRenderer } from 'chessboard/renderers/webgl/base';\n\n/**\n * Blink highlights.\n */\nexport function blinkHighlights<T extends WebGLRenderer.State>(\n  instance: WebGLRenderer.Instance<T>,\n  highlights: KeyedBlinkingHighlight[],\n): void {\n  highlights.forEach((highlight) => {\n    const {\n      data: { square },\n    } = highlight;\n\n    blinkHighlight(instance, { blinkInfo: highlight, square });\n  });\n}\n\n/**\n * Blink a square.\n */\nfunction blinkHighlight<T extends WebGLRenderer.State>(\n  instance: WebGLRenderer.Instance<T>,\n  {\n    blinkInfo,\n    square,\n  }: {\n    blinkInfo: KeyedBlinkingHighlight;\n    square: Board.SanSquare;\n  },\n) {\n  const { state, methods, animationMethods } = instance;\n  const { blinkingHighlights } = state;\n  const { color, opacity, interval, times } = blinkInfo.data;\n\n  if (blinkingHighlights[square]) {\n    methods.removeHighlight(state, blinkingHighlights[square]);\n\n    delete blinkingHighlights[square];\n  }\n\n  const highlightInfo = {\n    color: color || Game.Highlight.Defaults.Color,\n    opacity,\n    position: squareToPiecePosition(instance, square),\n    square: square as Board.SanSquare,\n  };\n\n  const highlight = {\n    info: highlightInfo,\n    obj: methods.createHighlightObj(state, highlightInfo),\n  };\n\n  methods.addHighlight(state, highlight);\n\n  animationMethods\n    .blinkHighlight(state, {\n      interval,\n      highlight,\n      times,\n    })\n    .onEnd(() => {\n      methods.removeHighlight(state, highlight);\n\n      delete blinkingHighlights[square];\n    });\n\n  blinkingHighlights[square] = highlight;\n\n  if (state.options.test) {\n    (<any>highlightInfo).testBlinkInfo = { interval, times };\n  }\n}\n","import type { WebGLRenderer } from 'chessboard/renderers/webgl/base';\n\n/**\n * Hide the hover square.\n */\nexport function hideHoverSquare<T extends WebGLRenderer.State>(\n  instance: WebGLRenderer.Instance<T>,\n): void {\n  const { state, methods, animationMethods } = instance;\n\n  if (animationMethods.hideHoverSquare) {\n    animationMethods.hideHoverSquare(state);\n  } else {\n    methods.hideHoverSquare(state);\n  }\n}\n","import type { KeyedHighlight } from 'chessboard/plugins/highlights/config/types';\nimport type { WebGLRenderer } from 'chessboard/renderers/webgl/base';\n\n/**\n * Remove highlights from the board.\n */\nexport function removeHighlights<T extends WebGLRenderer.State>(\n  instance: WebGLRenderer.Instance<T>,\n  highlightsToRemove: KeyedHighlight[],\n): void {\n  const { state, methods, animationMethods } = instance;\n  const { highlights } = state;\n\n  highlightsToRemove.forEach((highlightToRemove) => {\n    const { square } = highlightToRemove.data;\n\n    const highlight = highlights[square];\n\n    if (animationMethods.hideHighlight) {\n      animationMethods.hideHighlight(state, highlight).onEnd(() => {\n        methods.removeHighlight(state, highlight);\n      });\n    } else {\n      methods.removeHighlight(state, highlight);\n    }\n\n    delete highlights[square];\n  });\n}\n","import type { Board } from 'chessboard/model/board/types';\nimport type { WebGLRenderer } from 'chessboard/renderers/webgl/base';\nimport { squareToPiecePosition } from 'chessboard/renderers/webgl/base/utils';\n\n/**\n * Show the hover square.\n */\nexport function showHoverSquare<T extends WebGLRenderer.State>(\n  instance: WebGLRenderer.Instance<T>,\n  square: Board.SanSquare,\n): void {\n  const { state, methods, animationMethods } = instance;\n  const position = squareToPiecePosition(instance, square);\n\n  if (animationMethods.showHoverSquare) {\n    animationMethods.showHoverSquare?.(state, position);\n  } else {\n    methods.showHoverSquare(state, position);\n  }\n}\n","import type { Board } from 'chessboard/model/board/types';\nimport { WebGLRenderer } from 'chessboard/renderers/webgl/base';\nimport { animateItem } from 'chessboard/renderers/webgl/base/animation';\n\n/**\n * Remove hints from the board.\n */\nexport function removeHints<T extends WebGLRenderer.State>(\n  instance: WebGLRenderer.Instance<T>,\n  squares: Board.SanSquare[],\n): void {\n  const { state, methods, animationMethods } = instance;\n  const { hints } = state;\n\n  squares.forEach((square) => {\n    const hint = hints[square];\n\n    if (animationMethods.hideHint) {\n      animateItem(state, {\n        item: hint,\n        type: WebGLRenderer.ItemAnimation.Type.Hide,\n        animation: animationMethods.hideHint(state, hint),\n        onEnd: () => {\n          methods.removeHint(state, hint);\n        },\n      });\n    } else {\n      methods.removeHint(state, hint);\n    }\n\n    delete hints[square];\n  });\n}\n","import type { Board } from 'chessboard/model/board/types';\nimport { Constants } from 'chessboard/renderers/webgl/base/constants';\nimport { WebGLRenderer } from 'chessboard/renderers/webgl/base';\nimport { squareToPiecePosition } from 'chessboard/renderers/webgl/base/utils';\nimport type { Core } from 'chessboard/core/config/types';\nimport { animateItem } from 'chessboard/renderers/webgl/base/animation';\n\n/**\n * Add hints on the board.\n */\nexport function addHints<T extends WebGLRenderer.State>(\n  instance: WebGLRenderer.Instance<T>,\n  {\n    context,\n    squares,\n    type,\n  }: {\n    context: Core.Context;\n    squares: Board.SanSquare[];\n    type: WebGLRenderer.Hint.Type;\n  },\n): void {\n  const { state, methods, animationMethods } = instance;\n  const { hints } = state;\n\n  squares.forEach((square) => {\n    const hintInfo = {\n      color: <string>Constants.MoveHint.Color,\n      opacity: <number>Constants.MoveHint.Opacity,\n      position: squareToPiecePosition(instance, square),\n      square,\n      turn: context.api.getTurn(),\n      type,\n    };\n\n    const hintObj =\n      hintInfo.type === WebGLRenderer.Hint.Type.Capture\n        ? animationMethods.createCaptureHintObj?.(state, hintInfo) ||\n          methods.createCaptureHintObj(state, hintInfo)\n        : animationMethods.createMoveHintObj?.(state, hintInfo) ||\n          methods.createMoveHintObj(state, hintInfo);\n\n    const hint = {\n      info: hintInfo,\n      obj: hintObj,\n      activeAnimation: undefined,\n    };\n\n    methods.addHint(state, hint);\n\n    if (animationMethods.showHint) {\n      animateItem(state, {\n        item: hint,\n        type: WebGLRenderer.ItemAnimation.Type.Show,\n        animation: animationMethods.showHint(state, hint),\n      });\n    }\n\n    hints[square] = hint;\n  });\n}\n","import type { WebGLRenderer } from 'chessboard/renderers/webgl/base';\n\n/**\n * Close the promotion window.\n */\nexport function closePromotionWindow<T extends WebGLRenderer.State>(\n  instance: WebGLRenderer.Instance<T>,\n): void {\n  const { state, methods, animationMethods } = instance;\n\n  if (state.promotionWindowAnimation) {\n    state.animator.end(state.promotionWindowAnimation);\n    state.promotionWindowAnimation = null;\n  }\n\n  if (animationMethods.hidePromotionWindow) {\n    state.promotionWindowAnimation = animationMethods.hidePromotionWindow(state);\n\n    state.promotionWindowAnimation.onEnd(() => {\n      methods.closePromotionWindow(state);\n\n      state.promotionWindowAnimation = null;\n    });\n  } else {\n    methods.closePromotionWindow(state);\n  }\n\n  state.isPromotionWindowVisible = false;\n}\n","import { Core } from 'chessboard/core/config/types';\nimport type { Game } from 'chessboard/model/game/types';\nimport type { WebGLRenderer } from 'chessboard/renderers/webgl/base';\nimport { createCoreEvent } from 'chessboard/core/model/create-core-event';\n\n/**\n * Open the promotion window.\n */\nexport function openPromotionWindow<T extends WebGLRenderer.State>(\n  instance: WebGLRenderer.Instance<T>,\n  {\n    promotionMove,\n    context,\n  }: {\n    promotionMove: Game.Move.Model;\n    context: Core.Context;\n  },\n): void {\n  const { state, methods, animationMethods } = instance;\n\n  if (state.promotionWindowAnimation) {\n    state.animator.end(state.promotionWindowAnimation);\n    state.promotionWindowAnimation = null;\n  }\n\n  methods.openPromotionWindow(state, promotionMove).then((pieceType) => {\n    if (!state.isPromotionWindowVisible) {\n      return;\n    }\n\n    if (pieceType) {\n      context.run(\n        createCoreEvent(Core.BoardEvents.PromotionPiecePointerdown, { piece: pieceType }),\n      );\n    } else {\n      context.run(createCoreEvent(Core.BoardEvents.PromotionAreaClosePointerdown));\n    }\n  });\n\n  if (animationMethods.showPromotionWindow) {\n    state.promotionWindowAnimation = animationMethods.showPromotionWindow(state);\n    state.promotionWindowAnimation.onEnd(() => (state.promotionWindowAnimation = null));\n  }\n\n  state.isPromotionWindowVisible = true;\n}\n","import type { KeyedCustomItem } from 'chessboard/plugins/custom-items/config/types';\nimport type { WebGLRenderer } from 'chessboard/renderers/webgl/base';\nimport { squareToPiecePosition } from 'chessboard/renderers/webgl/base/utils';\n\n/**\n * Add custom items on the board.\n */\nexport function addCustomItems<T extends WebGLRenderer.State>(\n  instance: WebGLRenderer.Instance<T>,\n  itemsToAdd: KeyedCustomItem[],\n): void {\n  const { state, methods } = instance;\n  const { customItems } = state;\n\n  itemsToAdd.forEach((itemToAdd) => {\n    const { color, frame, image, opacity, square, text, type, visualOrder } = itemToAdd.data;\n\n    const itemInfo = {\n      color,\n      image,\n      frame,\n      opacity,\n      position: squareToPiecePosition(instance, square),\n      square,\n      text,\n      type,\n      visualOrder,\n    };\n\n    const item = {\n      info: itemInfo,\n      obj: methods.createCustomItemObj(state, itemInfo),\n    };\n\n    methods.addCustomItem(state, item);\n\n    customItems[square] = item;\n  });\n}\n","import type { KeyedCustomItem } from 'chessboard/plugins/custom-items/config/types';\nimport type { WebGLRenderer } from 'chessboard/renderers/webgl/base';\n\n/**\n * Remove custom items from the board.\n */\nexport function removeCustomItems<T extends WebGLRenderer.State>(\n  instance: WebGLRenderer.Instance<T>,\n  itemsToRemove: KeyedCustomItem[],\n): void {\n  const { state, methods, animationMethods } = instance;\n  const { customItems } = state;\n\n  itemsToRemove.forEach((itemToRemove) => {\n    const {\n      data: { square },\n    } = itemToRemove;\n    const item = customItems[square];\n\n    if (item) {\n      if (animationMethods.hideCustomItem && !item.info.frame?.imageAnimated) {\n        animationMethods.hideCustomItem(state, item).onEnd(() => {\n          methods.removeCustomItem(state, item);\n        });\n      } else {\n        methods.removeCustomItem(state, item);\n      }\n    }\n\n    delete customItems[square];\n  });\n}\n","import type { KeyedEffect } from 'chessboard/plugins/effects/config/types';\nimport type { WebGLRenderer } from 'chessboard/renderers/webgl/base';\nimport { squareToPiecePosition } from 'chessboard/renderers/webgl/base/utils';\nimport type { Effects } from 'chessboard/model/effects/types';\nimport type { Core } from 'chessboard/core/config/types';\n\n/**\n * Add effects on the board.\n */\nexport function addEffects<T extends WebGLRenderer.State>(\n  instance: WebGLRenderer.Instance<T>,\n  effectsToAdd: KeyedEffect[],\n  translations: Effects.Translations,\n  context: Core.Context,\n): void {\n  const { state, methods } = instance;\n  const { effects } = state;\n\n  effectsToAdd.forEach((effectToAdd) => {\n    const { square, type, animated } = effectToAdd.data;\n\n    const effectInfo: WebGLRenderer.Effect.Info = {\n      position: squareToPiecePosition(instance, square),\n      square,\n      type,\n      effect: effectToAdd,\n    };\n\n    const createEffectObj = animated ? methods.createEffectObjAnimated : methods.createEffectObj;\n    const effectObject = createEffectObj(state, effectInfo, translations, context);\n\n    const effect = {\n      animated: Boolean(animated),\n      info: effectInfo,\n      obj: effectObject,\n    };\n\n    effectObject.forEach((obj) => {\n      methods.addEffect(state, { ...effect, obj });\n    });\n\n    effects[square] = effect;\n  });\n}\n","import type { KeyedEffect } from 'chessboard/plugins/effects/config/types';\nimport type { WebGLRenderer } from 'chessboard/renderers/webgl/base';\n\n/**\n * Remove effects from the board.\n */\nexport function removeEffects<T extends WebGLRenderer.State>(\n  instance: WebGLRenderer.Instance<T>,\n  effectsToAdd: KeyedEffect[],\n): void {\n  const { state, methods } = instance;\n  const { effects } = state;\n\n  effectsToAdd.forEach((effectToAdd) => {\n    const { square } = effectToAdd.data;\n\n    effects[square]?.obj.forEach((obj) => methods.removeEffect(state, { ...effects[square], obj }));\n\n    delete effects[square];\n  });\n}\n","import type JCE from '@chesscom/js-chess-engine';\nimport type { WebGLRenderer } from 'chessboard/renderers/webgl/base';\n\n/**\n * Add effects on the board.\n */\nexport function fadeOutEffect<T extends WebGLRenderer.State>(\n  instance: WebGLRenderer.Instance<T>,\n  square: JCE.SanSquare,\n): Promise<void> {\n  const { state, methods } = instance;\n  return methods.fadeOutEffect(state, square);\n}\n","import { ThemeTakeover } from 'chessboard/plugins/theme-takeover/config/types';\nimport type { WebGLRenderer } from 'chessboard/renderers/webgl/base';\n\n/**\n * Starts theme takeover\n */\nexport function startTakeover<T extends WebGLRenderer.State>(\n  instance: WebGLRenderer.Instance<T>,\n  takeoverInfo: ThemeTakeover.StartParams,\n): void {\n  const { state, methods } = instance;\n\n  if (takeoverInfo.swipePercent === ThemeTakeover.SwipePercent.Full) {\n    methods.removeTakeover(state);\n  } else if (takeoverInfo.swipePercent === ThemeTakeover.SwipePercent.Half) {\n    methods.removeTakeoverByType(state, takeoverInfo.swipeDirection);\n    methods.removeTakeoverByType(state, ThemeTakeover.SwipePercent.Full);\n  }\n\n  const takeoverObject = methods.createTakeover(state, takeoverInfo);\n  methods.addTakeover(state, takeoverObject);\n\n  state.takeover.push({\n    info: takeoverInfo,\n    obj: takeoverObject,\n  });\n}\n","import type { WebGLRenderer } from 'chessboard/renderers/webgl/base';\n\n/**\n * Starts theme takeover\n */\nexport function endTakeover<T extends WebGLRenderer.State>(\n  instance: WebGLRenderer.Instance<T>,\n): void {\n  instance.methods.endTakeover(instance.state);\n}\n","import type { WebGLRenderer } from 'chessboard/renderers/webgl/base';\n\n/**\n * Clears theme takeover\n */\nexport function clearTakeover<T extends WebGLRenderer.State>(\n  instance: WebGLRenderer.Instance<T>,\n): void {\n  const { state, methods } = instance;\n\n  methods.removeTakeover(state);\n}\n","import type { Core } from 'chessboard/core/config/types';\nimport type { Board } from 'chessboard/model/board/types';\nimport type { Game } from 'chessboard/model/game/types';\nimport type {\n  DragPiece,\n  Renderer,\n  AnimationTypes,\n  AddEffectsData,\n} from 'chessboard/renderers/config/types';\nimport { WebGLRenderer } from 'chessboard/renderers/webgl/base';\nimport {\n  getCoordsFromSquare,\n  getPointerPosition,\n  getViewAspectRatio,\n  getWebGLCanvas,\n  handleWebGLContextLost,\n} from 'chessboard/renderers/webgl/base/main';\nimport { init } from 'chessboard/renderers/webgl/base/main/init';\nimport { destroy } from 'chessboard/renderers/webgl/base/main/destroy';\nimport { isAnimating } from 'chessboard/renderers/webgl/base/animation/is-animating';\nimport { getPieces } from 'chessboard/renderers/webgl/base/pieces';\nimport { dragPiece } from 'chessboard/renderers/webgl/base/pieces/drag-piece';\nimport { changePiecesStyle } from 'chessboard/renderers/webgl/base/pieces/change-pieces-style';\nimport { undoMove } from 'chessboard/renderers/webgl/base/pieces/undo-move';\nimport { removePiece } from 'chessboard/renderers/webgl/base/pieces/remove-piece';\nimport { dropPiece } from 'chessboard/renderers/webgl/base/pieces/drop-piece';\nimport { illegalMove } from 'chessboard/renderers/webgl/base/pieces/illegal-move';\nimport { loadPieces } from 'chessboard/renderers/webgl/base/pieces/load-pieces';\nimport { makeMove } from 'chessboard/renderers/webgl/base/pieces/make-move';\nimport {\n  addAnalysisOverlay,\n  changeBoardStyle,\n  fadeSetup,\n  flipBoard,\n  setBoardEnabled,\n  removeAnalysisOverlay,\n  resize,\n  setBoardCoordinates,\n} from 'chessboard/renderers/webgl/base/board';\nimport { addArrows, removeArrows } from 'chessboard/renderers/webgl/base/arrows';\nimport {\n  addHighlights,\n  blinkHighlights,\n  hideHoverSquare,\n  removeHighlights,\n  showHoverSquare,\n} from 'chessboard/renderers/webgl/base/highlights';\nimport { removeHints } from 'chessboard/renderers/webgl/base/hints/remove-hints';\nimport { addHints } from 'chessboard/renderers/webgl/base/hints/add-hints';\nimport {\n  closePromotionWindow,\n  openPromotionWindow,\n} from 'chessboard/renderers/webgl/base/promotion-window';\nimport { addCustomItems, removeCustomItems } from 'chessboard/renderers/webgl/base/custom-items';\nimport { addEffects, fadeOutEffect, removeEffects } from 'chessboard/renderers/webgl/base/effects';\nimport {\n  clearTakeover,\n  startTakeover,\n  endTakeover,\n} from 'chessboard/renderers/webgl/base/theme-takeover';\nimport type { KeyedCustomItem } from 'chessboard/plugins/custom-items/config/types';\nimport type { KeyedArrow } from 'chessboard/plugins/arrows/config/types';\nimport type { KeyedEffect } from 'chessboard/plugins/effects/config/types';\nimport type {\n  KeyedBlinkingHighlight,\n  KeyedHighlight,\n} from 'chessboard/plugins/highlights/config/types';\nimport type { ThemeTakeover } from 'chessboard/plugins/theme-takeover/config/types';\n\n/**\n * Create a WebGL board renderer instance.\n */\nexport function createWebGLRendererInstance<T extends WebGLRenderer.State>(\n  params: WebGLRenderer.Params<T>,\n): Renderer.Model {\n  const instance = init(params);\n\n  return {\n    addAnalysisOverlay: () => addAnalysisOverlay(instance),\n    addArrows: (arrows: KeyedArrow[]) => addArrows(instance, arrows),\n    addCaptureHints: (squares: Board.SanSquare[], context) => {\n      addHints(instance, { context, squares, type: WebGLRenderer.Hint.Type.Capture });\n    },\n    addCustomItems: (items: KeyedCustomItem[]) => addCustomItems(instance, items),\n    addEffects: ({ effects, translations }: AddEffectsData, context: Core.Context) => {\n      addEffects(instance, effects, translations, context);\n    },\n    addMoveHints: (squares: Board.SanSquare[], context) => {\n      addHints(instance, { context, squares, type: WebGLRenderer.Hint.Type.Move });\n    },\n    addHighlights: (highlights: KeyedHighlight[]) => {\n      addHighlights(instance, highlights);\n    },\n    animationComplete: (animationType: AnimationTypes) => animationType && Promise.resolve(),\n    areAssetsLoaded: () => instance.state.assetsLoaded,\n    blinkHighlights: (blinkingHighlights: KeyedBlinkingHighlight[]) => {\n      blinkHighlights(instance, blinkingHighlights);\n    },\n    closePromotionWindow: () => closePromotionWindow(instance),\n    createRenderer: createWebGLRendererInstance,\n    destroy: () => destroy(instance),\n    dragPiece: (piece: DragPiece) => dragPiece(instance, piece),\n    dropPiece: (square: Board.SanSquare) => dropPiece(instance, square),\n    ...params.emitter,\n    extendRenderer: () => {},\n    fadeSetup: (context) => fadeSetup(instance, context.options.fadeSetup),\n    flipBoard: (shouldFlip: boolean) => flipBoard(instance, shouldFlip),\n    getCoordsFromSquare: (square: Board.SanSquare) => getCoordsFromSquare(instance, square),\n    getPieces: () => getPieces(instance),\n    getPieceStyles: instance.methods.getPieceStyles,\n    getPointerPosition: ({ event }: { event: MouseEvent }) => getPointerPosition(instance, event),\n    getRendererOptions: () => params,\n    getBoardContainerAspectRatio: () => getViewAspectRatio(instance),\n    getWebGLCanvas: () => getWebGLCanvas(instance),\n    handleWebGLContextLost: () => handleWebGLContextLost(instance),\n    hideHoverSquare: () => hideHoverSquare(instance),\n    illegalMove: (kingInCheck: false | Board.SanSquare) => illegalMove(instance, kingInCheck),\n    isAnimating: (animationType?: AnimationTypes) => isAnimating(instance, animationType),\n    loadPieces: ({ pieces, reloadAll }: { pieces: Game.Piece.Collection; reloadAll?: boolean }) => {\n      loadPieces(instance, { piecesInfo: pieces, reloadAll });\n    },\n    makeMove: (move: Game.Move.Extended, context: Core.Context) => {\n      makeMove(instance, { attackedKingSquare: context.api.isCheck() || undefined, move });\n    },\n    name: params.name,\n    openPromotionWindow: (promotionMove: Game.Move.Model, context: Core.Context) => {\n      openPromotionWindow(instance, { context, promotionMove });\n    },\n    removeAnalysisOverlay: () => removeAnalysisOverlay(instance),\n    removeArrows: (arrows: KeyedArrow[]) => removeArrows(instance, arrows),\n    removeCustomItems: (customItems: KeyedCustomItem[]) => {\n      removeCustomItems(instance, customItems);\n    },\n    removeEffects: (effects: KeyedEffect[]) => removeEffects(instance, effects),\n    fadeOutEffect: (square) => fadeOutEffect(instance, square),\n    removeHints: (squares: Board.SanSquare[]) => removeHints(instance, squares),\n    removePiece: (square: Board.SanSquare) => removePiece(instance, { square }),\n    removeHighlights: (highlights: KeyedHighlight[]) => removeHighlights(instance, highlights),\n    resize: () => resize(instance),\n    setBoardEnabled: (enabled: boolean) => setBoardEnabled(instance, enabled),\n    setCoordinates: (coordinates) => setBoardCoordinates(instance, coordinates),\n    showHoverSquare: (square: Board.SanSquare) => showHoverSquare(instance, square),\n    undoMove: (move: Game.Move.ExtendedNode, context: Core.Context) => {\n      undoMove(instance, { attackedKingSquare: context.api.isCheck() || undefined, move });\n    },\n    updateBoardImage: (context: Core.Context) => {\n      changeBoardStyle(instance, context);\n    },\n    updatePieceBaseImage: (context: Core.Context, fallback = false) => {\n      changePiecesStyle(instance, context, fallback);\n    },\n\n    startTakeover: (takeoverInfo: ThemeTakeover.StartParams) => {\n      startTakeover(instance, takeoverInfo);\n    },\n    endTakeover: () => endTakeover(instance),\n    clearTakeover: () => clearTakeover(instance),\n  };\n}\n","import type { Board } from 'chessboard/model/board/types';\nimport type { WebGLRenderer } from 'chessboard/renderers/webgl/base';\n\n/**\n * Find a piece based on a SAN square.\n */\nexport function findPieceFromSquare<T extends WebGLRenderer.State>(\n  state: T,\n  square: Board.SanSquare,\n): WebGLRenderer.Piece.Model<any> | null {\n  const foundPiece = Object.values(state.pieces).find((piece) => {\n    if (piece.info.square === square) {\n      return true;\n    }\n\n    return false;\n  });\n\n  return foundPiece || null;\n}\n","/**\n * Restrict a number between a range.\n */\nexport function limitNumberWithinRange(value: number, range: { min: number; max: number }) {\n  return Math.min(Math.max(value, range.min), range.max);\n}\n","import type { Board } from 'chessboard/model/board/types';\n\n/**\n * Get the length from one point to another\n */\nexport function calculateArrowLength({\n  from,\n  to,\n}: {\n  from: Board.Coords;\n  to: Board.Coords;\n}): number {\n  return Math.sqrt((from.x - to.x) ** 2 + (from.y - to.y) ** 2);\n}\n","/**\n * Create an svg icon\n */\nexport function makeSvgIcon({ className = '', path = '', size = '24', viewBox = '0 0 18 19' }) {\n  return `\n    <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"${className}\" width=\"${size}\" height=\"${size}\" viewBox=\"${viewBox}\">\n      ${path}\n    </svg>\n  `;\n}\n","export namespace Constants {\n  export const enum Board {\n    DefaultWidth = 300,\n    DefaultHeight = 300,\n\n    DefaultDarkSquareColor = '#000000',\n    DefaultLightSquareColor = '#ffffff',\n  }\n\n  export const enum AnalysisOverlay {\n    Opacity = 0.2,\n  }\n\n  export const enum CustomItem {\n    Opacity = 0.8,\n\n    // The frame crop ratio based on its size.\n    FrameCropRatio = 0.9,\n  }\n\n  export const enum Effect {\n    // The size ratio based on square size.\n    SizeRatio = 0.4,\n\n    // The offset ratio from squares' intersection, based on square size.\n    OffsetRatio = 0.44,\n  }\n\n  export const enum MoveHint {\n    Color = '#000000',\n    Opacity = 0.1,\n\n    // The circle radius size ratio based on square size.\n    RadiusRatio = 0.16,\n  }\n\n  export const enum CaptureHint {\n    Color = MoveHint.Color,\n    Opacity = MoveHint.Opacity,\n\n    // The circle's outer radius size ratio based on square size.\n    OuterRadiusRatio = 0.5,\n\n    // The circle's inner radius size ratio based on square size.\n    InnerRadiusRatio = 0.41,\n  }\n\n  export const enum SVG {\n    // The size of the image used to convert the SVG to a texture.\n    ImageSize = 256,\n  }\n}\n","/**\n * Arrow styles\n */\nexport const arrowStyles = {\n  HEAD_HEIGHT: 4.5,\n  HEAD_WIDTH: 6.5,\n  TAIL_PADDING: 4.5,\n  WIDTH: 2.75,\n};\n\n/**\n * Valid length for a knight arrow\n */\nexport const KNIGHT_ARROW_LENGTH = 27.95084971874737;\n\n/**\n * Flipped knight arrows\n */\nexport const flippedKnightArrowSlopes = [0.5, -2];\n\n/**\n * Valid arrow slopes\n */\nexport const validArrowSlopes = [Infinity, 2, 1, 0.5, 0, -0.5, -1, -2, -Infinity];\n\n/**\n * Valid knight arrow slopes\n */\nexport const validKnightArrowSlopes = [2, 0.5, -0.5, -2];\n","import { PointerEvents } from 'chessboard/model/dom/get-pointer-events';\n\nexport const defaultX = -1;\nexport const defaultY = -1;\n\nlet lastX = defaultX;\nlet lastY = defaultY;\n\n/**\n * Get pure XY coordinates from event.\n * Useful because of many different devices/browsers/events.\n */\nexport function getXYFromEvent({ clientX, clientY, pointer, type, touches }: any): {\n  x: number;\n  y: number;\n} {\n  /**\n   * Since `touchend` event doesn't contain any coordinates, we need to save and get them\n   * from the previous events: `touchstart` and `touchmove`\n   */\n  const shouldTrack = type === PointerEvents.Touchmove || type === PointerEvents.Touchstart;\n  if (shouldTrack && touches.length > 0) {\n    lastX = touches[0].clientX;\n    lastY = touches[0].clientY;\n  }\n\n  if (type === PointerEvents.Touchend) {\n    return {\n      x: lastX,\n      y: lastY,\n    };\n  }\n\n  if (pointer) {\n    return {\n      x: pointer.x,\n      y: pointer.y,\n    };\n  }\n\n  if (touches && touches.length > 0) {\n    return {\n      x: touches[0].clientX,\n      y: touches[0].clientY,\n    };\n  }\n\n  return {\n    x: clientX ?? defaultX,\n    y: clientY ?? defaultY,\n  };\n}\n"],"names":["CustomItems","CustomItems2","Plugin2","Name","Plugin","Classes2","Classes","CustomItemType","VisualOrder","VisualOrder2","Targets2","Targets","Positions2","Positions","Types","Types2","findPieceFromFileRank","state","fileRank","square","getSanFromFileRank","findPieceFromSquare","easeInQuartic","t","easeInOutQuartic","Effects","Effects2","ClassNames2","ClassNames","calculateArrowSlope","from","to","slope","y","x","roundedSlope","Number","toFixed","getWebglAssetUrl","assetPath","urlParams","URLSearchParams","window","location","search","get","baseUrl","href","replace","paths","webglDataUrlDev","webglAssetPaths","webglDataUrl","getFileRankFromSan","san","file","toLowerCase","charCodeAt","rank","charAt","easeInQuadratic","easeOutQuadratic","easeInOutQuadratic","setSVGAttributes","svgMarkup","attrs","itemEl","document","createElement","innerHTML","svgEl","querySelector","color","style","fill","opacity","String","text","textEl","value","fontSize","fontFamily","outerHTML","getKnightArrowRotation","ThemeTakeover","ThemeTakeover2","SwipeDirection2","SwipeDirection","SwipePercent2","SwipePercent","Events2","Events","swipeInAnimationName","swipeOutAnimationName","SwipeMap","percent","duration","easing","in","out","easeOutCubic","easeLinear","alternative","Shadow","Background","ComponentShadow","Component","bestMove","blunder","book","brilliant","checkmateBlack","checkmateWhite","correct","critical","defeatBlack","defeatWhite","drawBlack","drawWhite","excellent","fastWin","freePiece","gamechanger","greatFind","forced","good","inaccuracy","incorrect","mate","miss","missedWin","mistake","resignBlack","resignWhite","sharp","takeback","threat","timeoutBlack","timeoutWhite","undo","winner","winnerWhite","interesting","warning","equal","EffectIcons","EffectTypes","Alternative","BestMove","Blunder","Book","Brilliant","CheckmateBlack","CheckmateWhite","Correct","Critical","DefeatWhite","DefeatBlack","DrawBlack","DrawWhite","Excellent","FastWin","Forced","FreePiece","Gamechanger","Good","GreatFind","Inaccuracy","Incorrect","Mate","Miss","MissedWin","Mistake","ResignBlack","ResignWhite","Sharp","Takeback","Threat","TimeoutBlack","TimeoutWhite","Undo","Winner","WinnerWhite","Interesting","Warning","Equal","Image","Star","TextBox","fromCharCode","toString","setTestData","el","keyVals","Object","entries","forEach","key","val","capitalizedKey","toUpperCase","slice","dataset","TestKeys","TestKeys2","TestElements","TestElements2","getBoardXYFromEvent","event","boardEl","boardRect","getBoundingClientRect","getXYFromEvent","left","top","WebGLRenderer","WebGLRenderer2","PixelRatio","devicePixelRatio","Piece2","Animation2","Type2","Type","Animation","Piece","Hint2","Hint","ItemAnimation2","ItemAnimation","calculateArrowRotation","length","calculateArrowLength","originalTo","vector1","vector2","cosine","clampedCosine","Math","max","min","radians","acos","degrees","floor","PI","getArrowColor","colorOptions","Game","Node","Marking","JCEColorsMap","default","getUndoMoveDetails","move","movedPieces","animate","nodeTargetSquare","rookMove","push","restoredPiece","captured","capturedStr","getOppositeColor","promoted","capturedPromotedPawn","EPCapturedSquare","type","promotedSquare","promotion","getCoordsFromSquare","instance","methods","boardPosition","fileRankToPosition","getViewPosition","positionToSquare","position","positionToFileRank","positionToSquarePercentage","squareSize","positionX","positionY","squarePosition","positionInsideSquare","getPointerPosition","containerEl","coords","viewPosition","normalizePointer","getBoardPosition","positionInsideBoard","positionToNearestSquare","coordsInsideBoard","coordsInsideSquare","squareInsideBoard","getViewAspectRatio","getWebGLCanvas","viewEl","handleWebGLContextLost","newViewEl","cloneNode","replaceWith","onWebGLContextLost","getPieces","keys","pieces","reduce","acc","info","isPositionInsideBoard","onMouseDoubleClick","pointer","insideBoard","_a","call","previousViewPosition","previousBoardPosition","onMouseWheel","eventHandled","deltaY","preventDefault","stopImmediatePropagation","endPieceAnimation","piece","animator","pieceAnimations","animData","id","animation","ended","end","isSecondaryButton","isTouchEvent","which","onPointerDown","animatedOverPiece","isRightDown","isRightButton","isBoardEnabled","down","secondaryDown","rightDown","downInsideBoard","animateItem","item","onEnd","activeAnimation","animatePiece","endedAnimation","endItemAnimation","isPieceAnimating","animations","values","i","findPieceFromPosition","findHintFromSquare","hints","find","hint","findHintFromFileRank","findHintFromPosition","onPointerMove","animationMethods","pieceOver","doPieceOverAnimation","hintOver","doHintOverAnimation","selectedPiece","overPiece","Over","pieceOut","Out","previousSquare","currentSquare","animatedOverHint","overHint","hintOut","onPointerUp","addEventListeners","eventListeners","pointerDown","pointerMove","pointerUp","addEventListener","Pointerdown","Pointermove","Pointerup","doubleClick","wheel","addToWindow","params","assign","JCE","updateAnimatedProperties","animatedProps","animatedPropsKeyframes","frameInfo","isTargetHTMLElement","keyframes","target","elapsedPercentage","fromValue","toValue","fromKeyframe","toKeyframe","keyframeElapsedInterval","property","createAnimation","data","repeat","getAnimatedProps","getAnimatedPropsKeyframes","endCallbacks","endTime","forcedEnd","deltaTime","elapsedInterval","HTMLElement","callback","repeatCount","started","startTime","keptAlive","Error","animatedPropsList","sort","a","b","parseInt","createAnimator","manualUpdate","playingAnimations","frameRequestId","frameTime","endAll","play","playingAnimationsCount","update","animationLoop","time","onAnimationStart","round","onAnimationUpdate","onAnimationEnd","requestAnimationFrame","indexOf","keepAlive","repeatDelay","Infinity","removeAnimation","delay","onStart","onUpdate","startAnimationLoop","animationIndex","splice","stopAnimationLoop","performance","now","cancelAnimationFrame","createBaseState","options","boardThemes","pieceThemes","attackedKing","arrows","assetsLoaded","blinkingHighlights","boardId","boardStyle","customItems","destroyed","effects","fadeSetupAnimation","flipCoordinates","highlights","hoverSquare","isBoardFlipped","flipped","enabled","isCheckmate","isPromotionWindowVisible","pieceStyle","Event","promotionWindowAnimation","viewSize","width","Constants","Board","DefaultWidth","height","DefaultHeight","takeover","updatePiecesVisuals","updatePieceVisuals","onPiecesVisualsChanged","loadAssets","Promise","all","then","appendChild","updateLoop","render","init","className","name","testElement","createState","lastPieceId","createHoverSquareObj","emitter","emit","Core","InstanceEvents","WebGLAssetsInitialized","classList","add","onAnimatedFrameReceived","test","setupTestData","Element","SiblingBoard","webglSiblingBoardState","webglBoardState","removeEventListeners","removeEventListener","destroy","parentNode","removeChild","remove","isAnimating","animationType","AnimationTypes","Move","Capture","Drop","Restore","includes","squareToPiecePosition","dragPiece","draggedPieceInfo","toSquare","Drag","setPiecePosition","onPieceDrag","changePiecesStyle","context","fallback","themeAssets","updatePiecesStyle","swapPiece","endAllPiecesAnimation","movePieces","moves","castling","isCastle","capturing","isCapture","piece1","piece2","King","Rook","moveTo","fromPosition","toPosition","userGeneratedDrop","dropPiece","movePiece","_a2","onPieceMoved","attackKing","KingAttack","oldPiece","removePiece","fromDrop","capturePiece","generatePieceId","addPiece","pieceInfo","obj","createPieceObj","piecePosition","undoMove","attackedKingSquare","drop","addedPiece","restorePiece","promotedPiece","Pawn","onPieceDrop","illegalMove","kingInCheck","kingPiece","loadPieces","piecesInfo","reloadAll","newPieceInfo","isDefined","filter","onPiecesLoaded","makeMove","Boolean","addAnalysisOverlay","changeBoardStyle","coordinates","updateBoardStyle","updateBoardCoordinates","colorUpdate","fadeSetup","fadeDuration","fadeInAllPieces","flipBoard","shouldFlip","setBoardEnabled","removeAnalysisOverlay","resize","updateViewSize","setBoardCoordinates","rgbaRegex","rgbToHex","rgb","matches","match","hexValue","rgbaToOpacity","rgba","parseFloat","addArrows","arrow","removeArrow","fromFileRank","toFileRank","fromFileDiff","abs","fromRankDiff","isKnight","arrowColor","arrowColors","arrowInfo","arrowState","createArrowObj","addArrow","removeArrows","addHighlights","highlightsToAdd","highlightToAdd","turn","removeHighlight","highlightInfo","Highlight","Defaults","Color","highlight","createHighlightObj","addHighlight","_b","showHighlight","blinkHighlights","blinkHighlight","blinkInfo","interval","times","testBlinkInfo","hideHoverSquare","removeHighlights","highlightsToRemove","highlightToRemove","hideHighlight","showHoverSquare","removeHints","squares","hideHint","Hide","removeHint","addHints","hintInfo","MoveHint","Opacity","api","getTurn","hintObj","createCaptureHintObj","createMoveHintObj","addHint","showHint","Show","closePromotionWindow","hidePromotionWindow","openPromotionWindow","promotionMove","pieceType","run","createCoreEvent","BoardEvents","PromotionPiecePointerdown","PromotionAreaClosePointerdown","showPromotionWindow","addCustomItems","itemsToAdd","itemToAdd","frame","image","visualOrder","itemInfo","createCustomItemObj","addCustomItem","removeCustomItems","itemsToRemove","itemToRemove","hideCustomItem","imageAnimated","removeCustomItem","addEffects","effectsToAdd","translations","effectToAdd","animated","effectInfo","effect","createEffectObj","createEffectObjAnimated","effectObject","addEffect","removeEffects","removeEffect","fadeOutEffect","startTakeover","takeoverInfo","swipePercent","Full","removeTakeover","Half","removeTakeoverByType","swipeDirection","takeoverObject","createTakeover","addTakeover","endTakeover","clearTakeover","createWebGLRendererInstance","addCaptureHints","items","addMoveHints","animationComplete","resolve","areAssetsLoaded","createRenderer","extendRenderer","getPieceStyles","getRendererOptions","getBoardContainerAspectRatio","isCheck","setCoordinates","updateBoardImage","updatePieceBaseImage","foundPiece","limitNumberWithinRange","range","sqrt","makeSvgIcon","path","size","viewBox","Constants2","Board2","AnalysisOverlay2","AnalysisOverlay","CustomItem2","CustomItem","Effect2","Effect","MoveHint2","CaptureHint2","CaptureHint","SVG2","SVG","arrowStyles","HEAD_HEIGHT","HEAD_WIDTH","TAIL_PADDING","WIDTH","KNIGHT_ARROW_LENGTH","flippedKnightArrowSlopes","validKnightArrowSlopes","defaultX","defaultY","lastX","lastY","clientX","clientY","touches","shouldTrack","PointerEvents","Touchmove","Touchstart","Touchend"],"sourceRoot":""}